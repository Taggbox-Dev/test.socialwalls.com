{"version":3,"file":"static/js/6691.db9f794f.chunk.js","mappings":"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","sources":["app/Display/analytics-new/components/content/authorInfo.js","app/Display/analytics-new/components/content/topeventVoice.js","app/Display/analytics-new/layout/common/connectButton.js","app/Display/analytics-new/layout/common/multiPostMedia.js","app/Display/analytics-new/layout/common/noData.js","app/Display/analytics-new/layout/common/postMedia.js","app/Display/analytics-new/layout/common/sectionHeading.js","app/Display/analytics-new/layout/common/seeMoreModal.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { getFirstLetterOfString, manageSpace } from \"../../../../../utils\";\r\nimport moment from \"moment\";\r\n\r\nconst AuthorInfo = (props) => {\r\n  const [imageError, setImageError] = useState(true);\r\n\r\n  return (\r\n    <div className={`d-flex align-items-center ${!props.topperfoming ? 'w-50' : 'me-10'}`}>\r\n      <div className=\"position-relative\">\r\n        <div className=\"symbol symbol-35 symbol-light me-3 con_user_img cursor-pointer rounded-circle overflow-hidden\">\r\n          {imageError ? (\r\n            <div className=\"symbol-image\">{getFirstLetterOfString(props.username)}</div>\r\n          ) : (\r\n            <img\r\n              onError={() => setImageError(true)}\r\n              src={props.picture}\r\n              className=\"img-fluid\"\r\n              width={\"20px\"}\r\n              height={\"20px\"}\r\n            />\r\n          )}\r\n        </div>\r\n        {props.isIcon ? (\r\n          <div className=\"m_social_icon_new card-shadow position-absolute bg-white rounded-circle d-flex align-items-center justify-content-center\">\r\n            <i className={`fab ${props.isIcon} font-size-sm`}></i>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n      <div class=\"d-flex text-left flex-column conn_user_info cursor-pointer\">\r\n        <p class=\"text-dark mb-0 font-weight-boldest overflow-hidden text-nowrap text-ellipsis author_name text-capitalize w-100\">\r\n          {props.username}\r\n        </p>\r\n        <p class=\"m-0\">\r\n          <small class=\"overflow-hidden text-nowrap text-ellipsis post_count me-2 \">\r\n            {props.username ? `@${manageSpace(props.username)}` : null}\r\n          </small>\r\n\r\n         { props.date ? \r\n          <small class=\"overflow-hidden text-nowrap text-ellipsis followers_count \">\r\n            {moment(new Date(props.date * 1000)).fromNow()}\r\n          </small> : null }\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(AuthorInfo);\r\n","    import { Card, Table } from \"react-bootstrap\";\r\n    import \"../../assets/css/slide.scss\";\r\n    import React, { Suspense, useState } from \"react\";  \r\n    import ConnectButton from \"../../layout/common/connectButton\";\r\n    import AuthorInfo from \"./authorInfo\";\r\n    import NoData from \"../../layout/common/noData\";\r\n    import SeeMoreModal from \"../../layout/common/seeMoreModal\";\r\n    import { getEventVoicesMore } from \"../../../../../actions/analyticsNew\";\r\n    import SectionHeading from \"../../layout/common/sectionHeading\";\r\n    import MultiPostMedia from \"../../layout/common/multiPostMedia\";\r\n\r\n    const LeaderbordPopup = React.lazy(() =>\r\n     import(\"../../layout/popup/leaderbordPopup\")\r\n     );\r\n  \r\n    const TopeventSekleton = React.lazy(() =>\r\n        import(\"../../layout/skeleton/topeventSekleton\")\r\n        );\r\n\r\n    const TopeventVoice = (props) => {\r\n   \r\n    const [show, setShow] = useState(false)\r\n\r\n    const handlePopup = event => {  \r\n      setShow(event)\r\n    }\r\n\r\n    const { topeventVoices, top_event_loader } = props;\r\n\r\n    return (\r\n        <>\r\n        <Card className=\"sw-card-custom gutter-b card-shadow mb-5\">\r\n          <SectionHeading title={'Top Event Voices'} total={topeventVoices.total} handlePopup={handlePopup} />\r\n          <Card.Body className=\"py-5 px-0\">\r\n            <Table className=\"mb-0\" responsive>\r\n            <thead>\r\n                <tr>\r\n                <th style={{ width: \"10%\" }}>\r\n                    S No.\r\n                </th>\r\n                <th style={{ width: \"30%\" }}>\r\n                    Name\r\n                </th>\r\n                <th style={{ width: \"20%\" }}>\r\n                    No. of Followers\r\n                </th>\r\n                <th style={{ width: \"20%\" }}>\r\n                    Recent Posts\r\n                </th>\r\n                <th style={{ width: \"20%\" }}></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                { top_event_loader ? <TopeventSekleton/> : topeventVoices && Object.keys(topeventVoices.data).length\r\n                ? topeventVoices.data.map((data,key) => {\r\n                    return (\r\n                        <tr className=\"border-top\">\r\n                            <td>\r\n                                <strong>{key+1}</strong>\r\n                            </td>\r\n                        <td>\r\n                          <AuthorInfo picture={data.image} username={data.author.name} isIcon={data.network.icon} />\r\n                        </td>\r\n                        <td>\r\n                            <strong>{data.postCount}</strong>\r\n                        </td>\r\n                        <td>\r\n                         <MultiPostMedia postsData={data.postsData} />   \r\n                        </td>\r\n                        <td>\r\n                          <ConnectButton link={data.links}/>\r\n                        </td>\r\n                        </tr>\r\n                    );\r\n                    })\r\n                  : <NoData status={1} col={5}/>\r\n                }\r\n            </tbody>\r\n            </Table>\r\n        </Card.Body>\r\n        </Card>\r\n\r\n       {topeventVoices.total>5 ? \r\n        <SeeMoreModal size={'lg'} showHide={show} handlePopup={handlePopup} title={'Leader Bord'}>\r\n        <Suspense fallback={<></>}>\r\n           <LeaderbordPopup moreData={getEventVoicesMore} {...props} />\r\n        </Suspense>  \r\n        </SeeMoreModal> : null }\r\n        </>\r\n    );\r\n    };\r\n\r\n    export default React.memo(TopeventVoice);;\r\n","    const ConnectButton = (props) => {\r\n\r\n    return (\r\n        <div className=\"conn_status_wrap text-end\">\r\n        <button\r\n            onClick={() => window.open(props.link)}\r\n            type=\"button\"\r\n            className=\"btn btn-primary btn-min-w btn-sm rounded\"\r\n        >\r\n            <span className=\"position-relative\">\r\n            <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"22.213\"\r\n                height=\"18\"\r\n                viewBox=\"0 0 22.213 18\"\r\n                className=\"h-75 align-self-end w-20 me-1\"\r\n            >\r\n                <g id=\"noun-talk-2902544\" transform=\"translate(-98.007 -75.786)\">\r\n                <path\r\n                    id=\"Path_6701\"\r\n                    data-name=\"Path 6701\"\r\n                    d=\"M103.686,84.417a1.084,1.084,0,1,1-.317-.766A1.084,1.084,0,0,1,103.686,84.417Zm2.9-1.084h0a1.084,1.084,0,1,0,.766.317,1.084,1.084,0,0,0-.766-.317Zm3.979,0h0a1.084,1.084,0,1,0,.766.317,1.084,1.084,0,0,0-.766-.317Zm9.659-5.711v8.172a1.839,1.839,0,0,1-1.616,1.823l.625,2.7a.617.617,0,0,1-1,.608l-3.07-2.625v.2a1.838,1.838,0,0,1-1.836,1.836h-9.463L100,93.638a.617.617,0,0,1-1-.608l.625-2.7A1.838,1.838,0,0,1,98.007,88.5V80.331a1.838,1.838,0,0,1,1.836-1.836h3.226v-.873a1.838,1.838,0,0,1,1.836-1.836h13.478a1.838,1.838,0,0,1,1.836,1.836Zm-6.3,2.709a.6.6,0,0,0-.6-.6H99.843a.6.6,0,0,0-.6.6V88.5a.6.6,0,0,0,.6.6h.552a.617.617,0,0,1,.6.756l-.375,1.621,2.607-2.229a.618.618,0,0,1,.4-.148h9.691a.6.6,0,0,0,.6-.6Zm5.063-2.709a.6.6,0,0,0-.6-.6H104.906a.6.6,0,0,0-.6.6V78.5h9.017a1.838,1.838,0,0,1,1.836,1.836v6.35l2.448,2.093-.375-1.621a.617.617,0,0,1,.6-.756h.553a.6.6,0,0,0,.6-.6Z\"\r\n                    fill=\"#ffffff\"\r\n                ></path>\r\n                </g>\r\n            </svg> \r\n            Connect \r\n            </span>\r\n        </button>\r\n        </div>\r\n    );\r\n    };\r\n\r\n    export default ConnectButton","    import React from \"react\";\r\n    import { Splide, SplideSlide, SplideTrack } from \"@splidejs/react-splide\";\r\n    import PostMedia from \"./postMedia\";\r\n\r\n    const MultiPostMedia = (props) => {\r\n    const settings = {\r\n        type: \"slide\",\r\n        rewind: false,\r\n        speed: 1000,\r\n        loop: true,\r\n        interval: 7000,\r\n        drag: true,\r\n        perPage: 4,\r\n        gap: 5,\r\n        autoplay: false,\r\n        padding: \"0\",\r\n        pagination: false,\r\n        arrows: true,\r\n    };\r\n\r\n    return props.postsData && Object.keys(props.postsData).length > 4 ? (\r\n        <Splide className=\"recent-post m-0\" hasTrack={false} options={settings}>\r\n        <SplideTrack>\r\n            {props.postsData.map((asset, index) => {\r\n            return (\r\n                <SplideSlide key={index}>\r\n                <PostMedia\r\n                    postFile={asset.postFile}\r\n                    postId={asset.postId}\r\n                    className={\"img-fluid\"}\r\n                />\r\n                </SplideSlide>\r\n            );\r\n            })}\r\n        </SplideTrack>\r\n        </Splide>\r\n    ) : (\r\n        props.postsData.map((asset, index) => {\r\n        return (\r\n            <PostMedia\r\n            postFile={asset.postFile}\r\n            postId={asset.postId}\r\n            className={\"img-fluid\"}\r\n            />\r\n        );\r\n        })\r\n    );\r\n    };\r\n\r\n    export default React.memo(MultiPostMedia);\r\n","import React from \"react\";\r\nimport { baseUrl } from \"../../../../../utils\";\r\n\r\nconst GetData = () => {\r\n  return (\r\n    <div className=\"placeholder-image py-10 d-flex flex-column justify-content-center\">\r\n      <div className=\"mb-3 text-center\">\r\n        <img\r\n          className=\"img-fluid graph-bg\"\r\n          src={baseUrl(`dashboard/analytic/image-placeholder.svg`)}\r\n          width={\"80px\"}\r\n          height={\"80px\"}\r\n        />\r\n      </div>\r\n      <div className=\"\">\r\n        <h5 class=\"text-gray-dark text-center\">No Data Available</h5>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NoData = (props) => {\r\n\r\n  return props.status ? (\r\n    <tr>\r\n      <td colSpan={props.col}>\r\n        <GetData />\r\n      </td>\r\n    </tr>\r\n  ) : (\r\n    <GetData />\r\n  );\r\n};\r\n\r\nexport default React.memo(NoData);\r\n","import React from \"react\";\r\nimport { NoCameraImgPost } from \"../../../../../actions/api\";\r\n\r\nconst PostMedia = (props) => {\r\n  return (\r\n    <img\r\n      id={`post_${props.postId}`}\r\n      onError={(e) => (e.target.src = NoCameraImgPost)}\r\n      src={props.postFile}\r\n      className={props.className}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(PostMedia);\r\n","import { Button, CardHeader, CardTitle } from \"react-bootstrap\";\r\nimport { baseUrl } from \"../../../../../utils\";\r\n\r\nconst SectionHeading = (props) => {\r\n  return (\r\n    <CardHeader className={`${props.section==1 ? 'p-0 border-0' : props.section==2 ? 'p-5' : 'px-5 pt-5 border-0 pb-0'}`}>\r\n      <CardTitle className=\"mb-0 d-flex align-items-center justify-content-between\">\r\n        <h6 class=\"card-label font-weight-bolder m-0\">\r\n         { props.icon ? <img src={baseUrl(`dashboard/analytic/${props.icon}.svg`)}  height={\"20px\"} width={\"20px\"} /> : null }  {props.title}</h6>\r\n         {props.total > 5 ? (\r\n          <Button\r\n            variant=\"link\"\r\n            className=\"p-0\"\r\n            onClick={() => props.handlePopup(true)}\r\n          >\r\n            See More\r\n          </Button>\r\n        ) : null}\r\n      </CardTitle>\r\n    </CardHeader>\r\n  );\r\n};\r\n\r\nexport default SectionHeading;\r\n","import React from \"react\";\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ButtonToolbar,\r\n    Col,\r\n    Container,\r\n    Row\r\n} from \"react-bootstrap\";\r\n\r\n\r\nexport default class SeeMoreModal extends React.Component {\r\n    render() {\r\n        const { showHide, handlePopup, title, children, size } = this.props;\r\n        return (\r\n            <Modal\r\n                show={showHide}\r\n                onHide={()=>handlePopup(false)}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                size={size}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"p-2\">\r\n                    <div className=\"more_container\">\r\n                        {children}\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n"],"names":["AuthorInfo","props","imageError","setImageError","useState","_jsxs","className","topperfoming","children","_jsx","getFirstLetterOfString","username","onError","src","picture","width","height","isIcon","class","manageSpace","date","moment","Date","fromNow","React","LeaderbordPopup","TopeventSekleton","TopeventVoice","show","setShow","handlePopup","event","topeventVoices","top_event_loader","_Fragment","Card","SectionHeading","title","total","Body","Table","responsive","style","Object","keys","data","length","map","key","image","author","name","network","icon","postCount","MultiPostMedia","postsData","ConnectButton","link","links","NoData","status","col","SeeMoreModal","size","showHide","Suspense","fallback","moreData","getEventVoicesMore","onClick","window","open","type","xmlns","viewBox","id","transform","d","fill","Splide","hasTrack","options","rewind","speed","loop","interval","drag","perPage","gap","autoplay","padding","pagination","arrows","SplideTrack","asset","index","SplideSlide","PostMedia","postFile","postId","GetData","baseUrl","colSpan","e","target","NoCameraImgPost","CardHeader","section","CardTitle","Button","variant","render","this","Modal","onHide","backdrop","keyboard","centered","Header","closeButton","Title"],"sourceRoot":""}