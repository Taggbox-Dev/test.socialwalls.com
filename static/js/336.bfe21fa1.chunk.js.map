{"version":3,"file":"static/js/336.bfe21fa1.chunk.js","mappings":"iSAGe,MAAMA,UAAuBC,EAAAA,cAC1CC,WAAAA,CAAYC,GAAQ,IAADC,EACjBC,MAAMF,GACNG,KAAKC,MAAQ,CACXC,OAAQF,KAAKH,MAAMM,qBAAqBC,UACxCC,QAAS,CACPC,OAAQ,CAAC,WACTC,MAAO,CACLC,GAAI,gBACJC,QAAS,CAAEC,MAAM,GACjBC,KAAM,OACNC,WAAY,CACVC,SAAS,EACTC,OAAQ,SACRC,iBAAkB,CAChBC,MAAO,MAGXC,OAAQ,IACRC,KAAM,CAAEL,SAAS,IAEnBM,OAAQ,CACNT,MAAM,EACNU,SAAU,MACVC,WAAY,CACVC,WAAY,GACZC,SAAU,IAGdC,WAAY,CAAEX,SAAS,GACvBY,QAAS,CAAEC,KAAM,EAAGC,MAAO,UAC3BC,OAAQ,CACNC,MAAO,CAAC,GACRC,MAAO,YAETC,MAAO,CACLpB,KAAM,WACNqB,IAAoC,QAAjClC,EAAEE,KAAKH,MAAMM,4BAAoB,IAAAL,OAAA,EAA/BA,EAAiCmC,SAAS,GAC/CC,WAAY,GAEdC,YAAa,CACXC,MAAO,CACL,CACEC,EAAG,GACHC,GAAI,EACJC,YAAa,cACbC,UAAW,WAEb,CACEH,EAAG,GACHC,GAAI,GACJC,YAAa,cACbC,UAAW,WAEb,CACEH,EAAG,IACHC,GAAI,GACJC,YAAa,cACbC,UAAW,aAIjBC,QAAS,CAAEC,EAAG,CAAEC,OAAQ,gBACxBC,KAAM,CACJlC,MAAM,IAGVmC,WAAY,CACV,CAEExC,QAAS,CACPE,MAAO,CACLU,OAAQ,MAIZZ,QAAS,CACPE,MAAO,CACLU,OAAQ,QAMpB,CAEA6B,MAAAA,GAAU,IAADC,EACP,MAAM,qBAAE5C,GAAyBH,KAAKH,MAEhCmD,EACgB,OAApB7C,QAAoB,IAApBA,OAAoB,EAApBA,EAAsB8B,UACA,OAApB9B,QAAoB,IAApBA,GAA8B,QAAV4C,EAApB5C,EAAsB8B,gBAAQ,IAAAc,OAAV,EAApBA,EAAgCE,QAAS,GAE7C,GAAID,EAAU,CACZ,MAAMzC,EAAQ2C,IAAAA,aAAwB,kBAClC3C,GACFA,EAAM4C,MACgB,OAApBhD,QAAoB,IAApBA,OAAoB,EAApBA,EAAsB8B,SAAS,GACX,OAApB9B,QAAoB,IAApBA,OAAoB,EAApBA,EAAsB8B,SAASe,EAAW,GAGhD,CAEA,OACEI,EAAAA,EAAAA,KAACC,EAAAA,EAAc,CACbhD,QAASL,KAAKC,MAAMI,QACpBH,OAAQF,KAAKC,MAAMC,OACnBS,KAAK,OACLM,OAAQ,KAGd,EC3GF,MAAMqC,EAAsBzD,IAE1B,MAAM0D,EAAqB1D,EAAM2D,eAAiBC,OAAOC,KAAK7D,EAAM2D,eAAeP,SAAUU,EAAAA,EAAAA,IAAgB,CAAC9D,EAAM2D,cAAc,IAAI,IAChI,KAAEI,GAAS/D,EAAM2D,eAAiBC,OAAOC,KAAK7D,EAAM2D,eAAeP,OAASpD,EAAM2D,cAAc,GAAK,GAErGK,EAAiBD,GAAQH,OAAOC,KAAKE,GAAMX,OAAS,CACxD,CAAEa,KAAMF,EAAK,GAAG,qBAAsBjD,KAAK,oBAAqBoD,KAAM,qBAAsBC,MAAO,GAAIC,MAAO,WAC9G,CAAEH,KAAMF,EAAK,GAAa,SAAGjD,KAAK,WAAYoD,KAAM,qBAAsBC,MAAO,GAAIC,MAAO,WAC5F,CAAEH,KAAMF,EAAK,GAAY,QAAGjD,KAAK,UAAWoD,KAAM,qBAAsBC,MAAO,GAAIC,MAAO,WAC1F,CAAEH,KAAMF,EAAK,GAAa,SAAGjD,KAAK,WAAYoD,KAAM,qBAAsBC,MAAO,GAAIC,MAAO,WAC5F,CAAEH,KAAMF,EAAK,GAAG,qBAAsBjD,KAAK,oBAAqBoD,KAAM,qBAAsBC,MAAO,GAAIC,MAAO,YAC5G,GAEJ,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,UAAU,+CAA8CC,SAAA,EAC5DjB,EAAAA,EAAAA,KAACkB,EAAAA,EAAU,CAACF,UAAU,eAAcC,UAClCjB,EAAAA,EAAAA,KAACmB,EAAAA,EAAS,CAACH,UAAU,OAAMC,UACzBH,EAAAA,EAAAA,MAAA,MAAIM,MAAM,gCAA+BH,SAAA,EAACjB,EAAAA,EAAAA,KAAA,OAAKqB,IAAI,sGAAsGxD,OAAQ,OAAQY,MAAO,SAAS,+BAG7LuB,EAAAA,EAAAA,KAACsB,EAAAA,EAAQ,CAACN,UAAU,MAAKC,UACnBH,EAAAA,EAAAA,MAACS,EAAAA,EAAI,CAACC,iBAAiB,SAASpE,GAAG,2BAA2B4D,UAAU,gDAA+CC,SAAA,EACrHjB,EAAAA,EAAAA,KAACyB,EAAAA,EAAG,CAACC,SAAS,SAASC,MAAM,cAAaV,UACxCjB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,qBAAoBC,SAC9BxE,EAAMmF,QACL5B,EAAAA,EAAAA,KAAA,OAAKoB,MAAM,mBAAkBH,UAACjB,EAAAA,EAAAA,KAAA,OAAKqB,KAAKQ,EAAAA,EAAAA,IAAQ,6CAA8CpD,MAAO,YAEtGuB,EAAAA,EAAAA,KAAC1D,EAAc,CAACS,qBAAsBoD,EAAoB5C,KAAM,cAIvEyC,EAAAA,EAAAA,KAACyB,EAAAA,EAAG,CAACC,SAAS,aAAaC,MAAM,aAAYV,UAC3CjB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,qBAAoBC,UAEjCjB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,4BAA2BC,SACvCR,GACCJ,OAAOC,KAAKG,GAAgBZ,QAC5BY,EAAeqB,KAAI,CAACtB,EAAMuB,KAExB,IAAIC,EAAQ,CAACvB,EAAe,GAAS,KAAEA,EAAe,GAAS,KAAEA,EAAe,GAAS,KAAEA,EAAe,GAAS,KAAEA,EAAe,GAAS,MAAGwB,QAAO,CAACC,EAAGC,IAAMD,EAAIC,GAAG,GACpKC,EAAUC,SAAS7B,EAAKE,MAAQ,EAAKF,EAAKE,KAAOsB,EAAQ,IAAO,EAGpE,OAFAI,EAAUA,EAAQE,QAAQ,IAGxBxB,EAAAA,EAAAA,MAAA,OAAKE,UAAU,uCAAsCC,SAAA,EACnDH,EAAAA,EAAAA,MAAA,OAAKE,UAAU,wCAAuCC,SAAA,EACpDjB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,4BAA2BC,UACxCjB,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CAAClB,KAAKmB,EAAAA,EAAAA,IAAc/B,EAAesB,GAAOpB,UAC1C,KAACX,EAAAA,EAAAA,KAAA,UAAQgB,UAAU,cAAaC,SAAET,EAAKjD,WAE/CuD,EAAAA,EAAAA,MAAA,OACEE,UAAW,gDAAgDe,IAC3DU,IAAKhC,EAAesB,GAAOnB,MAC3B8B,MAAOjC,EAAesB,GAAOnB,MAC7BrC,MAAO,CAAEoE,WAAa,QAAQ1B,SAAA,EAE9BjB,EAAAA,EAAAA,KAAA,OACE4C,KAAK,cACL5B,UAAU,oBACV,gBAAeP,EAAesB,GAAOnB,MACrC,gBAAc,IACd,gBAAc,MACdrC,MAAO,CACLE,MAAO,GAAGgC,EAAesB,GAAOnB,SAChCiC,gBAAiBpC,EAAesB,GAAOlB,OACvCI,UAEFH,EAAAA,EAAAA,MAAA,OAAKE,UAAU,oGAAmGC,SAAA,EAChHjB,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CAAClB,KAAKmB,EAAAA,EAAAA,IAAc/B,EAAesB,GAAOpB,MAAOlC,MAAO,GAAIZ,OAAQ,GAAImD,UAAU,UACtFF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,kBAAiBC,SAAA,EAChCjB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,eAAcC,SAAER,EAAesB,GAAOxE,QACrDuD,EAAAA,EAAAA,MAAA,UAAQE,UAAU,eAAcC,SAAA,CAAER,EAAesB,GAAOrB,KAAK,UAAMI,EAAAA,EAAAA,MAAA,QAAMvC,MAAO,CAACsC,MAAOJ,EAAesB,GAAOlB,OAAOI,SAAA,CAAC,IAAER,EAAesB,GAAOnB,MAAM,oBAIxJE,EAAAA,EAAAA,MAAA,UAAQE,UAAU,eAAcC,SAAA,CAAET,EAAKE,KAAK,WAAS,GAAG0B,KAAW,YAEjE,iBASrB,EAIX,EAAeU,EAAAA,KAAW5C,E","sources":["app/Display/analytics-new/layout/common/SentimentChart.js","app/Display/analytics-new/components/content/SentimentAnalytics.js"],"sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport ApexCharts from \"apexcharts\";\r\nexport default class SentimentChart extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      series: this.props.contentAnalyticsData.newSeries,\r\n      options: {\r\n        colors: [\"#546FED\"],\r\n        chart: {\r\n          id: \"area-datetime\",\r\n          toolbar: { show: false },\r\n          type: \"line\",\r\n          animations: {\r\n            enabled: true,\r\n            easing: \"linear\",\r\n            dynamicAnimation: {\r\n              speed: 1000,\r\n            },\r\n          },\r\n          height: 350,\r\n          zoom: { enabled: false },\r\n        },\r\n        legend: {\r\n          show: true,\r\n          position: \"top\",\r\n          itemMargin: {\r\n            horizontal: 20,\r\n            vertical: 0,\r\n          },\r\n        },\r\n        dataLabels: { enabled: false },\r\n        markers: { size: 5, style: \"hollow\" },\r\n        stroke: {\r\n          width: [4],\r\n          curve: \"straight\",\r\n        },\r\n        xaxis: {\r\n          type: \"datetime\",\r\n          min: this.props.contentAnalyticsData?.unixDate[0],\r\n          tickAmount: 6,\r\n        },\r\n        annotations: {\r\n          yaxis: [\r\n            {\r\n              y: 25,\r\n              y2: 0,\r\n              borderColor: \"transparent\",\r\n              fillColor: \"#f7caca\", // Color for 0-30 range\r\n            },\r\n            {\r\n              y: 55,\r\n              y2: 25,\r\n              borderColor: \"transparent\",\r\n              fillColor: \"#f9debe\", // Color for 30-60 range\r\n            },\r\n            {\r\n              y: 100,\r\n              y2: 55,\r\n              borderColor: \"transparent\",\r\n              fillColor: \"#cfe7d5\", // Color for 60-100 range\r\n            },\r\n          ],\r\n        },\r\n        tooltip: { x: { format: \"dd MMM yyyy\" } },\r\n        grid: {\r\n          show: false, // Enable or disable the entire grid (optional)\r\n        },\r\n      },\r\n      responsive: [\r\n        {\r\n          // breakpoint: 991,\r\n          options: {\r\n            chart: {\r\n              height: 300,\r\n            },\r\n          },\r\n          // breakpoint: 767,\r\n          options: {\r\n            chart: {\r\n              height: 280,\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { contentAnalyticsData } = this.props;\r\n\r\n    const lastDate =\r\n      contentAnalyticsData?.unixDate[\r\n        contentAnalyticsData?.unixDate?.length - 1\r\n      ];\r\n    if (lastDate) {\r\n      const chart = ApexCharts.getChartByID(\"area-datetime2\");\r\n      if (chart) {\r\n        chart.zoomX(\r\n          contentAnalyticsData?.unixDate[0],\r\n          contentAnalyticsData?.unixDate[lastDate - 1]\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <ReactApexChart\r\n        options={this.state.options}\r\n        series={this.state.series}\r\n        type=\"line\"\r\n        height={350}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import { Card, CardBody, CardHeader, CardTitle, Tab, Tabs } from \"react-bootstrap\";\r\nimport { toAbsoluteUrl } from \"../../utils\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport React from \"react\";\r\nimport { reArrangeSeries, baseUrl } from \"../../../../../utils\";\r\nimport SentimentChart from \"../../layout/common/SentimentChart\";\r\n\r\nconst SentimentAnalytics = (props) => {\r\n\r\n  const sentimentAnalytics = props.sentimentPost && Object.keys(props.sentimentPost).length && reArrangeSeries([props.sentimentPost[2]],1);\r\n  const { data } = props.sentimentPost && Object.keys(props.sentimentPost).length ? props.sentimentPost[0] : [];\r\n\r\n  const SentimentsData = data && Object.keys(data).length ? [\r\n    { post: data[0]['Strongly Positive'], type:'Strongly Positive', icon: \"/emojis/emoji1.svg\", value: 30, color: \"#6AC259\" },\r\n    { post: data[0]['Positive'], type:'Positive', icon: \"/emojis/emoji2.svg\", value: 25, color: \"#59CBB7\" },\r\n    { post: data[0]['Neutral'], type:'Neutral', icon: \"/emojis/emoji3.svg\", value: 19, color: \"#FFB74A\" },\r\n    { post: data[0]['Negative'], type:'Negative', icon: \"/emojis/emoji4.svg\", value: 29, color: \"#FF7483\" },\r\n    { post: data[0]['Strongly Negative'], type:'Strongly Negative', icon: \"/emojis/emoji5.svg\", value: 45, color: \"#F74C5B\" },\r\n  ] : [];\r\n\r\n  return (\r\n    <Card className=\"sw-card-custom gutter-b p-5 card-shadow mb-5\">\r\n      <CardHeader className=\"p-0 border-0\">\r\n        <CardTitle className=\"mb-3\">\r\n          <h6 class=\"card-label font-weight-bolder\"><img src=\"https://socialwalls.com/wp-content/themes/socialwalls/assets/section-library/images/home/new/ai.svg\" height={\"20px\"} width={\"20px\"}/> Sentiments Analysis</h6>\r\n        </CardTitle>\r\n      </CardHeader>\r\n      <CardBody className=\"p-0\">\r\n            <Tabs defaultActiveKey=\"trends\" id=\"uncontrolled-tab-example\" className=\"nav-tabs-line sw-custom-nav nav nav-tabs mb-5\">\r\n              <Tab eventKey=\"trends\" title=\"Live Trends\">\r\n                <div className=\"card-body p-0 mb-0\">\r\n                   { props.loader ? \r\n                      <div class=\"py-1 text-center\"><img src={baseUrl(`dashboard/analytic/content-analytis-4.svg`)} width={\"100%\"}/></div> \r\n                        :\r\n                     <SentimentChart contentAnalyticsData={sentimentAnalytics} type={\"line\"} /> \r\n                  }\r\n                </div>\r\n              </Tab>\r\n              <Tab eventKey=\"statistics\" title=\"Statistics\">\r\n                <div className=\"card-body p-0 mb-0\">\r\n                  \r\n                  <div className=\"sentiment-statistics py-8\">\r\n                    {SentimentsData &&\r\n                      Object.keys(SentimentsData).length &&\r\n                      SentimentsData.map((data, index) => {\r\n\r\n                        let total = [SentimentsData[0]['post'],SentimentsData[1]['post'],SentimentsData[2]['post'],SentimentsData[3]['post'],SentimentsData[4]['post']].reduce((a, b) => a + b, 0);\r\n                        let percent = parseInt(data.post) > 0 ? (data.post / total * 100) : 0;\r\n                        percent = percent.toFixed(1);\r\n\r\n                        return (\r\n                          <div className=\"d-flex align-items-center mb-7 w-100\">\r\n                            <div className=\"d-flex align-items-center me-10 col-2\">\r\n                              <div className=\"svg-icon svg-icon-3x me-3\">\r\n                                <SVG src={toAbsoluteUrl(SentimentsData[index].icon)} ></SVG>\r\n                              </div> <strong className=\"text-nowrap\">{data.type}</strong>\r\n                            </div>\r\n                            <div\r\n                              className={`progress_sentiment progress w-100 h-auto pro_${index}`}\r\n                              now={SentimentsData[index].value}\r\n                              label={SentimentsData[index].value}\r\n                              style={{ background : 'none'}}\r\n                            >\r\n                              <div\r\n                                role=\"progressbar\"\r\n                                className=\"progress-bar me-5\"\r\n                                aria-valuenow={SentimentsData[index].value}\r\n                                aria-valuemin=\"0\"\r\n                                aria-valuemax=\"100\"\r\n                                style={{\r\n                                  width: `${SentimentsData[index].value}%`,\r\n                                  backgroundColor: SentimentsData[index].color,\r\n                                }}\r\n                              >\r\n                                <div className=\"progress-tooltip-box progress_label d-flex align-items-start border-0 text-dark text-start shadow\">\r\n                                  <SVG src={toAbsoluteUrl(SentimentsData[index].icon)} width={20} height={20} className=\"me-2\" ></SVG>\r\n                                  <div className=\"toolitp-content\">\r\n                                  <div className=\"font-size-xs\">{SentimentsData[index].type}</div>\r\n                                  <strong className=\"font-size-sm\">{SentimentsData[index].post} Posts<text style={{color: SentimentsData[index].color}}>({SentimentsData[index].value}%)</text></strong>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <strong className=\"font-size-sm\">{data.post} Posts ({`${percent}%`})</strong>\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                  </div>\r\n                </div>\r\n                \r\n              </Tab>\r\n            </Tabs>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default React.memo(SentimentAnalytics);\r\n"],"names":["SentimentChart","PureComponent","constructor","props","_this$props$contentAn","super","this","state","series","contentAnalyticsData","newSeries","options","colors","chart","id","toolbar","show","type","animations","enabled","easing","dynamicAnimation","speed","height","zoom","legend","position","itemMargin","horizontal","vertical","dataLabels","markers","size","style","stroke","width","curve","xaxis","min","unixDate","tickAmount","annotations","yaxis","y","y2","borderColor","fillColor","tooltip","x","format","grid","responsive","render","_contentAnalyticsData","lastDate","length","ApexCharts","zoomX","_jsx","ReactApexChart","SentimentAnalytics","sentimentAnalytics","sentimentPost","Object","keys","reArrangeSeries","data","SentimentsData","post","icon","value","color","_jsxs","Card","className","children","CardHeader","CardTitle","class","src","CardBody","Tabs","defaultActiveKey","Tab","eventKey","title","loader","baseUrl","map","index","total","reduce","a","b","percent","parseInt","toFixed","SVG","toAbsoluteUrl","now","label","background","role","backgroundColor","React"],"sourceRoot":""}