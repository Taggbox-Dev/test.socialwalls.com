{"version":3,"file":"static/js/6009.1d67549b.chunk.js","mappings":"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","sources":["app/Display/analytics-new/layout/common/content.js","app/Display/analytics-new/components/content/SentimentPost.js","app/Display/analytics-new/components/content/authorInfo.js","app/Display/analytics-new/layout/common/NoData.js","app/Display/analytics-new/layout/common/connectButton.js","../node_modules/react-string-replace/index.js"],"sourcesContent":["import React from \"react\";\r\nimport reactStringReplace from \"react-string-replace\";\r\n\r\nconst Content = (props) => {\r\n  return reactStringReplace(props.content, /#(\\w+)/g, (match, i) => (\r\n    <div\r\n      className=\"tb_text_hashtag\"\r\n      style={{\r\n        background: \"#AFE0FF\",\r\n        display: \"inline-flex\",\r\n        borderRadius: 3,\r\n        padding: 2,\r\n        margin: 1,\r\n      }}\r\n    >\r\n      @{match}\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default React.memo(Content)\r\n","    import {\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    CardTitle,\r\n    Tab,\r\n    Tabs,\r\n    } from \"react-bootstrap\";\r\n    import { baseUrl } from \"../../../../../utils\";\r\n    import React, { Suspense } from \"react\"; \r\n    import NoData from \"../../layout/common/NoData\";\r\n    import { NoCameraImgPost } from \"../../../../../actions/api\";\r\n    import ConnectButton from \"../../layout/common/connectButton\";\r\n    import Content from \"../../layout/common/content\";\r\n    import AuthorInfo from \"./authorInfo\";\r\n    const SentimentpostSkeleton = React.lazy(() =>\r\n    import(\"../../layout/skeleton/SentimentpostSkeleton\")\r\n    );\r\n\r\n    const PostData = (data) => {\r\n    return (\r\n        <div className=\"px-0 py-3 cursor-pointer border-bottom\">\r\n            <div className=\"d-flex align-items-center flex-md-row flex-column\">\r\n                <div className=\"symbol_item position-relative\">\r\n                    <div className=\"symbol symbol-100 symbol-2by2 flex-shrink-0 me-4\">\r\n                        <Button\r\n                        type=\"button\"\r\n                        className=\"border-0 p-0 bg-transparent rounded\"\r\n                        >\r\n                        <span\r\n                            className=\"symbol-label no-repeat-fit-background rounded\"\r\n                            style={{\r\n                            backgroundImage: data.postFile\r\n                                ? data.postFile\r\n                                : NoCameraImgPost,\r\n                            }}\r\n                        >\r\n                            <img\r\n                            src={data.postFile}\r\n                            className=\"img-fluid\"\r\n                            onError={(e) => (e.target.src = NoCameraImgPost)}\r\n                            />\r\n                        </span>\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-100 d-flex\">\r\n                    <div className=\"w-100 me-10\">\r\n                        <div className=\"d-flex flex-grow-1 w-100 mb-2 justify-content-between pe-10\">\r\n                            <AuthorInfo picture={data.picture} username={data.username} date={''} />\r\n                            <div class=\"list_category_icon cursor-pointer pt-1\">\r\n                            <i className={`fab ${data.networkIcon} font-size-h2`}></i>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"text-dark font-weight-normal font-size-sm overflow-hidden text-ellipsis line-clamp-3\">\r\n                        <Content content={data.content} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"conn_status_wrap\">\r\n                        <ConnectButton link={data.postLink} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n    };\r\n\r\n    const SentimentPost = (props) => {\r\n    const { loader } = props;\r\n    const { negative, positive } =\r\n        props && Object.keys(props).length ? props[1] : [];\r\n\r\n    return (\r\n        <Card className=\"sw-card-custom gutter-b p-5 card-shadow\">\r\n        <CardHeader className=\"p-0 border-0\">\r\n            <CardTitle className=\"mb-3 d-flex align-items-center justify-content-between\">\r\n            <h6 class=\"card-label font-weight-bolder\">\r\n                <img\r\n                src={baseUrl(`dashboard/analytic/ai.svg`)}\r\n                height={\"20px\"}\r\n                width={\"20px\"}\r\n                />{\" \"}\r\n                Sentiment\r\n            </h6>\r\n            <Button variant=\"link\" className=\"p-0\">\r\n                See More\r\n            </Button>\r\n            </CardTitle>\r\n        </CardHeader>\r\n        <CardBody className=\"p-0\">\r\n            <Tabs\r\n            defaultActiveKey=\"positive\"\r\n            id=\"uncontrolled-tab-example\"\r\n            className=\"nav-tabs-line sw-custom-nav nav nav-tabs mb-3\"\r\n            >\r\n            <Tab\r\n                eventKey=\"positive\"\r\n                title={\r\n                <div className=\"px-2\">\r\n                    <img\r\n                    src={baseUrl(`dashboard/analytic/smile-active.svg`)}\r\n                    height={\"16px\"}\r\n                    width={\"16px\"}\r\n                    />{\" \"}\r\n                    positive\r\n                </div>\r\n                }\r\n            >\r\n                {loader ? (\r\n                <Suspense fallback={<></>}>\r\n                    <SentimentpostSkeleton />\r\n                </Suspense>\r\n                ) : positive && Object.keys(positive).length ? (\r\n                positive.map((data) => {\r\n                    return <PostData {...data} />;\r\n                })\r\n                ) : (\r\n                <NoData />\r\n                )}\r\n            </Tab>\r\n            <Tab\r\n                eventKey=\"negative\"\r\n                title={\r\n                <div className=\"px-2\">\r\n                    <img\r\n                    src={baseUrl(`dashboard/analytic/sad.svg`)}\r\n                    height={\"16px\"}\r\n                    width={\"16px\"}\r\n                    />{\" \"}\r\n                    Negative\r\n                </div>\r\n                }\r\n            >\r\n                {loader ? (\r\n                <Suspense fallback={<></>}>\r\n                    <SentimentpostSkeleton />\r\n                </Suspense>\r\n                ) : negative && Object.keys(negative).length ? (\r\n                negative.map((data) => {\r\n                    return <PostData {...data} />;\r\n                })\r\n                ) : (\r\n                <NoData />\r\n                )}\r\n            </Tab>\r\n            </Tabs>\r\n        </CardBody>\r\n        </Card>\r\n    );\r\n    };\r\n\r\n    export default React.memo(SentimentPost);\r\n","import React from \"react\";\r\nimport { manageSpace } from \"../../../../../utils\";\r\nimport moment from \"moment\";\r\n\r\nconst AuthorInfo = (props) => {\r\n  return (\r\n    <div className=\"d-flex align-items-center w-50\">\r\n      <div className=\"position-relative\">\r\n        <div className=\"symbol symbol-35 symbol-light me-3 con_user_img cursor-pointer rounded-circle overflow-hidden\">\r\n          <div className=\"symbol-image\">p</div>\r\n          {/* <img\r\n            src={props.picture}\r\n            className=\"img-fluid\"\r\n            width={\"20px\"}\r\n            height={\"20px\"}\r\n          /> */}\r\n        </div>\r\n        { props.isIcon ?  <div className=\"m_social_icon_new card-shadow position-absolute bg-white rounded-circle d-flex align-items-center justify-content-center\">\r\n                <i className={`fab ${props.isIcon}`}></i>\r\n            </div> : null }\r\n      </div>\r\n      <div class=\"d-flex text-left flex-column conn_user_info cursor-pointer\">\r\n        <p class=\"text-dark mb-0 font-weight-boldest overflow-hidden text-nowrap text-ellipsis author_name text-capitalize\">\r\n          {props.username}\r\n        </p>\r\n        <p class=\"m-0\">\r\n          <small class=\"text-muted overflow-hidden text-nowrap text-ellipsis post_count me-2 \">\r\n            { props.username ? `@${manageSpace(props.username)}` : null}\r\n          </small>\r\n          <small class=\"text-muted overflow-hidden text-nowrap text-ellipsis followers_count \">\r\n              {  moment(new Date(props.date * 1000)).fromNow() }\r\n          </small>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(AuthorInfo);\r\n","import React from \"react\";\r\nimport { baseUrl } from \"../../../../../utils\";\r\n\r\nconst GetData = () => {\r\n  return (\r\n    <div className=\"placeholder-image py-10 d-flex flex-column justify-content-center\">\r\n      <div className=\"mb-3 text-center\">\r\n        <img\r\n          className=\"img-fluid graph-bg\"\r\n          src={baseUrl(`dashboard/analytic/image-placeholder.svg`)}\r\n          width={\"80px\"}\r\n          height={\"80px\"}\r\n        />\r\n      </div>\r\n      <div className=\"\">\r\n        <h5 class=\"text-gray-dark text-center\">No Data Available</h5>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NoData = (props) => {\r\n\r\n  return props.status ? (\r\n    <tr>\r\n      <td colSpan={props.col}>\r\n        <GetData />\r\n      </td>\r\n    </tr>\r\n  ) : (\r\n    <GetData />\r\n  );\r\n};\r\n\r\nexport default React.memo(NoData);\r\n","    const ConnectButton = (props) => {\r\n\r\n    return (\r\n        <div className=\"conn_status_wrap\">\r\n        <button\r\n            onClick={() => window.open(props.link)}\r\n            type=\"button\"\r\n            className=\"btn btn-primary btn-min-w btn-sm rounded\"\r\n        >\r\n            <span className=\"position-relative\">\r\n            <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"22.213\"\r\n                height=\"18\"\r\n                viewBox=\"0 0 22.213 18\"\r\n                className=\"h-75 align-self-end w-20 me-1\"\r\n            >\r\n                <g id=\"noun-talk-2902544\" transform=\"translate(-98.007 -75.786)\">\r\n                <path\r\n                    id=\"Path_6701\"\r\n                    data-name=\"Path 6701\"\r\n                    d=\"M103.686,84.417a1.084,1.084,0,1,1-.317-.766A1.084,1.084,0,0,1,103.686,84.417Zm2.9-1.084h0a1.084,1.084,0,1,0,.766.317,1.084,1.084,0,0,0-.766-.317Zm3.979,0h0a1.084,1.084,0,1,0,.766.317,1.084,1.084,0,0,0-.766-.317Zm9.659-5.711v8.172a1.839,1.839,0,0,1-1.616,1.823l.625,2.7a.617.617,0,0,1-1,.608l-3.07-2.625v.2a1.838,1.838,0,0,1-1.836,1.836h-9.463L100,93.638a.617.617,0,0,1-1-.608l.625-2.7A1.838,1.838,0,0,1,98.007,88.5V80.331a1.838,1.838,0,0,1,1.836-1.836h3.226v-.873a1.838,1.838,0,0,1,1.836-1.836h13.478a1.838,1.838,0,0,1,1.836,1.836Zm-6.3,2.709a.6.6,0,0,0-.6-.6H99.843a.6.6,0,0,0-.6.6V88.5a.6.6,0,0,0,.6.6h.552a.617.617,0,0,1,.6.756l-.375,1.621,2.607-2.229a.618.618,0,0,1,.4-.148h9.691a.6.6,0,0,0,.6-.6Zm5.063-2.709a.6.6,0,0,0-.6-.6H104.906a.6.6,0,0,0-.6.6V78.5h9.017a1.838,1.838,0,0,1,1.836,1.836v6.35l2.448,2.093-.375-1.621a.617.617,0,0,1,.6-.756h.553a.6.6,0,0,0,.6-.6Z\"\r\n                    fill=\"#ffffff\"\r\n                ></path>\r\n                </g>\r\n            </svg> \r\n            Connect \r\n            </span>\r\n        </button>\r\n        </div>\r\n    );\r\n    };\r\n\r\n    export default ConnectButton","/* eslint-disable vars-on-top, no-var, prefer-template */\nvar isRegExp = function (re) { \n  return re instanceof RegExp;\n};\nvar escapeRegExp = function escapeRegExp(string) {\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n    reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  return (string && reHasRegExpChar.test(string))\n    ? string.replace(reRegExpChar, '\\\\$&')\n    : string;\n};\nvar isString = function (value) {\n  return typeof value === 'string';\n};\nvar flatten = function (array) {\n  var newArray = [];\n\n  array.forEach(function (item) {\n    if (Array.isArray(item)) {\n      newArray = newArray.concat(item);\n    } else {\n      newArray.push(item);\n    }\n  });\n\n  return newArray;\n};\n\n/**\n * Given a string, replace every substring that is matched by the `match` regex\n * with the result of calling `fn` on matched substring. The result will be an\n * array with all odd indexed elements containing the replacements. The primary\n * use case is similar to using String.prototype.replace except for React.\n *\n * React will happily render an array as children of a react element, which\n * makes this approach very useful for tasks like surrounding certain text\n * within a string with react elements.\n *\n * Example:\n * matchReplace(\n *   'Emphasize all phone numbers like 884-555-4443.',\n *   /([\\d|-]+)/g,\n *   (number, i) => <strong key={i}>{number}</strong>\n * );\n * // => ['Emphasize all phone numbers like ', <strong>884-555-4443</strong>, '.'\n *\n * @param {string} str\n * @param {RegExp|str} match Must contain a matching group\n * @param {function} fn\n * @return {array}\n */\nfunction replaceString(str, match, fn) {\n  var curCharStart = 0;\n  var curCharLen = 0;\n\n  if (str === '') {\n    return str;\n  } else if (!str || !isString(str)) {\n    throw new TypeError('First argument to react-string-replace#replaceString must be a string');\n  }\n\n  var re = match;\n\n  if (!isRegExp(re)) {\n    re = new RegExp('(' + escapeRegExp(re) + ')', 'gi');\n  }\n\n  var result = str.split(re);\n\n  // Apply fn to all odd elements\n  for (var i = 1, length = result.length; i < length; i += 2) {\n    /** @see {@link https://github.com/iansinnott/react-string-replace/issues/74} */\n    if (result[i] === undefined || result[i - 1] === undefined) {\n      console.warn('reactStringReplace: Encountered undefined value during string replacement. Your RegExp may not be working the way you expect.');\n      continue;\n    }\n\n    curCharLen = result[i].length;\n    curCharStart += result[i - 1].length;\n    result[i] = fn(result[i], i, curCharStart);\n    curCharStart += curCharLen;\n  }\n\n  return result;\n}\n\nmodule.exports = function reactStringReplace(source, match, fn) {\n  if (!Array.isArray(source)) source = [source];\n\n  return flatten(source.map(function(x) {\n    return isString(x) ? replaceString(x, match, fn) : x;\n  }));\n};\n"],"names":["Content","props","reactStringReplace","content","match","i","_jsxs","className","style","background","display","borderRadius","padding","margin","children","React","SentimentpostSkeleton","PostData","data","_jsx","Button","type","backgroundImage","postFile","NoCameraImgPost","src","onError","e","target","AuthorInfo","picture","username","date","class","networkIcon","ConnectButton","link","postLink","SentimentPost","loader","negative","positive","Object","keys","length","Card","CardHeader","CardTitle","baseUrl","height","width","variant","CardBody","Tabs","defaultActiveKey","id","Tab","eventKey","title","Suspense","fallback","_Fragment","map","NoData","isIcon","manageSpace","moment","Date","fromNow","GetData","status","colSpan","col","onClick","window","open","xmlns","viewBox","transform","d","fill","isString","value","replaceString","str","fn","curCharStart","curCharLen","TypeError","re","RegExp","isRegExp","string","reRegExpChar","reHasRegExpChar","source","test","replace","escapeRegExp","result","split","undefined","console","warn","module","exports","Array","isArray","array","newArray","forEach","item","concat","push","flatten","x"],"sourceRoot":""}