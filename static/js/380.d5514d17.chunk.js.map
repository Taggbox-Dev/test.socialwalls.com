{"version":3,"file":"static/js/380.d5514d17.chunk.js","mappings":"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","sources":["app/Display/analytics-new/components/content/aeaderBoard.js","app/Display/analytics-new/components/content/authorInfo.js","app/Display/analytics-new/layout/common/connectButton.js","app/Display/analytics-new/layout/SliderItem.js","app/Display/analytics-new/layout/popup/multiImagePopup.js","app/Display/analytics-new/layout/common/multiPostMedia.js","app/Display/analytics-new/layout/common/noData.js","app/Display/analytics-new/layout/common/postMedia.js","app/Display/analytics-new/layout/common/sectionHeading.js","app/Display/analytics-new/layout/common/seeMoreModal.js","app/Display/analytics-new/layout/common/showMoreContent.js"],"sourcesContent":["import React, { Suspense, useState } from \"react\";\r\nimport { Card, CardBody, Table } from \"react-bootstrap\";\r\nimport SeeMoreModal from \"../../layout/common/seeMoreModal\"; \r\nimport ConnectButton from \"../../layout/common/connectButton\";\r\nimport AuthorInfo from \"./authorInfo\";\r\nimport NoData from \"../../layout/common/noData\";\r\nimport { getwallRecordMostActiveUsersMore } from \"../../../../../actions/analyticsNew\";\r\nimport SectionHeading from \"../../layout/common/sectionHeading\";\r\nimport MultiPostMedia from \"../../layout/common/multiPostMedia\";\r\nconst LeaderbordSkeleton = React.lazy(() =>\r\n  import(\"../../layout/skeleton/leaderbordSkeleton\")\r\n);\r\n\r\nconst LeaderbordPopup = React.lazy(() =>\r\n  import(\"../../layout/popup/leaderbordPopup\")\r\n);\r\n\r\nconst LeaderBoard = (props) => {\r\n\r\n    const settings = {\r\n      type: \"slide\",\r\n      rewind: false,\r\n      speed: 1000,\r\n      loop: true,\r\n      interval: 7000,\r\n      drag: true,\r\n      perPage: 4,\r\n      gap: 5,\r\n      autoplay: false,\r\n      padding: \"0\",\r\n      pagination: false,\r\n      arrows: true,\r\n  };\r\n\r\n  const { leaderBoard, loader } = props;\r\n\r\n  const [show, setShow] = useState(false)\r\n\r\n  const handlePopup = event => {  \r\n    setShow(event)\r\n  }\r\n\r\n  return (\r\n   <>\r\n    <Card className=\"sw-card-custom gutter-b card-shadow mb-5\">\r\n      <SectionHeading title={'Leader Board'} total={leaderBoard.total} handlePopup={handlePopup} />\r\n      <CardBody className=\"py-5 px-0\">\r\n        <Table responsive>\r\n          <thead>\r\n            <tr>\r\n              <th style={{ width: \"10%\" }}>\r\n                S No.\r\n              </th>\r\n              <th style={{ width: \"25%\" }}>\r\n                Name\r\n              </th>\r\n              <th style={{ width: \"15%\" }}>\r\n                No. of Followres\r\n              </th>\r\n              <th style={{ width: \"15%\" }}>\r\n                No. of Posts\r\n              </th>\r\n              <th style={{ width: \"20%\" }}>\r\n                Recent Posts\r\n              </th>\r\n              <th style={{ width: \"15%\" }}></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            \r\n\r\n            { loader ? <Suspense fallback={<></>}> <LeaderbordSkeleton/> </Suspense> : leaderBoard && Object.keys(leaderBoard.data).length\r\n              ? leaderBoard.data.map((data,index) => {\r\n                  return (\r\n                    <tr className=\"border-top\">\r\n                      <td>\r\n                        <strong>{index+1}.</strong>\r\n                      </td>\r\n                      <td> \r\n                        <AuthorInfo picture={data.image} username={data.author.name} isIcon={data.network.icon} />\r\n                      </td>\r\n                      <td>\r\n                        <strong>{data.author.follower}</strong>\r\n                      </td>\r\n                      <td>\r\n                        <strong>{data.postCount}</strong>\r\n                      </td>\r\n                      <td>\r\n                        <MultiPostMedia postsData={data.postsData} /> \r\n                      </td>\r\n                      <td>\r\n                        <ConnectButton link={data.links}/>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              : \r\n              <>\r\n              <NoData status={1} col={5}/>\r\n              </>\r\n             }\r\n          </tbody>\r\n        </Table>\r\n      </CardBody>\r\n     </Card>\r\n\r\n   {leaderBoard.total>5 ? \r\n    <SeeMoreModal size={'xl'} showHide={show} handlePopup={handlePopup} title={'Leader Bord'}>\r\n      <Suspense fallback={<></>}>\r\n         <LeaderbordPopup moreData={getwallRecordMostActiveUsersMore} {...props} />\r\n       </Suspense>  \r\n    </SeeMoreModal> : null }\r\n    </>    \r\n  );\r\n};\r\n\r\nexport default React.memo(LeaderBoard);\r\n","import React, { useState } from \"react\";\r\nimport { getFirstLetterOfString, manageSpace } from \"../../../../../utils\";\r\nimport moment from \"moment\";\r\n\r\nconst AuthorInfo = (props) => {\r\n  const [imageError, setImageError] = useState(true);\r\n\r\n  return (\r\n    <div className={`d-flex align-items-center ${!props.topperfoming ? 'w-50' : 'me-10'}`}>\r\n      <div className=\"position-relative\">\r\n        <div className=\"symbol symbol-35 symbol-light me-3 con_user_img cursor-pointer rounded-circle overflow-hidden\">\r\n          {imageError ? (\r\n            <div className=\"symbol-image\">{getFirstLetterOfString(props.username)}</div>\r\n          ) : (\r\n            <img\r\n              onError={() => setImageError(true)}\r\n              src={props.picture}\r\n              className=\"img-fluid\"\r\n              width={\"20px\"}\r\n              height={\"20px\"}\r\n            />\r\n          )}\r\n        </div>\r\n        {props.isIcon ? (\r\n          <div className=\"m_social_icon_new card-shadow position-absolute bg-white rounded-circle d-flex align-items-center justify-content-center\">\r\n            <i className={`fab ${props.isIcon} font-size-sm`}></i>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n      <div class=\"d-flex text-left flex-column conn_user_info cursor-pointer\">\r\n        <p class=\"text-dark mb-0 font-weight-boldest overflow-hidden text-nowrap text-ellipsis author_name text-capitalize w-100\">\r\n          {props.username}\r\n        </p>\r\n        <p class=\"m-0\">\r\n          <small class=\"overflow-hidden text-nowrap text-ellipsis post_count me-2 \">\r\n            {props.username ? `@${manageSpace(props.username)}` : null}\r\n          </small>\r\n\r\n         { props.date ? \r\n          <small class=\"overflow-hidden text-nowrap text-ellipsis followers_count \">\r\n            {moment(new Date(props.date * 1000)).fromNow()}\r\n          </small> : null }\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(AuthorInfo);\r\n","    const ConnectButton = (props) => {\r\n\r\n    return (\r\n        <div className=\"conn_status_wrap text-end\">\r\n        <button\r\n            onClick={() => window.open(props.link)}\r\n            type=\"button\"\r\n            className=\"btn btn-primary btn-min-w btn-sm rounded\"\r\n        >\r\n            <span className=\"position-relative\">\r\n            <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"22.213\"\r\n                height=\"18\"\r\n                viewBox=\"0 0 22.213 18\"\r\n                className=\"h-75 align-self-end w-20 me-1\"\r\n            >\r\n                <g id=\"noun-talk-2902544\" transform=\"translate(-98.007 -75.786)\">\r\n                <path\r\n                    id=\"Path_6701\"\r\n                    data-name=\"Path 6701\"\r\n                    d=\"M103.686,84.417a1.084,1.084,0,1,1-.317-.766A1.084,1.084,0,0,1,103.686,84.417Zm2.9-1.084h0a1.084,1.084,0,1,0,.766.317,1.084,1.084,0,0,0-.766-.317Zm3.979,0h0a1.084,1.084,0,1,0,.766.317,1.084,1.084,0,0,0-.766-.317Zm9.659-5.711v8.172a1.839,1.839,0,0,1-1.616,1.823l.625,2.7a.617.617,0,0,1-1,.608l-3.07-2.625v.2a1.838,1.838,0,0,1-1.836,1.836h-9.463L100,93.638a.617.617,0,0,1-1-.608l.625-2.7A1.838,1.838,0,0,1,98.007,88.5V80.331a1.838,1.838,0,0,1,1.836-1.836h3.226v-.873a1.838,1.838,0,0,1,1.836-1.836h13.478a1.838,1.838,0,0,1,1.836,1.836Zm-6.3,2.709a.6.6,0,0,0-.6-.6H99.843a.6.6,0,0,0-.6.6V88.5a.6.6,0,0,0,.6.6h.552a.617.617,0,0,1,.6.756l-.375,1.621,2.607-2.229a.618.618,0,0,1,.4-.148h9.691a.6.6,0,0,0,.6-.6Zm5.063-2.709a.6.6,0,0,0-.6-.6H104.906a.6.6,0,0,0-.6.6V78.5h9.017a1.838,1.838,0,0,1,1.836,1.836v6.35l2.448,2.093-.375-1.621a.617.617,0,0,1,.6-.756h.553a.6.6,0,0,0,.6-.6Z\"\r\n                    fill=\"#ffffff\"\r\n                ></path>\r\n                </g>\r\n            </svg> \r\n            Connect \r\n            </span>\r\n        </button>\r\n        </div>\r\n    );\r\n    };\r\n\r\n    export default ConnectButton","//import Media from '../../CommonComponents/Media/Media';\r\nimport PostMedia from './common/postMedia';\r\nimport ShowMoreContent from './common/showMoreContent';\r\n\r\n\r\n\r\nconst SliderItem = ({ assetItem, assetKey, active, newPicture }) => {\r\n    return active ? <>\r\n    {/* <Media key={assetKey} mediaType={'assetItem.type'} postFile={assetItem.postFile} mediaHeight={500} mediaWidth={500} socialNetwork={'assetItem.type==1?assetItem.networkId'} textContent={''} rating={''} playVideo={true} mediaFile={'assetItem.mediaFile'} /> */}\r\n\r\n        <div className=\"py-3 w-100\">\r\n            <div className=\"d-flex algin-items-center justify-content-between w-100 mb-2\">\r\n                <div className=\"d-flex align-items-center flex-grow-1 w-100 overflow-hidden cursor-pointer\" onClick={event => window.open(assetItem.link, \"blank\")}>\r\n\r\n                    <PostMedia multiPost={1}  postFile={assetItem.postFile} postId={assetItem.postId} className={\"img-fluid\"} />\r\n                    <div className=\"pe-2 w-100 overflow-hidden\">\r\n                        <div className=\"fs-10 d-flex align-items-center text-gray-500\">\r\n                            <p className=\"mb-0 text-ellipsis\">@{assetItem.username}</p>\r\n                            <i className=\"ri-checkbox-blank-circle-fill mx-1\" style={{ fontSize: 5 }}></i>\r\n                            {/* <span className=\"mb-0 text-ellipsis\" style={{ minWidth: 100 }}>{moment(new Date(assetItem.createdAt * 1000)).fromNow()}</span> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* <span className=\"d-flex\">\r\n                    <img className=\"img-fluid\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(assetItem.networkId)}.svg`)} height={22} width={22} alt={GET_NETWORK_NAME(assetItem.networkId)} />\r\n                </span> */}\r\n            </div>\r\n            <ShowMoreContent classes={'influ_content'} content={assetItem.content} idIndex={`influ-${assetKey}`} line={3} />\r\n        </div></> : null\r\n}\r\n\r\nexport default SliderItem;","import React, { Component } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { Splide, SplideSlide, SplideTrack } from '@splidejs/react-splide';\r\nimport SliderItem from '../SliderItem';\r\n//import SliderItem from './SliderItem'\r\n\r\nclass MultiImagePopup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isRequesting: false,\r\n            activeSlideIndex: props.showRecentIndexData ? props.showRecentIndexData : 0\r\n        };\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.showRecentPostCallback(false)\r\n    };\r\n    onActiveSlide = (prev, next) => {\r\n        this.setState({ activeSlideIndex: next })\r\n    }\r\n\r\n    render() {\r\n        const { modalToggle, showRecentPostData, showRecentIndexData } = this.props\r\n\r\n        const { isRequesting, activeSlideIndex } = this.state\r\n        const settings = {\r\n            type: 'slide',\r\n            rewind: false,\r\n            speed: 1000,\r\n            loop: true,\r\n            interval: 7000,\r\n            drag: true,\r\n            perPage: 1,\r\n            gap: 0,\r\n            autoHeight: true,\r\n            autoplay: false,\r\n            fixedHeight: false,\r\n            padding: \"0\",\r\n            pagination: false,\r\n            arrows: true,\r\n            start: showRecentIndexData\r\n        };\r\n\r\n        return <Modal show={modalToggle} onHide={this.handleClose}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            className=\"influ_post_modal\"\r\n            size=\"sm\"\r\n            centered\r\n        >\r\n            <Modal.Body className=\"p-2 p-lg-3\">\r\n                <button type=\"button\" className=\"btn-close position-absolute\" aria-label=\"Close\" onClick={this.handleClose}></button>\r\n                <div className=\"position-relative\">\r\n                { console.log(showRecentPostData.length,'assetItemassetItemassetItem')}\r\n                    {showRecentPostData && showRecentPostData.length > 0 ? <Splide hasTrack={false} options={settings} onMove={this.onActiveSlide}>\r\n                    \r\n                        <SplideTrack>\r\n                            {\r\n                                showRecentPostData.map((assetItem, assetKey) => <SplideSlide key={assetKey}>\r\n                                    <SliderItem assetItem={assetItem} assetKey={assetKey} active={assetKey == activeSlideIndex ? true : false} newPicture={assetItem.postFile} />\r\n                                </SplideSlide>)\r\n                            }\r\n                        </SplideTrack>\r\n                    </Splide> : null}\r\n                </div>\r\n\r\n            </Modal.Body>\r\n        </Modal>\r\n    }\r\n}\r\nexport default MultiImagePopup\r\n","import React, { useState } from \"react\";\r\nimport { Splide, SplideSlide, SplideTrack } from \"@splidejs/react-splide\";\r\nimport PostMedia from \"./postMedia\";\r\nimport MultiImagePopup from \"../popup/multiImagePopup\";\r\n\r\nconst MultiPostMedia = (props) => {\r\n\r\n  const [showRecentIndexData, setShowRecentIndexData] = useState();\r\n  const [showRecentPostModal, setShowRecentPostModal] = useState();\r\n  const [showRecentPostData, setShowRecentPostData] = useState();\r\n\r\n  const updatePopup=(data,index,status)=>{\r\n    setShowRecentPostModal(status);\r\n    setShowRecentPostData(data);\r\n    setShowRecentIndexData(index);\r\n  }\r\n\r\n  const recentPostToggle = (data, index) => (event) => updatePopup(data,index,true)\r\n  const showRecentPostCallback = (dataEvent) => updatePopup(dataEvent,null,null)\r\n   \r\n  const settings = {\r\n    type: \"slide\",\r\n    rewind: false,\r\n    speed: 1000,\r\n    loop: true,\r\n    interval: 7000,\r\n    drag: true,\r\n    perPage: 4,\r\n    gap: 5,\r\n    autoplay: false,\r\n    padding: \"0\",\r\n    pagination: false,\r\n    arrows: true,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.postsData && Object.keys(props.postsData).length > 4 ? (\r\n        <Splide className=\"recent-post m-0\" hasTrack={false} options={settings}>\r\n          <SplideTrack>\r\n            {props.postsData.map((asset, postIndex) => {\r\n              return (\r\n                <SplideSlide key={postIndex}>\r\n                  <div onClick={recentPostToggle([...props.postsData], postIndex)}>\r\n                    <PostMedia\r\n                      multiPost={1}\r\n                      postFile={asset.postFile}\r\n                      postId={asset.postId}\r\n                      className={\"img-fluid\"}\r\n                    />\r\n                  </div>\r\n                </SplideSlide>\r\n              );\r\n            })}\r\n          </SplideTrack>\r\n        </Splide>\r\n      ) : (\r\n        props.postsData.map((asset, postIndex) => {\r\n          return (\r\n            <div\r\n              className=\"d-inline-block\"\r\n              onClick={recentPostToggle([...props.postsData], postIndex)}\r\n            >\r\n              <PostMedia\r\n                multiPost={1}\r\n                postFile={asset.postFile}\r\n                postId={asset.postId}\r\n                className={\"img-fluid\"}\r\n              />\r\n            </div>\r\n          );\r\n        })\r\n      )}\r\n\r\n      {showRecentPostData ? (\r\n        <MultiImagePopup\r\n          showRecentPostCallback={showRecentPostCallback}\r\n          modalToggle={setShowRecentPostModal}\r\n          showRecentPostData={showRecentPostData}\r\n          showRecentIndexData={showRecentIndexData}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(MultiPostMedia);\r\n","import React from \"react\";\r\nimport { baseUrl } from \"../../../../../utils\";\r\n\r\nconst GetData = () => {\r\n  return (\r\n    <div className=\"placeholder-image py-10 d-flex flex-column justify-content-center\">\r\n      <div className=\"mb-3 text-center\">\r\n        <img\r\n          className=\"img-fluid graph-bg\"\r\n          src={baseUrl(`dashboard/analytic/image-placeholder.svg`)}\r\n          width={\"80px\"}\r\n          height={\"80px\"}\r\n        />\r\n      </div>\r\n      <div className=\"\">\r\n        <h5 class=\"text-gray-dark text-center\">No Data Available</h5>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NoData = (props) => {\r\n\r\n  return props.status ? (\r\n    <tr>\r\n      <td colSpan={props.col}>\r\n        <GetData />\r\n      </td>\r\n    </tr>\r\n  ) : (\r\n    <GetData />\r\n  );\r\n};\r\n\r\nexport default React.memo(NoData);\r\n","import React from \"react\";\r\nimport { NoCameraImgPost } from \"../../../../../actions/api\";\r\n\r\nconst PostMedia = (props) => {\r\n  return (\r\n   <div className=\"position-relative d-inline-block\">\r\n    \r\n    \r\n     <img\r\n      id={`post_${props.postId}`}\r\n      onError={(e) => (e.target.src = NoCameraImgPost)}\r\n      src={props.postFile}\r\n      className={`${props.className} ${props.multiPost ? 'img-45' : ''}`}\r\n    />\r\n\r\n    \r\n      \r\n\r\n    {  [3,5].includes(props.mediaType)  ? \r\n    <div className=\"play-media\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"32px\" width=\"32px\" viewBox=\"0 0 24 24\" fill=\"#fff\"><path d=\"M12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22ZM12 20C16.4183 20 20 16.4183 20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20ZM10.6219 8.41459L15.5008 11.6672C15.6846 11.7897 15.7343 12.0381 15.6117 12.2219C15.5824 12.2658 15.5447 12.3035 15.5008 12.3328L10.6219 15.5854C10.4381 15.708 10.1897 15.6583 10.0672 15.4745C10.0234 15.4088 10 15.3316 10 15.2526V8.74741C10 8.52649 10.1791 8.34741 10.4 8.34741C10.479 8.34741 10.5562 8.37078 10.6219 8.41459Z\"></path></svg>\r\n    </div> : null }\r\n   </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(PostMedia);\r\n","import { Button, CardHeader, CardTitle } from \"react-bootstrap\";\r\nimport { baseUrl } from \"../../../../../utils\";\r\n\r\nconst SectionHeading = (props) => {\r\n  return (\r\n    <CardHeader className={`${props.section==1 ? 'p-0 border-0' : props.section==2 ? 'p-5' : 'px-5 pt-5 border-0 pb-0'}`}>\r\n      <CardTitle className=\"mb-0 d-flex align-items-center justify-content-between\">\r\n        <h6 class=\"card-label font-weight-bolder m-0\">\r\n         { props.icon ? <img src={baseUrl(`dashboard/analytic/${props.icon}.svg`)}  height={\"20px\"} width={\"20px\"} /> : null }  {props.title}</h6>\r\n         {props.total > 5 ? (\r\n          <Button\r\n            variant=\"link\"\r\n            className=\"p-0\"\r\n            onClick={() => props.handlePopup(true)}\r\n          >\r\n            See More\r\n          </Button>\r\n        ) : null}\r\n      </CardTitle>\r\n    </CardHeader>\r\n  );\r\n};\r\n\r\nexport default SectionHeading;\r\n","import React from \"react\";\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ButtonToolbar,\r\n    Col,\r\n    Container,\r\n    Row\r\n} from \"react-bootstrap\";\r\n\r\n\r\nexport default class SeeMoreModal extends React.Component {\r\n    render() {\r\n        const { showHide, handlePopup, title, children, size } = this.props;\r\n        return (\r\n            <Modal\r\n                show={showHide}\r\n                onHide={()=>handlePopup(false)}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                size={size}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"p-2\">\r\n                    <div className=\"more_container\">\r\n                        {children}\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport parse from 'html-react-parser';\r\n\r\n\r\nexport default class showMoreContent extends Component {\r\n    state = { reactMore: false }\r\n\r\n    render() {\r\n        const { content } = this.props;\r\n        const { reactMore } = this.state;\r\n\r\n        const postcontent = parse(content.replace(/<[^>]+>/g, ''));\r\n        const notMoreText = postcontent.length > 80 ? true : false\r\n\r\n        console.log(content,'contentcontentsdfsdsd')\r\n\r\n        return (\r\n\r\n            <>{notMoreText ?\r\n                <><span className={`mb-1 ${reactMore ? 'trimPostContent2 ' : 'trimPostContent '}`} id={`gridpostContent${0}`}>\r\n                    {postcontent && String(postcontent) ? parse(String(postcontent)) : postcontent}\r\n                </span>\r\n                    <span style={!reactMore ? {position: 'absolute', right:'0' , display:'inline-flex', padding: \"0px\"} : {position : 'relative'}} className=\"readMore_btn\" onClick={(e) => {e.stopPropagation(); this.setState({ reactMore: !reactMore })}}><b> {reactMore ? 'Read Less' : '... Read More'}</b></span>\r\n                </>\r\n                :\r\n                <p id={`gridpostContent${0}`}>{postcontent && String(postcontent) ? parse(String(postcontent)) : postcontent}</p>\r\n            }\r\n            </>\r\n\r\n        )\r\n    }\r\n}"],"names":["LeaderbordSkeleton","React","LeaderbordPopup","LeaderBoard","props","leaderBoard","loader","show","setShow","useState","handlePopup","event","_jsxs","_Fragment","children","Card","className","_jsx","SectionHeading","title","total","CardBody","Table","responsive","style","width","Suspense","fallback","Object","keys","data","length","map","index","AuthorInfo","picture","image","username","author","name","isIcon","network","icon","follower","postCount","MultiPostMedia","postsData","ConnectButton","link","links","NoData","status","col","SeeMoreModal","size","showHide","moreData","getwallRecordMostActiveUsersMore","imageError","setImageError","topperfoming","getFirstLetterOfString","onError","src","height","class","manageSpace","date","moment","Date","fromNow","onClick","window","open","type","xmlns","viewBox","id","transform","d","fill","_ref","assetItem","assetKey","active","newPicture","PostMedia","multiPost","postFile","postId","fontSize","ShowMoreContent","classes","content","idIndex","line","MultiImagePopup","Component","constructor","super","handleClose","this","showRecentPostCallback","onActiveSlide","prev","next","setState","activeSlideIndex","state","isRequesting","showRecentIndexData","render","modalToggle","showRecentPostData","settings","rewind","speed","loop","interval","drag","perPage","gap","autoHeight","autoplay","fixedHeight","padding","pagination","arrows","start","Modal","onHide","centered","Body","console","log","Splide","hasTrack","options","onMove","SplideTrack","SplideSlide","SliderItem","setShowRecentIndexData","showRecentPostModal","setShowRecentPostModal","setShowRecentPostData","updatePopup","recentPostToggle","asset","postIndex","dataEvent","GetData","baseUrl","colSpan","e","target","NoCameraImgPost","includes","mediaType","CardHeader","section","CardTitle","Button","variant","backdrop","keyboard","Header","closeButton","Title","showMoreContent","arguments","reactMore","postcontent","parse","replace","notMoreText","String","position","right","display","stopPropagation"],"sourceRoot":""}