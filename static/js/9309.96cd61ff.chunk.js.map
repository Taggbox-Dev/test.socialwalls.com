{"version":3,"file":"static/js/9309.96cd61ff.chunk.js","mappings":"gMAGe,MAAMA,UAA4BC,EAAAA,cAC/CC,WAAAA,CAAYC,GAAQ,IAADC,EACjBC,MAAMF,GACNG,KAAKC,SAAWC,EAAAA,YAEhBF,KAAKG,MAAQ,CACXC,OAAQJ,KAAKH,MAAMQ,qBAAqBC,UACxCC,QAAS,CACPC,OAAuB,GAAfX,EAAMY,QAAa,CAAC,UAAW,WAAa,CAAC,UAAW,UAAW,WAC3EC,MAAO,CACLC,GAAI,oBACJC,KAAM,OACNC,OAAQ,CACNC,QAASA,KACP,MAAMJ,EAAQV,KAAKC,SAASc,QAAQL,MAClB,GAAfb,EAAMY,SACPC,EAAMM,WAAW,+BACnB,EAEFC,YAAaA,CAACC,EAAcC,EAAaC,KACvC,GAAkB,GAAfvB,EAAMY,QAAW,CACJT,KAAKC,SAASc,QAAQL,MACZW,EAAEC,QAAQlB,OAAOmB,QAE/BC,SAAQ,CAACC,EAAGC,KAChBA,IAAUP,EACZD,EAAaF,WACXE,EAAaG,EAAEC,QAAQK,YAAYD,IAGrCR,EAAaU,WACXV,EAAaG,EAAEC,QAAQK,YAAYD,GAEvC,GAEJ,IAGJG,WAAY,CACVC,SAAS,EACTC,OAAQ,SACRC,iBAAkB,CAChBC,MAAO,MAGXC,OAAQ,IACRC,KAAM,CAAEL,SAAS,GACjBM,QAAS,CAAEC,MAAM,IAEnBC,OAAQ,CACND,MAAM,EACNE,SAAU,MACVC,WAAY,CACVC,WAAY,GACZC,SAAU,IAGdC,WAAY,CAAEb,SAAS,GACvBc,QAAS,CAAEC,KAAM,EAAGC,MAAO,UAC3BC,OAAQ,CACNC,MAAO,CAAC,EAAG,EAAG,GACdC,MAAO,SACPC,QAAS,SAEXC,MAAO,CACLvC,KAAM,WACNwC,IAAoC,QAAjCtD,EAAEE,KAAKH,MAAMQ,4BAAoB,IAAAP,OAAA,EAA/BA,EAAiCuD,SAAS,GAC/CC,WAAY,GAEdC,QAAS,CAAEC,EAAG,CAAEC,OAAQ,iBAE1BC,WAAY,CACV,CAEEnD,QAAS,CACPG,MAAO,CACLwB,OAAQ,MAIZ3B,QAAS,CACPG,MAAO,CACLwB,OAAQ,QAMpB,CAEAyB,MAAAA,GAAU,IAADC,EACP,MAAM,qBAAEvD,GAAyBL,KAAKH,MAEhCgE,EACgB,OAApBxD,QAAoB,IAApBA,OAAoB,EAApBA,EAAsBgD,UACA,OAApBhD,QAAoB,IAApBA,GAA8B,QAAVuD,EAApBvD,EAAsBgD,gBAAQ,IAAAO,OAAV,EAApBA,EAAgCE,QAAS,GAE7C,GAAID,EAAU,CACZ,MAAMnD,EAAQqD,IAAAA,aAAwB,kBAClCrD,GACFA,EAAMsD,MACgB,OAApB3D,QAAoB,IAApBA,OAAoB,EAApBA,EAAsBgD,SAAS,GACX,OAApBhD,QAAoB,IAApBA,OAAoB,EAApBA,EAAsBgD,SAASQ,EAAW,GAGhD,CAEA,OACEI,EAAAA,EAAAA,KAACC,EAAAA,EAAc,CACbC,IAAKnE,KAAKC,SACVM,QAASP,KAAKG,MAAMI,QACpBH,OAAQJ,KAAKG,MAAMC,OACnBQ,KAAK,OACLsB,OAAQ,KAGd,E","sources":["app/Display/analytics-new/layout/common/assetsTypeLineChart.js"],"sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport ApexCharts from \"apexcharts\";\r\nexport default class AssetsTypeLineChart extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.chartRef = React.createRef(); // Create a reference to the chart\r\n \r\n    this.state = {\r\n      series: this.props.contentAnalyticsData.newSeries,\r\n      options: {\r\n        colors: props.section==1 ? [\"#546FED\", \"#EF45B1\"] : [\"#546FED\", \"#F8B861\", \"#EF45B1\"],\r\n        chart: {\r\n          id: \"analyticsOverview\",\r\n          type: \"line\",\r\n          events: {\r\n            mounted: () =>  {\r\n              const chart = this.chartRef.current.chart; // Access the chart instance\r\n              if(props.section==1){\r\n                chart.hideSeries(\"Average Recommendation Score\"); // Hide the second series by default\r\n              }\r\n            },\r\n            legendClick: (chartContext, seriesIndex, config) => {\r\n              if(props.section==1){\r\n                const chart = this.chartRef.current.chart; // Access the chart instance\r\n                const allSeries = chart.w.globals.series.slice();\r\n\r\n                allSeries.forEach((_, index) => {\r\n                  if (index !== seriesIndex) {\r\n                    chartContext.hideSeries(\r\n                      chartContext.w.globals.seriesNames[index]\r\n                    );\r\n                  } else {\r\n                    chartContext.showSeries(\r\n                      chartContext.w.globals.seriesNames[index]\r\n                    );\r\n                  }\r\n                });\r\n              }\r\n            },\r\n          },\r\n          animations: {\r\n            enabled: true,\r\n            easing: \"linear\",\r\n            dynamicAnimation: {\r\n              speed: 1000,\r\n            },\r\n          },\r\n          height: 350,\r\n          zoom: { enabled: false },\r\n          toolbar: { show: false },\r\n        },\r\n        legend: {\r\n          show: true,\r\n          position: \"top\",\r\n          itemMargin: {\r\n            horizontal: 20,\r\n            vertical: 0,\r\n          },\r\n        },\r\n        dataLabels: { enabled: false },\r\n        markers: { size: 0, style: \"hollow\" },\r\n        stroke: {\r\n          width: [4, 4, 4],\r\n          curve: \"smooth\",\r\n          lineCap: 'round',  // Makes the line edges rounded\r\n        },\r\n        xaxis: {\r\n          type: \"datetime\",\r\n          min: this.props.contentAnalyticsData?.unixDate[0],\r\n          tickAmount: 6,\r\n        },\r\n        tooltip: { x: { format: \"dd MMM yyyy\" } },\r\n      },\r\n      responsive: [\r\n        {\r\n          // breakpoint: 991,\r\n          options: {\r\n            chart: {\r\n              height: 300,\r\n            },\r\n          },\r\n          // breakpoint: 767,\r\n          options: {\r\n            chart: {\r\n              height: 280,\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { contentAnalyticsData } = this.props;\r\n\r\n    const lastDate =\r\n      contentAnalyticsData?.unixDate[\r\n        contentAnalyticsData?.unixDate?.length - 1\r\n      ];\r\n    if (lastDate) {\r\n      const chart = ApexCharts.getChartByID(\"area-datetime2\");\r\n      if (chart) {\r\n        chart.zoomX(\r\n          contentAnalyticsData?.unixDate[0],\r\n          contentAnalyticsData?.unixDate[lastDate - 1]\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <ReactApexChart\r\n        ref={this.chartRef}\r\n        options={this.state.options}\r\n        series={this.state.series}\r\n        type=\"line\"\r\n        height={350}\r\n      />\r\n    );\r\n  }\r\n}\r\n"],"names":["AssetsTypeLineChart","PureComponent","constructor","props","_this$props$contentAn","super","this","chartRef","React","state","series","contentAnalyticsData","newSeries","options","colors","section","chart","id","type","events","mounted","current","hideSeries","legendClick","chartContext","seriesIndex","config","w","globals","slice","forEach","_","index","seriesNames","showSeries","animations","enabled","easing","dynamicAnimation","speed","height","zoom","toolbar","show","legend","position","itemMargin","horizontal","vertical","dataLabels","markers","size","style","stroke","width","curve","lineCap","xaxis","min","unixDate","tickAmount","tooltip","x","format","responsive","render","_contentAnalyticsData","lastDate","length","ApexCharts","zoomX","_jsx","ReactApexChart","ref"],"sourceRoot":""}