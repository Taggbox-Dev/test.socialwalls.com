{"version":3,"file":"static/js/396.c917d058.chunk.js","mappings":"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","sources":["app/Display/analytics-new/layout/skeleton/screenoverviewSkeleton.js","app/Display/analytics-new/components/activityHub/screensOverview.js","app/Display/analytics-new/layout/common/noData.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst List = () => {\r\n  return (\r\n    <td>\r\n      <div>\r\n        <div className=\"sk_line sk_line_30 sk_line_height_16\"></div>\r\n      </div>\r\n    </td>\r\n  );\r\n};\r\n\r\nconst ScreenoverviewSkeleton = () => {\r\n  return [1, 2, 3, 4].map(() => {\r\n    return (\r\n      <tr>\r\n        <List />\r\n        <List />\r\n        <List />\r\n        <List />\r\n        <List />\r\n        <List />\r\n      </tr>\r\n    );\r\n  });\r\n};\r\n\r\nexport default React.memo(ScreenoverviewSkeleton);\r\n","import React from \"react\";\r\nimport { Card, CardBody, CardHeader, CardTitle, Table } from \"react-bootstrap\"\r\nimport ScreenoverviewSkeleton from \"../../layout/skeleton/screenoverviewSkeleton\";\r\nimport NoData from \"../../layout/common/noData\";\r\n\r\nconst ScreensOverview=(props)=>{\r\n\r\n     const { data, loader } = props\r\n    return(\r\n      <>\r\n        <Card className=\"sw-card-custom gutter-b card-shadow\">\r\n          <CardHeader className=\"px-5 pt-5 border-0 pb-0\">\r\n            <CardTitle className=\"m-0\">\r\n              <h6 class=\"card-label font-weight-bolder m-0\">Screens Overview</h6>\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardBody className=\"py-5 px-0\">\r\n            <Table responsive>\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"text-muted\" style={{ width: \"20%\" }}>\r\n                    Screen Name\r\n                  </th>\r\n                  <th className=\"text-muted\" style={{ width: \"20%\" }}>\r\n                    Screen IP\r\n                  </th>\r\n                  <th className=\"text-muted\" style={{ width: \"20%\" }}>\r\n                    Device Location\r\n                  </th>\r\n                  <th className=\"text-muted\" style={{ width: \"10%\" }}>\r\n                    Status\r\n                  </th>\r\n                  <th className=\"text-muted\" style={{ width: \"20%\" }}>\r\n                    Last Refresh Time\r\n                  </th>\r\n                  <th className=\"text-muted\" style={{ width: \"10%\" }}>\r\n                    Daily Active Hours\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n\r\n\r\n               { loader ? <ScreenoverviewSkeleton/> : data &&  Object.keys(data).length ? data.map((e)=>{  \r\n\r\n                return(<tr className=\"border-top\">\r\n                  <td>\r\n                      <strong>{e.screenName}</strong>\r\n                    </td>\r\n                    <td><div className=\"\">{e.screenIp}</div></td>\r\n                    <td>\r\n                      {e.deviceLocation}\r\n                    </td>\r\n                    <td>\r\n                      <label className={`mx-width-80 alert ${e.status==\"active\" ? 'alert-success' : 'alert-danger'} m-0 rounded-0 px-3 py-1`}>\r\n                        {e.status}\r\n                      </label>\r\n                    </td>\r\n                    <td>\r\n                       {e.lastRefreshTime}\r\n                    </td>\r\n                    <td>\r\n                     {e.activeHours}\r\n                    </td>\r\n                  </tr>\r\n                  )\r\n                })\r\n                 : <NoData status={1} col={6}/>\r\n              }\r\n                </tbody>\r\n            </Table> \r\n          </CardBody>\r\n        </Card>\r\n      </>\r\n    )\r\n}   \r\n\r\nexport default React.memo(ScreensOverview);","import React from \"react\";\r\nimport { baseUrl } from \"../../../../../utils\";\r\n\r\nconst GetData = () => {\r\n  return (\r\n    <div className=\"placeholder-image py-10 d-flex flex-column justify-content-center\">\r\n      <div className=\"mb-3 text-center\">\r\n        <img\r\n          className=\"img-fluid graph-bg\"\r\n          src={baseUrl(`dashboard/analytic/image-placeholder.svg`)}\r\n          width={\"80px\"}\r\n          height={\"80px\"}\r\n        />\r\n      </div>\r\n      <div className=\"\">\r\n        <h5 class=\"text-gray-dark text-center\">No Data Available</h5>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NoData = (props) => {\r\n\r\n  return props.status ? (\r\n    <tr>\r\n      <td colSpan={props.col}>\r\n        <GetData />\r\n      </td>\r\n    </tr>\r\n  ) : (\r\n    <GetData />\r\n  );\r\n};\r\n\r\nexport default React.memo(NoData);\r\n"],"names":["List","_jsx","children","className","ScreenoverviewSkeleton","map","_jsxs","React","ScreensOverview","props","data","loader","_Fragment","Card","CardHeader","CardTitle","class","CardBody","Table","responsive","style","width","Object","keys","length","e","screenName","screenIp","deviceLocation","status","lastRefreshTime","activeHours","NoData","col","GetData","src","baseUrl","height","colSpan"],"sourceRoot":""}