{"version":3,"file":"static/js/3189.b6dd3d4f.chunk.js","mappings":"yRAYA,MAAMA,EAAmBC,EAAAA,MAAW,IAChC,kCAGEC,EAAmBD,EAAAA,MAAW,IAChC,iCAGEE,EAAiBC,IAEnB,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,WAAS,GAE3BC,EAAcC,IAChBH,EAAQG,EAAM,GAGZ,eAAEC,EAAc,iBAAEC,EAAgB,iBAAEC,GAAqBR,EAE/D,OACIS,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EAEAF,EAAAA,EAAAA,MAACG,EAAAA,EAAI,CAACC,UAAU,2CAA0CF,SAAA,EACxDG,EAAAA,EAAAA,KAACC,EAAAA,EAAc,CAACC,MAAO,mBAAoBR,iBAAkBA,EAAkBS,MAAOX,EAAeW,MAAOb,YAAaA,KACzHU,EAAAA,EAAAA,KAACF,EAAAA,EAAKM,KAAI,CAACL,UAAU,YAAWF,UAC9BF,EAAAA,EAAAA,MAACU,EAAAA,EAAK,CAACN,UAAU,OAAOO,YAAU,EAAAT,SAAA,EAClCG,EAAAA,EAAAA,KAAA,SAAAH,UACIF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACAG,EAAAA,EAAAA,KAAA,MAAIO,MAAO,CAAEC,MAAO,OAAQX,SAAC,WAG7BG,EAAAA,EAAAA,KAAA,MAAIO,MAAO,CAAEC,MAAO,OAAQX,SAAC,UAG7BG,EAAAA,EAAAA,KAAA,MAAIO,MAAO,CAAEC,MAAO,OAAQX,SAAC,eAG7BG,EAAAA,EAAAA,KAAA,MAAIO,MAAO,CAAEC,MAAO,OAAQX,SAAC,kBAG7BG,EAAAA,EAAAA,KAAA,MAAIO,MAAO,CAAEC,MAAO,eAGxBR,EAAAA,EAAAA,KAAA,SAAAH,SACMJ,GAAmBO,EAAAA,EAAAA,KAAChB,EAAgB,IAAKQ,GAAkBiB,OAAOC,KAAKlB,EAAemB,MAAMC,OAC5FpB,EAAemB,KAAKE,KAAI,CAACF,EAAKG,KAExBnB,EAAAA,EAAAA,MAAA,MAAII,UAAU,aAAYF,SAAA,EACtBG,EAAAA,EAAAA,KAAA,MAAAH,UACIG,EAAAA,EAAAA,KAAA,UAAAH,SAASiB,EAAI,OAErBd,EAAAA,EAAAA,KAAA,MAAAH,UACCG,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CACRC,QAASL,EAAKM,MACdC,eAAgBP,EAAKQ,OAAOC,SAC5BC,KAAMV,EAAKW,MACXC,WAAYZ,EAAKQ,OAAOK,KACxBC,UAAWd,EAAKe,QAAQC,GACxBC,OAAQjB,EAAKe,QAAQG,UAGzB7B,EAAAA,EAAAA,KAAA,MAAAH,UACIG,EAAAA,EAAAA,KAAA,UAAAH,UAAUiC,EAAAA,EAAAA,IAAWnB,EAAKoB,gBAE9B/B,EAAAA,EAAAA,KAAA,MAAAH,UACCG,EAAAA,EAAAA,KAACgC,EAAAA,EAAc,CAACC,UAAWtB,EAAKsB,eAEjCjC,EAAAA,EAAAA,KAAA,MAAAH,UACEG,EAAAA,EAAAA,KAACkC,EAAAA,EAAa,CAACb,KAAMV,EAAKW,MAAOI,QAASf,EAAKe,QAAQC,aAK7D3B,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CAACC,OAAQ,EAAGC,IAAK,cAO/B7C,EAAeW,MAAQ,GACpBH,EAAAA,EAAAA,KAACsC,EAAAA,QAAU,CAACC,KAAM,KAAMC,SAAUrD,EAAMG,YAAaA,EAAaY,MAAO,mBAAmBL,UACxFG,EAAAA,EAAAA,KAACyC,EAAAA,SAAQ,CAACC,UAAU1C,EAAAA,EAAAA,KAAAJ,EAAAA,SAAA,IAAMC,UACtBG,EAAAA,EAAAA,KAAClB,EAAgB,CAACqB,MAAOX,EAAeW,MAAOwC,SAAUC,EAAAA,MAAwB1D,QAEzE,OACrB,EAIX,EAAeH,EAAAA,KAAWE,E","sources":["app/Display/analytics-new/content/components/topeventVoice.js"],"sourcesContent":["    import { Card, Table } from \"react-bootstrap\";\r\n    import \"../../assets/css/slide.scss\";\r\n    import React, { Suspense, useState } from \"react\";  \r\n    import ConnectButton from \"../../layout/common/connectButton\";\r\n    import AuthorInfo from \"./authorInfo\";\r\n    import NoData from \"../../layout/common/noData\";\r\n    import PopupModal from \"../../layout/common/popup/popupModal\";\r\n    import { getEventVoicesMore } from \"../../../../../actions/analyticsNew\";\r\n    import SectionHeading from \"../../layout/common/sectionHeading\";\r\n    import MultiPostMedia from \"../../layout/common/multiPostMedia\";\r\nimport { kFormatter } from \"../../../../../utils\";\r\n\r\nconst AuthorpostsPopup = React.lazy(() =>\r\n    import(\"../../layout/popup/authorpostsPopup\")\r\n);\r\n\r\nconst TopeventSekleton = React.lazy(() =>\r\n    import(\"../../layout/skeleton/topeventSekleton\")\r\n);\r\n\r\nconst TopeventVoice = (props) => {\r\n\r\n    const [show, setShow] = useState(false)\r\n\r\n    const handlePopup = event => {\r\n        setShow(event)\r\n    }\r\n\r\n    const { topeventVoices, top_event_loader, selectedWallFeed } = props;\r\n\r\n    return (\r\n        <>\r\n\r\n        <Card className=\"sw-card-custom gutter-b card-shadow mb-5\">\r\n          <SectionHeading title={'Top Event Voices'} selectedWallFeed={selectedWallFeed} total={topeventVoices.total} handlePopup={handlePopup} />\r\n          <Card.Body className=\"py-5 px-0\">\r\n            <Table className=\"mb-0\" responsive>\r\n            <thead>\r\n                <tr>\r\n                <th style={{ width: \"10%\" }}>\r\n                    S No.\r\n                </th>\r\n                <th style={{ width: \"30%\" }}>\r\n                    Name\r\n                </th>\r\n                <th style={{ width: \"20%\" }}>\r\n                    Followers\r\n                </th>\r\n                <th style={{ width: \"20%\" }}>\r\n                    Recent Posts\r\n                </th>\r\n                <th style={{ width: \"20%\" }}></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                { top_event_loader ? <TopeventSekleton/> : topeventVoices && Object.keys(topeventVoices.data).length\r\n                ? topeventVoices.data.map((data,key) => {\r\n                    return (\r\n                        <tr className=\"border-top\">\r\n                            <td>\r\n                                <strong>{key+1}</strong>\r\n                            </td>\r\n                        <td>\r\n                         <AuthorInfo\r\n                            picture={data.image}\r\n                            authorUsername={data.author.username}\r\n                            link={data.links}\r\n                            authorName={data.author.name} \r\n                            networkId={data.network.id}\r\n                            isIcon={data.network.icon}\r\n                            />  \r\n                        </td>\r\n                        <td>\r\n                            <strong>{ kFormatter(data.postCount)}</strong>\r\n                        </td>\r\n                        <td>\r\n                         <MultiPostMedia postsData={data.postsData} />   \r\n                        </td>\r\n                        <td>\r\n                          <ConnectButton link={data.links} network={data.network.id}/>\r\n                        </td>\r\n                        </tr>\r\n                    );\r\n                    })\r\n                  : <NoData status={1} col={5}/>\r\n                }\r\n            </tbody>\r\n            </Table>\r\n        </Card.Body>\r\n        </Card>\r\n\r\n            {topeventVoices.total > 5 ?\r\n                <PopupModal size={'xl'} showHide={show} handlePopup={handlePopup} title={'Top Event Voices'}>\r\n                    <Suspense fallback={<></>}>\r\n                        <AuthorpostsPopup total={topeventVoices.total} moreData={getEventVoicesMore} {...props} />\r\n                    </Suspense>\r\n                </PopupModal> : null}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default React.memo(TopeventVoice);;\r\n"],"names":["AuthorpostsPopup","React","TopeventSekleton","TopeventVoice","props","show","setShow","useState","handlePopup","event","topeventVoices","top_event_loader","selectedWallFeed","_jsxs","_Fragment","children","Card","className","_jsx","SectionHeading","title","total","Body","Table","responsive","style","width","Object","keys","data","length","map","key","AuthorInfo","picture","image","authorUsername","author","username","link","links","authorName","name","networkId","network","id","isIcon","icon","kFormatter","postCount","MultiPostMedia","postsData","ConnectButton","NoData","status","col","PopupModal","size","showHide","Suspense","fallback","moreData","getEventVoicesMore"],"sourceRoot":""}