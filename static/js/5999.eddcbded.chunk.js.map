{"version":3,"file":"static/js/5999.eddcbded.chunk.js","mappings":"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","sources":["app/Display/analytics-new/content/components/leaderBoard.js"],"sourcesContent":["import React, { Suspense, useState } from \"react\";\r\nimport { Card, CardBody, Table } from \"react-bootstrap\";\r\nimport ConnectButton from \"../../layout/common/connectButton\";\r\nimport AuthorInfo from \"./authorInfo\";\r\nimport NoData from \"../../layout/common/noData\";\r\nimport { getwallRecordMostActiveUsersMore } from \"../../../../../actions/analyticsNew\";\r\nimport SectionHeading from \"../../layout/common/sectionHeading\";\r\nimport MultiPostMedia from \"../../layout/common/multiPostMedia\";\r\nimport PopupModal from \"../../layout/common/popup/popupModal\";\r\nimport { getwallRecordMostActiveUsersMoreDashboad } from \"../../../../../actions/display/dashboardActions\";\r\nimport { kFormatter } from \"../../../../../utils\";\r\nconst LeaderbordSkeleton = React.lazy(() =>\r\n  import(\"../../layout/skeleton/leaderbordSkeleton\")\r\n);\r\n\r\nconst AuthorpostsPopup = React.lazy(() =>\r\n  import(\"../../layout/popup/authorpostsPopup\")\r\n);\r\n\r\nconst LeaderBoard = (props) => {\r\n\r\n  const { leaderBoard, loader, selectedWallFeed, isDashboard } = props;\r\n  const [show, setShow] = useState(false)\r\n\r\n  const handlePopup = event => {\r\n    setShow(event)\r\n  }\r\n\r\n  console.log(leaderBoard,'leaderBoardkjdsfjjsdfkljdklsfsdsd')\r\n\r\n  return (\r\n   <>\r\n    <Card className={`sw-card-custom gutter-b card-shadow mb-5 ${isDashboard ? 'h-100' : 'an-leaderBoard-height'} mb-0`}>\r\n      <SectionHeading title={'Leaderboard'} total={leaderBoard && Object.keys(leaderBoard).length ? leaderBoard.total : 0} selectedWallFeed={selectedWallFeed} handlePopup={handlePopup} />\r\n      <CardBody className=\"py-5 px-0\">\r\n        <Table responsive>\r\n          <thead>\r\n            <tr>\r\n              <th style={{ width: \"10%\" }}>\r\n                S No.\r\n              </th>\r\n              <th style={{ width: \"25%\" }}>\r\n                Name\r\n              </th>\r\n              <th style={{ width: \"15%\" }}>\r\n                Posts\r\n              </th>\r\n              <th style={{ width: \"20%\" }}>\r\n                Recent Posts\r\n              </th>\r\n              <th style={{ width: \"15%\" }}></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n\r\n\r\n              {loader ? <Suspense fallback={<></>}> <LeaderbordSkeleton /> </Suspense> : leaderBoard && Object.keys(leaderBoard.data).length\r\n                ? leaderBoard.data.map((data, index) => {\r\n                  return (\r\n                    <tr className=\"border-top\">\r\n                      <td>\r\n                        <strong>{index + 1}.</strong>\r\n                      </td>\r\n                      <td>\r\n                        <AuthorInfo\r\n                          picture={data.image}\r\n                          authorUsername={data.author.username}\r\n                          authorName={data.author.name}\r\n                          isIcon={data.network.icon}\r\n                          link={data.links}\r\n                          networkId={data.network.id}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <strong>{kFormatter(data.postCount)}</strong>\r\n                      </td>\r\n                      <td>\r\n                        <MultiPostMedia postsData={data.postsData} />\r\n                      </td>\r\n                      <td>\r\n                        <ConnectButton link={data.links} network={data.network.id} />\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n                :\r\n                <>\r\n                  <NoData status={1} col={5} />\r\n                </>\r\n              }\r\n            </tbody>\r\n          </Table>\r\n        </CardBody>\r\n      </Card>\r\n\r\n      {leaderBoard.total > 5 ?\r\n        <PopupModal size={'xl'} showHide={show} handlePopup={handlePopup} title={'Leader Bord'}>\r\n          <Suspense fallback={<></>}>\r\n            <AuthorpostsPopup total={leaderBoard.total} hideFollwers={1} moreData={getwallRecordMostActiveUsersMore} {...props} />\r\n          </Suspense>\r\n        </PopupModal> : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(LeaderBoard);"],"names":["LeaderbordSkeleton","React","AuthorpostsPopup","LeaderBoard","props","leaderBoard","loader","selectedWallFeed","isDashboard","show","setShow","useState","handlePopup","event","console","log","_jsxs","_Fragment","children","Card","className","_jsx","SectionHeading","title","total","Object","keys","length","CardBody","Table","responsive","style","width","Suspense","fallback","data","map","index","AuthorInfo","picture","image","authorUsername","author","username","authorName","name","isIcon","network","icon","link","links","networkId","id","kFormatter","postCount","MultiPostMedia","postsData","ConnectButton","NoData","status","col","PopupModal","size","showHide","hideFollwers","moreData","getwallRecordMostActiveUsersMore"],"sourceRoot":""}