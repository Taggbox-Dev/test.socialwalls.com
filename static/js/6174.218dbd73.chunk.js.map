{"version":3,"file":"static/js/6174.218dbd73.chunk.js","mappings":"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","sources":["app/Display/analytics-new/content/components/trueSense.js","app/Display/analytics-new/layout/common/filterModeration.js","app/Display/analytics-new/layout/common/sectionHeading.js","app/Display/analytics-new/layout/skeleton/topPerfomingSkeleton.js"],"sourcesContent":["import React from \"react\";\r\nimport { Card, CardBody } from \"react-bootstrap\";\r\nimport TrueSenseSkeleton from \"../../layout/skeleton/topPerfomingSkeleton\";\r\nimport FilterModeration from \"../../layout/common/filterModeration\";\r\nimport SectionHeading from \"../../layout/common/sectionHeading\";\r\n\r\nconst TrueSense = (props) => {\r\n  const { truSense, loader, dateFilter, selectedWallFeed } = props;\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"sw-card-custom gutter-b card-shadow mb-5\">\r\n        <SectionHeading section={2} icon={'ai'} title={'TruSense Recommendation'} />\r\n        <CardBody className=\"p-5\">\r\n          {loader ? <TrueSenseSkeleton />\r\n            : truSense && Object.keys(truSense).length\r\n              ? truSense.map((data, key) => {\r\n                return (\r\n                  <FilterModeration dateFilter={dateFilter} selectedWallFeed={selectedWallFeed} link={`recommendation=${data.name}`}>\r\n                    <div className=\"p-6 border rounded\">\r\n                      <div className=\"d-flex align-items-center\">\r\n                        <div className=\"d-flex align-items-start me-10 w-100\">\r\n                          <div className=\"border rounded p-2 me-4\">\r\n                            <span className={`bulits ${key == 0 ? 'bg-success' : key == 1 ? 'bg-warning' : 'bg-danger'}  d-block rounded-circle`}></span>\r\n                          </div>\r\n                          <div className=\"\">\r\n                            <p className=\"text-dark mb-0 font-weight-boldest overflow-hidden text-nowrap text-ellipsis author_name font-size-lg\">\r\n                              {data.name}\r\n                            </p>\r\n                            <p className=\"text-dark mb-0\">\r\n                              {data.details}\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                        <p className=\"font-weight-boldest text-dark display-6 m-0\">\r\n                          {loader ? 0 : data.count}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </FilterModeration>\r\n                );\r\n              })\r\n              : null}\r\n\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(TrueSense);\r\n","import moment from \"moment\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst FilterModeration = (props) => {\r\n\r\n  const { children, dateFilter, selectedWallFeed, link, isClass } = props  \r\n\r\n  return (\r\n    <Link className={`${isClass ? isClass : `mb-4 last-child-mb-0 d-block`}`} to={selectedWallFeed.length ? `/moderation/index/${localStorage.getItem('wallId')}?${link}/${moment(dateFilter.startDate).format(\"YYYY-MM-DD\")}/${moment(dateFilter.endDate).format(\"YYYY-MM-DD\")}` : `#`}>\r\n        {children}\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default FilterModeration\r\n","import { Button, CardHeader, CardTitle } from \"react-bootstrap\";\r\nimport { baseUrl } from \"../../../../../utils\";\r\n\r\nconst SectionHeading = (props) => {\r\n\r\n  const { title, section, cardTitleCss, icon, iconFull, selectedWallFeed, moreData, total, handlePopup, headingMargin, isDashboard } = props\r\n\r\n  // && selectedWallFeed && Object.keys(selectedWallFeed).length\r\n\r\n  return (\r\n    <CardHeader className={`${section==1 ? 'p-0 border-0' : section==2 ? 'p-5' : section==3 ? 'p-0 pb-3' : 'px-5 pt-5 border-0 pb-0'}`}>\r\n      <CardTitle className={cardTitleCss ? cardTitleCss : `mb-0 d-flex align-items-center justify-content-between ${isDashboard ? isDashboard : \"\"}`}>\r\n        <h6 class={`card-label font-weight-bolder ${!headingMargin ? 'm-0' : ''} `}>\r\n         { icon ? <img src={baseUrl(`dashboard/analytic/${icon}.svg`)}  height={\"20px\"} width={\"20px\"} /> : null }\r\n         { iconFull ? <img src={iconFull}  height={\"20px\"} width={\"20px\"} />  : null }   {title}</h6>\r\n         { (total > 5) || moreData ? (\r\n          <Button\r\n            variant=\"link\"\r\n            className=\"p-0\"\r\n            onClick={() => handlePopup(true)}\r\n          >\r\n            See More\r\n          </Button>\r\n        ) : null\r\n        }\r\n      </CardTitle>\r\n    </CardHeader>\r\n  );\r\n};\r\n\r\nexport default SectionHeading;\r\n","    import React from \"react\";\r\n\r\n    const List = () => {\r\n    return (\r\n        <div class=\"d-flex align-items-center justify-content-between py-2\">\r\n        <p class=\"sk_line sk_line_height_10 sk_line_40 m-0\"></p>\r\n        <h6 class=\"sk_line sk_line_height_16 sk_line_20 m-0\"></h6>\r\n        </div>\r\n    );\r\n    };\r\n\r\n    const TopPerfomingSkeleton = () => {\r\n    return [1, 2, 3, 4, 5].map(() => {\r\n        return (\r\n        <div className=\"top_posts top_posts_new\">\r\n            <div className=\"card-shadow rounded mb-1\">\r\n            <div className=\"m_card_cont\">\r\n                <div className=\"sk_list_view\">\r\n                <div className=\"sk_line sk_img_thumb rounded w-100 m-0 me-5\"></div>\r\n                </div>\r\n                <div className=\"text-center position-relative m_user_info\">\r\n                <div className=\"m_grid_author d-flex justify-content-center mb-3\">\r\n                    <div class=\"sk_line sk_img m-0 me-3\"></div>\r\n                </div>\r\n                <div className=\"w-100 d-flex flex-column align-items-center\">\r\n                    <h3 class=\"sk_line sk_line_height_16 sk_line_70 m-0 mb-3\"></h3>\r\n                    <p class=\"sk_line sk_line_height_10 sk_line_40 m-0\"></p>\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                    <List />\r\n                    <List />\r\n                    <List />\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    });\r\n    };\r\n\r\n    export default React.memo(TopPerfomingSkeleton);\r\n"],"names":["TrueSense","props","truSense","loader","dateFilter","selectedWallFeed","_jsx","_Fragment","children","_jsxs","Card","className","SectionHeading","section","icon","title","CardBody","TrueSenseSkeleton","Object","keys","length","map","data","key","FilterModeration","link","name","details","count","React","isClass","Link","to","localStorage","getItem","moment","startDate","format","endDate","cardTitleCss","iconFull","moreData","total","handlePopup","headingMargin","isDashboard","CardHeader","CardTitle","class","src","baseUrl","height","width","Button","variant","onClick","List","TopPerfomingSkeleton"],"sourceRoot":""}