{"version":3,"file":"static/js/380.241cc9ee.chunk.js","mappings":"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","sources":["app/Display/analytics-new/components/content/aeaderBoard.js","app/Display/analytics-new/components/content/authorInfo.js","app/Display/analytics-new/layout/common/connectButton.js","app/Display/analytics-new/layout/common/multiPostMedia.js","app/Display/analytics-new/layout/common/noData.js","app/Display/analytics-new/layout/common/postMedia.js","app/Display/analytics-new/layout/common/sectionHeading.js","app/Display/analytics-new/layout/common/seeMoreModal.js"],"sourcesContent":["import React, { Suspense, useState } from \"react\";\r\nimport { Card, CardBody, Table } from \"react-bootstrap\";\r\nimport SeeMoreModal from \"../../layout/common/seeMoreModal\"; \r\nimport ConnectButton from \"../../layout/common/connectButton\";\r\nimport AuthorInfo from \"./authorInfo\";\r\nimport NoData from \"../../layout/common/noData\";\r\nimport { getwallRecordMostActiveUsersMore } from \"../../../../../actions/analyticsNew\";\r\nimport SectionHeading from \"../../layout/common/sectionHeading\";\r\nimport MultiPostMedia from \"../../layout/common/multiPostMedia\";\r\nconst LeaderbordSkeleton = React.lazy(() =>\r\n  import(\"../../layout/skeleton/leaderbordSkeleton\")\r\n);\r\n\r\nconst LeaderbordPopup = React.lazy(() =>\r\n  import(\"../../layout/popup/leaderbordPopup\")\r\n);\r\n\r\nconst LeaderBoard = (props) => {\r\n\r\n    const settings = {\r\n      type: \"slide\",\r\n      rewind: false,\r\n      speed: 1000,\r\n      loop: true,\r\n      interval: 7000,\r\n      drag: true,\r\n      perPage: 4,\r\n      gap: 5,\r\n      autoplay: false,\r\n      padding: \"0\",\r\n      pagination: false,\r\n      arrows: true,\r\n  };\r\n\r\n  const { leaderBoard, loader } = props;\r\n\r\n  const [show, setShow] = useState(false)\r\n\r\n  const handlePopup = event => {  \r\n    setShow(event)\r\n  }\r\n\r\n  return (\r\n   <>\r\n    <Card className=\"sw-card-custom gutter-b card-shadow mb-5\">\r\n      <SectionHeading title={'Leader Board'} total={leaderBoard.total} handlePopup={handlePopup} />\r\n      <CardBody className=\"py-5 px-0\">\r\n        <Table responsive>\r\n          <thead>\r\n            <tr>\r\n              <th style={{ width: \"10%\" }}>\r\n                S No.\r\n              </th>\r\n              <th style={{ width: \"25%\" }}>\r\n                Name\r\n              </th>\r\n              <th style={{ width: \"15%\" }}>\r\n                No. of Followres\r\n              </th>\r\n              <th style={{ width: \"15%\" }}>\r\n                No. of Posts\r\n              </th>\r\n              <th style={{ width: \"20%\" }}>\r\n                Recent Posts\r\n              </th>\r\n              <th style={{ width: \"15%\" }}></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            \r\n\r\n            { loader ? <Suspense fallback={<></>}> <LeaderbordSkeleton/> </Suspense> : leaderBoard && Object.keys(leaderBoard.data).length\r\n              ? leaderBoard.data.map((data,index) => {\r\n                  return (\r\n                    <tr className=\"border-top\">\r\n                      <td>\r\n                        <strong>{index+1}.</strong>\r\n                      </td>\r\n                      <td> \r\n                        <AuthorInfo picture={data.image} username={data.author.name} isIcon={data.network.icon} />\r\n                      </td>\r\n                      <td>\r\n                        <strong>{data.author.follower}</strong>\r\n                      </td>\r\n                      <td>\r\n                        <strong>{data.postCount}</strong>\r\n                      </td>\r\n                      <td>\r\n                        <MultiPostMedia postsData={data.postsData} /> \r\n                      </td>\r\n                      <td>\r\n                        <ConnectButton link={data.links}/>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              : \r\n              <>\r\n              <NoData status={1} col={5}/>\r\n              </>\r\n             }\r\n          </tbody>\r\n        </Table>\r\n      </CardBody>\r\n     </Card>\r\n\r\n   {leaderBoard.total>5 ? \r\n    <SeeMoreModal size={'xl'} showHide={show} handlePopup={handlePopup} title={'Leader Bord'}>\r\n      <Suspense fallback={<></>}>\r\n         <LeaderbordPopup moreData={getwallRecordMostActiveUsersMore} {...props} />\r\n       </Suspense>  \r\n    </SeeMoreModal> : null }\r\n    </>    \r\n  );\r\n};\r\n\r\nexport default React.memo(LeaderBoard);\r\n","import React, { useState } from \"react\";\r\nimport { getFirstLetterOfString, manageSpace } from \"../../../../../utils\";\r\nimport moment from \"moment\";\r\n\r\nconst AuthorInfo = (props) => {\r\n  const [imageError, setImageError] = useState(true);\r\n\r\n  return (\r\n    <div className={`d-flex align-items-center ${!props.topperfoming ? 'w-50' : 'me-10'}`}>\r\n      <div className=\"position-relative\">\r\n        <div className=\"symbol symbol-35 symbol-light me-3 con_user_img cursor-pointer rounded-circle overflow-hidden\">\r\n          {imageError ? (\r\n            <div className=\"symbol-image\">{getFirstLetterOfString(props.username)}</div>\r\n          ) : (\r\n            <img\r\n              onError={() => setImageError(true)}\r\n              src={props.picture}\r\n              className=\"img-fluid\"\r\n              width={\"20px\"}\r\n              height={\"20px\"}\r\n            />\r\n          )}\r\n        </div>\r\n        {props.isIcon ? (\r\n          <div className=\"m_social_icon_new card-shadow position-absolute bg-white rounded-circle d-flex align-items-center justify-content-center\">\r\n            <i className={`fab ${props.isIcon} font-size-sm`}></i>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n      <div class=\"d-flex text-left flex-column conn_user_info cursor-pointer\">\r\n        <p class=\"text-dark mb-0 font-weight-boldest overflow-hidden text-nowrap text-ellipsis author_name text-capitalize w-100\">\r\n          {props.username}\r\n        </p>\r\n        <p class=\"m-0\">\r\n          <small class=\"overflow-hidden text-nowrap text-ellipsis post_count me-2 \">\r\n            {props.username ? `@${manageSpace(props.username)}` : null}\r\n          </small>\r\n\r\n         { props.date ? \r\n          <small class=\"overflow-hidden text-nowrap text-ellipsis followers_count \">\r\n            {moment(new Date(props.date * 1000)).fromNow()}\r\n          </small> : null }\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(AuthorInfo);\r\n","    const ConnectButton = (props) => {\r\n\r\n    return (\r\n        <div className=\"conn_status_wrap text-end\">\r\n        <button\r\n            onClick={() => window.open(props.link)}\r\n            type=\"button\"\r\n            className=\"btn btn-primary btn-min-w btn-sm rounded\"\r\n        >\r\n            <span className=\"position-relative\">\r\n            <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"22.213\"\r\n                height=\"18\"\r\n                viewBox=\"0 0 22.213 18\"\r\n                className=\"h-75 align-self-end w-20 me-1\"\r\n            >\r\n                <g id=\"noun-talk-2902544\" transform=\"translate(-98.007 -75.786)\">\r\n                <path\r\n                    id=\"Path_6701\"\r\n                    data-name=\"Path 6701\"\r\n                    d=\"M103.686,84.417a1.084,1.084,0,1,1-.317-.766A1.084,1.084,0,0,1,103.686,84.417Zm2.9-1.084h0a1.084,1.084,0,1,0,.766.317,1.084,1.084,0,0,0-.766-.317Zm3.979,0h0a1.084,1.084,0,1,0,.766.317,1.084,1.084,0,0,0-.766-.317Zm9.659-5.711v8.172a1.839,1.839,0,0,1-1.616,1.823l.625,2.7a.617.617,0,0,1-1,.608l-3.07-2.625v.2a1.838,1.838,0,0,1-1.836,1.836h-9.463L100,93.638a.617.617,0,0,1-1-.608l.625-2.7A1.838,1.838,0,0,1,98.007,88.5V80.331a1.838,1.838,0,0,1,1.836-1.836h3.226v-.873a1.838,1.838,0,0,1,1.836-1.836h13.478a1.838,1.838,0,0,1,1.836,1.836Zm-6.3,2.709a.6.6,0,0,0-.6-.6H99.843a.6.6,0,0,0-.6.6V88.5a.6.6,0,0,0,.6.6h.552a.617.617,0,0,1,.6.756l-.375,1.621,2.607-2.229a.618.618,0,0,1,.4-.148h9.691a.6.6,0,0,0,.6-.6Zm5.063-2.709a.6.6,0,0,0-.6-.6H104.906a.6.6,0,0,0-.6.6V78.5h9.017a1.838,1.838,0,0,1,1.836,1.836v6.35l2.448,2.093-.375-1.621a.617.617,0,0,1,.6-.756h.553a.6.6,0,0,0,.6-.6Z\"\r\n                    fill=\"#ffffff\"\r\n                ></path>\r\n                </g>\r\n            </svg> \r\n            Connect \r\n            </span>\r\n        </button>\r\n        </div>\r\n    );\r\n    };\r\n\r\n    export default ConnectButton","    import React from \"react\";\r\n    import { Splide, SplideSlide, SplideTrack } from \"@splidejs/react-splide\";\r\n    import PostMedia from \"./postMedia\";\r\n\r\n    const MultiPostMedia = (props) => {\r\n    const settings = {\r\n        type: \"slide\",\r\n        rewind: false,\r\n        speed: 1000,\r\n        loop: true,\r\n        interval: 7000,\r\n        drag: true,\r\n        perPage: 4,\r\n        gap: 5,\r\n        autoplay: false,\r\n        padding: \"0\",\r\n        pagination: false,\r\n        arrows: true,\r\n    };\r\n\r\n    return props.postsData && Object.keys(props.postsData).length > 4 ? (\r\n        <Splide className=\"recent-post m-0\" hasTrack={false} options={settings}>\r\n        <SplideTrack>\r\n            {props.postsData.map((asset, index) => {\r\n            return (\r\n                <SplideSlide key={index}>\r\n                <PostMedia\r\n                    postFile={asset.postFile}\r\n                    postId={asset.postId}\r\n                    className={\"img-fluid\"}\r\n                />\r\n                </SplideSlide>\r\n            );\r\n            })}\r\n        </SplideTrack>\r\n        </Splide>\r\n    ) : (\r\n        props.postsData.map((asset, index) => {\r\n        return (\r\n            <PostMedia\r\n            postFile={asset.postFile}\r\n            postId={asset.postId}\r\n            className={\"img-fluid\"}\r\n            />\r\n        );\r\n        })\r\n    );\r\n    };\r\n\r\n    export default React.memo(MultiPostMedia);\r\n","import React from \"react\";\r\nimport { baseUrl } from \"../../../../../utils\";\r\n\r\nconst GetData = () => {\r\n  return (\r\n    <div className=\"placeholder-image py-10 d-flex flex-column justify-content-center\">\r\n      <div className=\"mb-3 text-center\">\r\n        <img\r\n          className=\"img-fluid graph-bg\"\r\n          src={baseUrl(`dashboard/analytic/image-placeholder.svg`)}\r\n          width={\"80px\"}\r\n          height={\"80px\"}\r\n        />\r\n      </div>\r\n      <div className=\"\">\r\n        <h5 class=\"text-gray-dark text-center\">No Data Available</h5>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NoData = (props) => {\r\n\r\n  return props.status ? (\r\n    <tr>\r\n      <td colSpan={props.col}>\r\n        <GetData />\r\n      </td>\r\n    </tr>\r\n  ) : (\r\n    <GetData />\r\n  );\r\n};\r\n\r\nexport default React.memo(NoData);\r\n","import React from \"react\";\r\nimport { NoCameraImgPost } from \"../../../../../actions/api\";\r\n\r\nconst PostMedia = (props) => {\r\n  return (\r\n    <img\r\n      id={`post_${props.postId}`}\r\n      onError={(e) => (e.target.src = NoCameraImgPost)}\r\n      src={props.postFile}\r\n      className={props.className}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(PostMedia);\r\n","import { Button, CardHeader, CardTitle } from \"react-bootstrap\";\r\nimport { baseUrl } from \"../../../../../utils\";\r\n\r\nconst SectionHeading = (props) => {\r\n  return (\r\n    <CardHeader className={`${props.section==1 ? 'p-0 border-0' : props.section==2 ? 'p-5' : 'px-5 pt-5 border-0 pb-0'}`}>\r\n      <CardTitle className=\"mb-0 d-flex align-items-center justify-content-between\">\r\n        <h6 class=\"card-label font-weight-bolder m-0\">\r\n         { props.icon ? <img src={baseUrl(`dashboard/analytic/${props.icon}.svg`)}  height={\"20px\"} width={\"20px\"} /> : null }  {props.title}</h6>\r\n         {props.total > 5 ? (\r\n          <Button\r\n            variant=\"link\"\r\n            className=\"p-0\"\r\n            onClick={() => props.handlePopup(true)}\r\n          >\r\n            See More\r\n          </Button>\r\n        ) : null}\r\n      </CardTitle>\r\n    </CardHeader>\r\n  );\r\n};\r\n\r\nexport default SectionHeading;\r\n","import React from \"react\";\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ButtonToolbar,\r\n    Col,\r\n    Container,\r\n    Row\r\n} from \"react-bootstrap\";\r\n\r\n\r\nexport default class SeeMoreModal extends React.Component {\r\n    render() {\r\n        const { showHide, handlePopup, title, children, size } = this.props;\r\n        return (\r\n            <Modal\r\n                show={showHide}\r\n                onHide={()=>handlePopup(false)}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                size={size}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"p-2\">\r\n                    <div className=\"more_container\">\r\n                        {children}\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n"],"names":["LeaderbordSkeleton","React","LeaderbordPopup","LeaderBoard","props","leaderBoard","loader","show","setShow","useState","handlePopup","event","_jsxs","_Fragment","children","Card","className","_jsx","SectionHeading","title","total","CardBody","Table","responsive","style","width","Suspense","fallback","Object","keys","data","length","map","index","AuthorInfo","picture","image","username","author","name","isIcon","network","icon","follower","postCount","MultiPostMedia","postsData","ConnectButton","link","links","NoData","status","col","SeeMoreModal","size","showHide","moreData","getwallRecordMostActiveUsersMore","imageError","setImageError","topperfoming","getFirstLetterOfString","onError","src","height","class","manageSpace","date","moment","Date","fromNow","onClick","window","open","type","xmlns","viewBox","id","transform","d","fill","Splide","hasTrack","options","rewind","speed","loop","interval","drag","perPage","gap","autoplay","padding","pagination","arrows","SplideTrack","asset","SplideSlide","PostMedia","postFile","postId","GetData","baseUrl","colSpan","e","target","NoCameraImgPost","CardHeader","section","CardTitle","Button","variant","render","this","Modal","onHide","backdrop","keyboard","centered","Header","closeButton","Title","Body"],"sourceRoot":""}