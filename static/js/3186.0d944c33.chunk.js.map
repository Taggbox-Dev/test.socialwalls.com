{"version":3,"file":"static/js/3186.0d944c33.chunk.js","mappings":"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","sources":["app/Display/analytics-new/layout/skeleton/popupListSkeleton.js","app/Display/analytics-new/layout/popup/postPopup.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst List = () => {\r\n  return (\r\n    <div class=\"d-flex justify-content-between mb-4\">\r\n      <p class=\"sk_line sk_line_height_10 sk_line_30 m-0\"></p>\r\n      <p class=\"sk_line sk_line_height_10 sk_line_30 m-0\"></p>\r\n    </div>  \r\n  );\r\n};\r\n\r\nconst PopupListSkeleton = () => {\r\n  return [1, 2, 3, 4].map(() => {\r\n    return (\r\n      <div class=\"card mb-3 p-3\">\r\n        <div class=\"row \">\r\n          <div class=\"col-lg-2\">\r\n            <div class=\"sk_line sk_img_thumb rounded-0 w-100 m-0 me-5\"></div>\r\n          </div>\r\n          <div class=\"col-lg-10\">\r\n            <div className=\"d-flex flex-grow-1 w-100 mb-8 justify-content-between align-items-center\">\r\n              <div class=\"d-flex align-items-center w-100\">\r\n                <div className=\"d-flex align-items-center w-50 m_grid_author\">\r\n                  <div class=\"sk_line sk_img m-0 me-3\"></div>\r\n                  <div class=\"w-50\">\r\n                    <h3 class=\"sk_line sk_line_height_16 sk_line_90 m-0 mb-3\"></h3>\r\n                    <p class=\"sk_line sk_line_height_10 sk_line_60 m-0\"></p>\r\n                  </div>\r\n                </div>\r\n                <div class=\"sk_line sk_line_10 sk_line_height_16 m-0\"></div>\r\n              </div>\r\n              <div class=\"sk_line sk_line_10 sk_line_height_16 m-0\"></div>\r\n            </div>\r\n\r\n            <h6 class=\"sk_line sk_line_height_10 sk_line_100 m-0 mb-3\"></h6>\r\n            <p class=\"sk_line sk_line_height_10 sk_line_20 m-0 mb-5\"></p>\r\n            <div class=\"row mt-lg-0 mt-2\">\r\n              <div class=\"col-sm-6\">\r\n                <List/>\r\n                <List/>\r\n                <List/>\r\n                <List/>\r\n              </div>\r\n              <div class=\"col-sm-6\">\r\n                <List/>\r\n                <List/>\r\n                <List/>\r\n                <List/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\nexport default React.memo(PopupListSkeleton);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { dateFormat } from \"../../utils\"; \r\nimport { paginate } from '../../../../../utils/paginate';\r\nimport DataNotFound from \"../../../analytics/components/notfound\";\r\nimport Paggination from \"../common/popup/paggination\";\r\nimport PopupSearch from \"../common/popup/popupSearch\";\r\nimport ConnectButton from \"../common/connectButton\";\r\nimport PopupListSkeleton from \"../skeleton/popupListSkeleton\";\r\nimport AuthorInfo from \"../../components/content/authorInfo\";\r\n\r\nclass PostPopup extends Component {\r\n  state = {\r\n    fetchRecord: null,\r\n    isLoading: true,\r\n    total: 0,\r\n    limit: 10,\r\n    offset: 0,\r\n    paginateData: {},\r\n    currentPage: 1,\r\n    maxPage: 10,\r\n    username: null\r\n  }\r\n\r\n  componentDidMount() {\r\n     const { moreleaderBoard } = this.props;\r\n     const { limit, currentPage, maxPage } = this.state;\r\n      if (moreleaderBoard && moreleaderBoard.data) {\r\n        this.setState({ total: moreleaderBoard.total, paginateData: paginate(moreleaderBoard.total, currentPage, limit, maxPage) }, () => this.onLoadFilterData())\r\n      }\r\n   }\r\n\r\n\r\n  onLoadFilterData = (isSearch=0) => { \r\n    \r\n    const { analyticwall, moreleaderBoard, moreData } = this.props;\r\n    const { selectedWallFeed, dateFilter, selectedFeed } = analyticwall;\r\n    const { currentPage, limit, offset, username, maxPage } = this.state;\r\n\r\n    let wallData = selectedWallFeed.wall.id;\r\n    let startDate = dateFilter.startDate;\r\n    let endDate = dateFilter.endDate;\r\n\r\n    let feedIDs = [];\r\n    if (selectedFeed && selectedFeed.length > 0) {\r\n      selectedFeed.map((fItem) => {\r\n        feedIDs.push(fItem.value);\r\n      })\r\n    }\r\n\r\n    this.setState({ isLoading: true })\r\n\r\n      // type Popup module\r\n       moreData(wallData, dateFormat(startDate), dateFormat(endDate), feedIDs.join(), isSearch ? username && username.length > 0 ? moreleaderBoard.total : limit  :  offset, isSearch ? username.length > 0 ? 0 : offset : limit, 0, username)\r\n      .then((response) => {\r\n  \r\n        const { responseData } = response.data;\r\n\r\n        if(!isSearch) this.setState({ fetchRecord: responseData.postData, isLoading: false })\r\n          else\r\n        this.setState({ total: responseData.totalCount, paginateData: paginate(responseData.totalCount, currentPage, limit, maxPage), fetchRecord: responseData.postData, isLoading: false })\r\n    })\r\n      .catch((error) => {\r\n        console.error(\"LAYOUT ISSUE\", error)\r\n      });\r\n   }   \r\n\r\n\r\n  managePagging=(pageClick,currentPage=0,total=0,page=0,limit=0,maxPage=0,offset=0)=>{\r\n      if(pageClick==1)\r\n          this.setState({ currentPage: currentPage });\r\n          else if(pageClick==2)\r\n          this.setState(\r\n            { paginateData: paginate(total, page, limit, maxPage), offset: offset },\r\n            () => this.onLoadFilterData()\r\n        );\r\n         else if(pageClick==3)\r\n          this.setState(\r\n            {\r\n                currentPage: page,\r\n                paginateData: paginate(total, page, limit, maxPage),\r\n                offset: offset,\r\n            },\r\n            () => this.onLoadFilterData()\r\n            );\r\n        else if(pageClick==4)\r\n        this.setState(\r\n          {\r\n              limit: limit,\r\n              paginateData: paginate(total, currentPage, limit, maxPage),\r\n              offset: offset,\r\n          },\r\n          () => this.onLoadFilterData()\r\n        );\r\n     }\r\n\r\n\r\n  updateSearchText = (value) => {\r\n    this.setState({ username: value, currentPage: 1 }, () => this.onLoadFilterData(1))\r\n  }\r\n  \r\n  render() {\r\n    const {  analyticsStatus, isPdfDownloading, maxPage  } = this.props;\r\n    const { isLoading, fetchRecord, total, limit, paginateData, currentPage } = this.state;\r\n\r\n\r\n    return (\r\n      <div class=\"influential_contributors_custom_modal px-5\">\r\n        <PopupSearch isPdfDownloading={isPdfDownloading} analyticsStatus={analyticsStatus} updateSearchText={this.updateSearchText}/>\r\n        <div className=\"influential-data-list sw_theme \">\r\n          {\r\n            isLoading ? <PopupListSkeleton /> : (fetchRecord && fetchRecord.length > 0) ? fetchRecord.map((item, mIndex) => <div className=\"card mb-3\">\r\n            <div className=\"p-3 users_row\">\r\n              <div className=\"row align-items-start\">\r\n                  <div className=\"col-lg-2\">\r\n                    <div className=\"symbol_item position-relative\">\r\n                        <div className=\"symbol symbol-170 symbol-2by2 flex-shrink-0\">\r\n                            <Button type=\"button\" className=\"border-0 p-0 bg-transparent rounded\">\r\n                                <span className=\"symbol-label no-repeat-fit-background rounded\" style={{backgroundImage: `url(${item.image})`}}></span>\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-lg-10\">\r\n                    <div className=\"w-100\">\r\n                      <div className=\"d-flex flex-grow-1 w-100 mb-3 justify-content-between align-items-center\">\r\n                          <div className=\"d-flex justify-content-between align-items-center\">\r\n                            <div className=\"d-flex align-items-center\">\r\n                               <AuthorInfo topperfoming={1} picture={item.authorImage} username={item.authorUsername} date={item.created} /> \r\n                            </div>\r\n                            <div class=\"list_category_icon cursor-pointer d-flex\">\r\n                                <i className={`fab ${item.network.icon} font-size-h2`}></i>\r\n                            </div>\r\n                          </div>\r\n                          <ConnectButton link={item.link} />\r\n                      </div>\r\n                      <div className=\"text-dark font-weight-normal font-size-sm overflow-hidden text-ellipsis line-clamp-3\">{item.content}</div>\r\n                    </div>\r\n                    <div class=\"row post_score mt-5\">\r\n                      <div className=\"col-md-6 col-12\">\r\n                        <div class=\"d-flex align-items-center justify-content-between py-2\">\r\n                            <span class=\"text-secondary font-weight-bold font-size-md w-50\">AI Recommendation</span>\r\n                            <p class=\"text-dark font-weight-boldest mb-0 d-flex align-items-center w-50\"><span class=\"bulits bg-success d-block rounded-circle size-12 me-2\"></span>  Recommendation ({item.recommendationScore})\r\n                            </p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-6 col-12\">\r\n                        <div class=\"d-flex align-items-center justify-content-between py-2\">\r\n                            <span class=\"text-secondary font-weight-bold font-size-md w-50\">Sentiment</span>\r\n                            <div className=\"w-50\">\r\n                                <div className=\"d-inline-block post-status bg-position\">\r\n                                  <img className=\"img-fluid me-2\" src=\"https://cloud.tagbox.com/react-app/media/icons/emoji/emoji2.svg\" width={\"16px\"} height={\"16px\"}/> {item.sentiment}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-6 col-12\">\r\n                        <div class=\"d-flex align-items-center justify-content-between py-2\">\r\n                            <span class=\"text-secondary font-weight-bold font-size-md w-50\">Impressions</span>\r\n                            <p class=\"text-dark font-weight-boldest mb-0 d-flex w-50\">{item.postPerformance} \r\n                                <span class=\"score-count text-danger d-flex align-items-center ms-3\">\r\n                                <svg class=\"me-1\" width=\"18\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M12 16L6 10H18L12 16Z\"></path></svg> 02%\r\n                                </span>\r\n                            </p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-6 col-12\">\r\n                        <div class=\"d-flex align-items-center justify-content-between py-2\">\r\n                            <span class=\"text-secondary font-weight-bold font-size-md w-50\"> Feed Name</span>\r\n                                <p class=\"text-dark font-weight-boldest mb-0 d-flex w-50\">{`#${item.feedName}`}</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-6 col-12\">\r\n                        <div class=\"d-flex align-items-center justify-content-between py-2\">\r\n                            <span class=\"text-secondary font-weight-bold font-size-md w-50\">Post Clicks</span>\r\n                                <p class=\"text-dark font-weight-boldest mb-0 d-flex w-50\"> {item.postClicks} <span class=\"score-count text-success d-flex align-items-center ms-3\">\r\n                                    <svg class=\"me-1\" width=\"18\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M12 8L18 14H6L12 8Z\"></path></svg> 02%\r\n                                </span></p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n           </div>\r\n            ) : <DataNotFound />\r\n          }\r\n\r\n        </div>\r\n          <Paggination isLoading={isLoading} total={total} paginateData={paginateData} maxPage={maxPage} currentPage={currentPage} limit={limit}  managePagging={this.managePagging} />\r\n       </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {    \r\n  return {\r\n    analyticwall: state.analyticwall,\r\n    moreleaderBoard: state.analyticsRecords.leaderBoard,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PostPopup);"],"names":["List","_jsxs","class","children","_jsx","PopupListSkeleton","map","className","React","PostPopup","Component","constructor","_this","arguments","this","state","fetchRecord","isLoading","total","limit","offset","paginateData","currentPage","maxPage","username","onLoadFilterData","isSearch","length","undefined","analyticwall","moreleaderBoard","moreData","props","selectedWallFeed","dateFilter","selectedFeed","wallData","wall","id","startDate","endDate","feedIDs","fItem","push","value","setState","dateFormat","join","then","response","responseData","data","totalCount","paginate","postData","catch","error","console","managePagging","pageClick","page","updateSearchText","componentDidMount","render","analyticsStatus","isPdfDownloading","PopupSearch","item","mIndex","Button","type","style","backgroundImage","image","AuthorInfo","topperfoming","picture","authorImage","authorUsername","date","created","network","icon","ConnectButton","link","content","recommendationScore","src","width","height","sentiment","postPerformance","xmlns","viewBox","fill","d","feedName","postClicks","DataNotFound","Paggination","connect","analyticsRecords","leaderBoard"],"sourceRoot":""}