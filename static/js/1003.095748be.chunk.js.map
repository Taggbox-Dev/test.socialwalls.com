{"version":3,"file":"static/js/1003.095748be.chunk.js","mappings":"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","sources":["app/Display/analytics-new/layout/popup/leaderbordPopup.js"],"sourcesContent":["import React, { Component, Suspense } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { kFormatter, dateFormat } from \"../../utils\"; \r\nimport { paginate } from '../../../../../utils/paginate';\r\nimport DataNotFound from \"../../../analytics/components/notfound\";\r\nimport Paggination from \"../common/popup/paggination\";\r\nimport PopupSearch from \"../common/popup/popupSearch\";\r\nimport ConnectButton from \"../common/connectButton\";\r\nimport AuthorInfo from \"../../components/content/authorInfo\";\r\nimport MultiPostMedia from \"../common/multiPostMedia\";\r\nconst LeaderbordSkeleton = React.lazy(() =>\r\n  import(\"../skeleton/leaderbordSkeleton\")\r\n);\r\n\r\n\r\nclass LeaderbordPopup extends Component {\r\n  state = {\r\n    fetchRecord: null,\r\n    isLoading: true,\r\n    total: 0,\r\n    limit: 10,\r\n    offset: 0,\r\n    paginateData: {},\r\n    currentPage: 1,\r\n    maxPage: 10,\r\n    username: null\r\n  }\r\n\r\n  componentDidMount() {\r\n     const { moreleaderBoard } = this.props;\r\n     const { limit, currentPage, maxPage } = this.state;\r\n      if (moreleaderBoard && moreleaderBoard.data) {\r\n        this.setState({ total: moreleaderBoard.total, paginateData: paginate(moreleaderBoard.total, currentPage, limit, maxPage) }, () => this.onLoadFilterData())\r\n      }\r\n   }\r\n\r\n\r\n  onLoadFilterData = (isSearch=0) => { \r\n    \r\n    const { analyticwall, moreleaderBoard, moreData } = this.props;\r\n    const { selectedWallFeed, dateFilter, selectedFeed } = analyticwall;\r\n    const { currentPage, limit, offset, username, maxPage } = this.state;\r\n\r\n    let wallData = selectedWallFeed.wall.id;\r\n    let startDate = dateFilter.startDate;\r\n    let endDate = dateFilter.endDate;\r\n\r\n    let feedIDs = [];\r\n    if (selectedFeed && selectedFeed.length > 0) {\r\n      selectedFeed.map((fItem) => {\r\n        feedIDs.push(fItem.value);\r\n      })\r\n    }\r\n\r\n    this.setState({ isLoading: true })\r\n       moreData(wallData, dateFormat(startDate), dateFormat(endDate), feedIDs.join(), isSearch ? username && username.length > 0 ? moreleaderBoard.total : limit  :  offset, isSearch ? username.length > 0 ? 0 : offset : limit, 0, username)\r\n      .then((response) => {\r\n      const { responseData } = response.data;\r\n\r\n        if(!isSearch) this.setState({ fetchRecord: responseData.data, isLoading: false })\r\n          else\r\n        this.setState({ total: responseData.total, paginateData: paginate(responseData.total, currentPage, limit, maxPage), fetchRecord: responseData.data, isLoading: false })\r\n    })\r\n      .catch((error) => {\r\n        console.error(\"LAYOUT ISSUE\", error)\r\n      });\r\n   }   \r\n\r\n\r\n  managePagging=(pageClick,currentPage=0,total=0,page=0,limit=0,maxPage=0,offset=0)=>{\r\n      if(pageClick==1)\r\n          this.setState({ currentPage: currentPage });\r\n          else if(pageClick==2)\r\n          this.setState(\r\n            { paginateData: paginate(total, page, limit, maxPage), offset: offset },\r\n            () => this.onLoadFilterData()\r\n        );\r\n         else if(pageClick==3)\r\n          this.setState(\r\n            {\r\n                currentPage: page,\r\n                paginateData: paginate(total, page, limit, maxPage),\r\n                offset: offset,\r\n            },\r\n            () => this.onLoadFilterData()\r\n            );\r\n        else if(pageClick==4)\r\n        this.setState(\r\n          {\r\n              limit: limit,\r\n              paginateData: paginate(total, currentPage, limit, maxPage),\r\n              offset: offset,\r\n          },\r\n          () => this.onLoadFilterData()\r\n        );\r\n     }\r\n\r\n\r\n  updateSearchText = (value) => {\r\n    this.setState({ username: value, currentPage: 1 }, () => this.onLoadFilterData(1))\r\n  }\r\n  \r\n  render() {\r\n    const {  analyticsStatus, isPdfDownloading, maxPage  } = this.props;\r\n    const { isLoading, fetchRecord, total, limit, paginateData, currentPage } = this.state;\r\n\r\n    return (\r\n      <div class=\"influential_contributors_custom_modal px-5\">\r\n        <PopupSearch isPdfDownloading={isPdfDownloading} analyticsStatus={analyticsStatus} updateSearchText={this.updateSearchText}/>\r\n        <div className=\"influential-data-list sw_theme \">\r\n        <Table responsive>\r\n                <thead>\r\n                  <tr>\r\n                    <th style={{ width: \"10%\" }}>\r\n                      S No.\r\n                    </th>\r\n                    <th style={{ width: \"25%\" }}>\r\n                      Name\r\n                    </th>\r\n                    <th style={{ width: \"15%\" }}>\r\n                      No. of Followres\r\n                    </th>\r\n                    <th style={{ width: \"10%\" }}>\r\n                      No. of Posts\r\n                    </th>\r\n                    <th style={{ width: \"25%\" }}>\r\n                      Recent Posts\r\n                    </th>\r\n                    <th style={{ width: \"15%\" }}></th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                      isLoading ? <Suspense fallback={<></>}> <LeaderbordSkeleton/> </Suspense> : \r\n                      (fetchRecord && fetchRecord.length > 0) ? fetchRecord.map((mItem, mIndex) =>  <tr>\r\n                      <td>{mIndex+1}</td>\r\n                      <td>\r\n                        <AuthorInfo picture={mItem.image} username={mItem.author.username} isIcon={mItem.network.icon}/>\r\n                      </td>\r\n                      <td>\r\n                        <p className={`mb-0 ${parseInt(mItem.author.follower) > 0 ? '' : 'd-none'}`}><strong className=\"text-dark\">{kFormatter(mItem.author.follower)}</strong> {mItem.author.follower && parseInt(mItem.author.follower) > 1 ? `Followers` : `Follower`}</p>\r\n                      </td>\r\n                      <td>\r\n                        <p className={`mb-lg-3 mt-sm-2 mb-0 ${parseInt(mItem.postCount) > 0 ? '' : 'd-none'}`}><strong className=\"text-dark\">{kFormatter(mItem.postCount)}</strong> {mItem.postCount && parseInt(mItem.postCount) > 1 ? `Posts` : `Post`}</p>\r\n                      </td>\r\n                      <td>\r\n                        <MultiPostMedia postsData={mItem.postsData} /> \r\n                      </td>\r\n                      <td>\r\n                        <div className=\"conn_status connnected\">\r\n                          <ConnectButton link={mItem.links} />\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                      ) : <DataNotFound />\r\n                    }\r\n                 \r\n                </tbody>\r\n              </Table>\r\n\r\n        </div>\r\n          <Paggination isLoading={isLoading} total={total} paginateData={paginateData} maxPage={maxPage} currentPage={currentPage} limit={limit}  managePagging={this.managePagging} />\r\n       </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {    \r\n  return {\r\n    analyticwall: state.analyticwall,\r\n    moreleaderBoard: state.analyticsRecords.leaderBoard,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LeaderbordPopup);"],"names":["LeaderbordSkeleton","React","LeaderbordPopup","Component","constructor","_this","arguments","this","state","fetchRecord","isLoading","total","limit","offset","paginateData","currentPage","maxPage","username","onLoadFilterData","isSearch","length","undefined","analyticwall","moreleaderBoard","moreData","props","selectedWallFeed","dateFilter","selectedFeed","wallData","wall","id","startDate","endDate","feedIDs","map","fItem","push","value","setState","dateFormat","join","then","response","responseData","data","paginate","catch","error","console","managePagging","pageClick","page","updateSearchText","componentDidMount","render","analyticsStatus","isPdfDownloading","_jsxs","class","children","_jsx","PopupSearch","className","Table","responsive","style","width","Suspense","fallback","_Fragment","mItem","mIndex","AuthorInfo","picture","image","author","isIcon","network","icon","parseInt","follower","kFormatter","postCount","MultiPostMedia","postsData","ConnectButton","link","links","DataNotFound","Paggination","connect","analyticsRecords","leaderBoard"],"sourceRoot":""}