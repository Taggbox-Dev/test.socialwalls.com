{"version":3,"file":"static/js/9710.f2929158.chunk.js","mappings":"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","sources":["app/Display/analytics-new/content/Content.js"],"sourcesContent":["  import React, { PureComponent, Suspense } from \"react\";\r\n  import \"../assets/css/analytics.css\";\r\n  import { Col, Container, Row } from \"react-bootstrap\";\r\n  import { connect } from \"react-redux\";\r\n  import { getAllContentData } from \"../../../../actions/analyticsNew\";\r\n\r\n  const TopCard = React.lazy(() => import(\"../layout/common/topCard\"));\r\n  const SentimentPost = React.lazy(() =>\r\n    import(\"../components/content/sentimentPost\")\r\n  );\r\n  const SentimentAnalytics = React.lazy(() =>\r\n    import(\"../components/content/sentimentAnalytics\")\r\n  );\r\n  const LeaderBoard = React.lazy(() =>\r\n    import(\"../components/content/leaderBoard\")\r\n  );\r\n  const TopeventVoice = React.lazy(() =>\r\n    import(\"../components/content/topeventVoice\")\r\n  );\r\n  const PosttypeCount = React.lazy(() =>\r\n    import(\"../components/content/posttypeCount\")\r\n  );\r\n  const TrueSense = React.lazy(() => import(\"../components/content/trueSense\"));\r\n  const AssetsLanguage = React.lazy(() =>\r\n    import(\"../components/content/assetsLanguage\")\r\n  );\r\n  const AssetsNetwork = React.lazy(() =>\r\n    import(\"../components/content/assetsNetwork\")\r\n  );\r\n  const Tagcloud = React.lazy(() => import(\"../components/content/tagCloud\"));\r\n\r\n  const ContentAnalytics = React.lazy(() =>\r\n    import(\"../components/content/aontentAnalytics\")\r\n  );\r\n\r\n  const TopAiTags = React.lazy(() =>\r\n    import(\"../components/content/topAiTags\")\r\n  );\r\n\r\n  class Content extends PureComponent {\r\n\r\n    componentDidMount() {\r\n      const { getAllContentData, analyticsRecords } = this.props;  \r\n        if (!analyticsRecords.contentCount.length)  getAllContentData()\r\n    }\r\n\r\n    render() {\r\n      const {\r\n        contentAnalytics,\r\n        truSense,\r\n        sentimentPost,\r\n        getFlags,\r\n        leaderBoard,\r\n        topeventVoices,\r\n        wordCloud,\r\n        topaiTags,\r\n        postbyLanguage,\r\n        postbyNetwork,\r\n        postTypeCount,\r\n        sentiment_loader,\r\n        content_loader,\r\n        leader_board_loader,\r\n        top_event_loader,\r\n        word_loader,\r\n        trusense_loader,\r\n        top_ai_loader,\r\n        post_by_language_loader,\r\n        post_type_count_loader,\r\n        posts_by_network_loader,\r\n        get_wall_sentiment_live_trend_data,\r\n        get_wall_sentiment_live_trend_loader\r\n      } = this.props.analyticsRecords;\r\n\r\n\r\n      return (\r\n        <>\r\n              <Row>\r\n                <Col lg={8}>\r\n                  <Suspense fallback={<></>}>\r\n                  <div className=\"row\">\r\n                    <TopCard col={3} res={4} loader={content_loader} data={contentAnalytics} /> \r\n                  </div>  \r\n                  </Suspense>\r\n\r\n                  <Suspense fallback={<></>}>\r\n                    <ContentAnalytics key={content_loader} loader={content_loader} contentAnalytics={contentAnalytics} />\r\n                  </Suspense>\r\n\r\n                  <Suspense fallback={<></>}>\r\n                    <SentimentAnalytics  loader={get_wall_sentiment_live_trend_loader} live_trend={get_wall_sentiment_live_trend_data} \r\n                     sentimentPost={sentimentPost}  />\r\n                  </Suspense>\r\n\r\n                  <Suspense fallback={<></>}>\r\n                    <SentimentPost loader={sentiment_loader} {...sentimentPost} />\r\n                  </Suspense>\r\n\r\n                  <Suspense fallback={<></>}>\r\n                    <LeaderBoard loader={leader_board_loader} leaderBoard={leaderBoard} />\r\n                  </Suspense>\r\n\r\n                  <Suspense fallback={<></>}>\r\n                    <TopeventVoice  top_event_loader={top_event_loader} topeventVoices={topeventVoices} />\r\n                  </Suspense>\r\n                </Col>\r\n\r\n                <Col lg={4}>\r\n                  <Suspense fallback={<></>}>\r\n                    <TrueSense loader={trusense_loader} truSense={truSense} />\r\n                  </Suspense>\r\n\r\n                  <Suspense fallback={<></>}>\r\n                    <Tagcloud key={word_loader} word_loader={word_loader} wordCloud={wordCloud} />\r\n                  </Suspense>\r\n\r\n                  <Suspense fallback={<></>}>\r\n                    <TopAiTags top_ai_loader={top_ai_loader}  topaiTags={topaiTags} />\r\n                  </Suspense>\r\n\r\n                  <Suspense fallback={<></>}>\r\n                    <PosttypeCount key={post_type_count_loader} loader={post_type_count_loader}  postTypeCount={postTypeCount} />\r\n                  </Suspense>\r\n\r\n                  <Suspense fallback={<></>}>\r\n                    <AssetsLanguage loader={post_by_language_loader} getFlags={getFlags} detail={this.props.detail} postbyLanguage={postbyLanguage} />\r\n                  </Suspense>\r\n\r\n                  <Suspense fallback={<></>}>\r\n                    <AssetsNetwork loader={posts_by_network_loader}  postbyNetwork={postbyNetwork} />\r\n                  </Suspense>\r\n                </Col>\r\n              </Row>\r\n         </>\r\n      );\r\n    }\r\n  }\r\n\r\n  const contentStateToProps = (state) => {   \r\n    return {\r\n      analyticsRecords: state.analyticsRecords,\r\n      detail: state.appsMore.detail,\r\n    };\r\n  };\r\n\r\n  const contentDispatchToProps = (dispatch) => {\r\n    return {\r\n      getAllContentData: () => dispatch(getAllContentData()),\r\n    };\r\n  };\r\n\r\n  export default connect(contentStateToProps, contentDispatchToProps)(Content);\r\n"],"names":["TopCard","React","SentimentPost","SentimentAnalytics","LeaderBoard","TopeventVoice","PosttypeCount","TrueSense","AssetsLanguage","AssetsNetwork","Tagcloud","ContentAnalytics","TopAiTags","Content","PureComponent","componentDidMount","getAllContentData","analyticsRecords","this","props","contentCount","length","render","contentAnalytics","truSense","sentimentPost","getFlags","leaderBoard","topeventVoices","wordCloud","topaiTags","postbyLanguage","postbyNetwork","postTypeCount","sentiment_loader","content_loader","leader_board_loader","top_event_loader","word_loader","trusense_loader","top_ai_loader","post_by_language_loader","post_type_count_loader","posts_by_network_loader","get_wall_sentiment_live_trend_data","get_wall_sentiment_live_trend_loader","_jsx","_Fragment","children","_jsxs","Row","Col","lg","Suspense","fallback","className","col","res","loader","data","live_trend","detail","connect","state","appsMore","dispatch"],"sourceRoot":""}