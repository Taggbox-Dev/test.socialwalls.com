{"version":3,"file":"static/js/5184.10899820.chunk.js","mappings":"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","sources":["app/Display/analytics-new/layout/common/AssetsTypeAreaChart.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport Chart  from \"react-apexcharts\";\r\n\r\n  const graphOption = {\r\n    series: [{\r\n        name: \"Total Post\",\r\n        data: Array.from({ length: 30 }, (_, i) => 0)\r\n    },\r\n    ],\r\n    colors: ['#F8B861'],\r\n    categoriesCount: 10,\r\n    id: 'analyticsOverview',\r\n    date: true\r\n  }\r\n\r\n\r\nconst ChartDataBasedOnUrl = () => {\r\n  \r\n    const dateRange = [];\r\n    const assets = [];\r\n    const collections = [];\r\n    const network = [];\r\n\r\n    const chardData =\r\n        {\r\n          \"screen1\": {\r\n              \"assets\": 599,\r\n              \"collections\": 0,\r\n              \"network\": 0\r\n          },\r\n          \"screen12\": {\r\n              \"assets\": 0,\r\n              \"collections\": 432,\r\n              \"network\": 23\r\n          },\r\n          \"screen13\": {\r\n              \"assets\": 0,\r\n              \"collections\": 0,\r\n              \"network\": 984\r\n          },\r\n         \r\n      }\r\n\r\n     \r\n    const getMonthName = (monthNumber) => {\r\n      const date = new Date();\r\n      date.setMonth(monthNumber - 1);\r\n      return date.toLocaleString([], { month: 'short' });\r\n    }\r\n    \r\n\r\n    Object.keys(chardData).map((item) => {\r\n      dateRange.push(getMonthName(Number(item.split('-')[1]).toString()) + '-' + new Date(item).getFullYear().toString().slice(-2));\r\n      assets.push(chardData[item].assets)\r\n      collections.push(chardData[item].collections)\r\n      network.push(chardData[item].network)\r\n    });\r\n\r\n\r\n    return {\r\n      options: dateRange,\r\n      series: [{\r\n        data: collections\r\n      }\r\n      ]\r\n    }\r\n}\r\n\r\nclass AssetsTypeAreaChart extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      series: graphOption.series,\r\n      options: {\r\n        colors: props.type=='bar' ? ['#546FED'] : ['#F8B861'],\r\n        chart: {\r\n          id: graphOption.id,\r\n          height: 350,\r\n          type: props.type,\r\n          animations: {\r\n            enabled: true,\r\n            easing: 'linear',\r\n            dynamicAnimation: {\r\n              speed: 1000\r\n            }\r\n          },\r\n          toolbar: {\r\n            show: false\r\n          },\r\n          zoom: {\r\n            enabled: false\r\n          }\r\n        },\r\n        plotOptions: {\r\n          bar: props.type=='bar' ? {\r\n            borderRadius: 4,\r\n            borderRadiusApplication: 'end',\r\n            horizontal: true,\r\n          } : {}\r\n        },\r\n        dataLabels: {\r\n          enabled: false,\r\n        },\r\n        stroke: {\r\n          width: [3, 3, 3],\r\n          curve: 'smooth'\r\n        },\r\n        xaxis: {\r\n          categories: Array.from({ length: graphOption.categoriesCount }, (_, i) => 'Loading..')\r\n        },\r\n        yaxis: {\r\n          show: true,\r\n          labels: {\r\n            formatter: (value) => { return String(window.location.href).includes(\"widget\") ? value.toFixed() : value },\r\n          }\r\n        },\r\n        legend: {\r\n          show: true,\r\n          position: 'top',\r\n          itemMargin: {\r\n            horizontal: 20,\r\n            vertical: 0\r\n          },\r\n        },\r\n        tooltip: {\r\n          enabled: true,\r\n          shared: false,\r\n          intersect: false,\r\n          y: {\r\n            formatter: function(value, series) {\r\n              return `${series.series[series.seriesIndex][series.dataPointIndex]}`\r\n            }              ,\r\n          }\r\n        },\r\n        grid: {\r\n          show: true,\r\n          borderColor: '#e1e3ea',\r\n          position: 'back',\r\n          xaxis: {\r\n            lines: {\r\n              show: true\r\n            }\r\n          },\r\n          yaxis: {\r\n            lines: {\r\n              show: false\r\n            }\r\n          }\r\n        },\r\n        responsive: [{\r\n          // breakpoint: 991,\r\n          options: {\r\n            chart: {\r\n              height: 300,\r\n            }\r\n          },\r\n          // breakpoint: 767,\r\n          options: {\r\n            chart: {\r\n              height: 280,\r\n            }\r\n          },\r\n        }]\r\n      },\r\n      selectedCollection: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.onLoadAnalyticGraph();\r\n  }\r\n\r\n  onLoadAnalyticGraph = (data) => {\r\n      const { series, options } = ChartDataBasedOnUrl();\r\n      this.setState((prev) => ({\r\n        ...prev, series: series,\r\n        options: {\r\n          xaxis: {\r\n            categories: options\r\n          },\r\n        },\r\n      }))\r\n  }\r\n\r\n \r\n  render() {\r\n\r\n    const { options, series } = this.state\r\n\r\n    console.log(this.props.type,'sdfsdfsdfsdf')\r\n\r\n      return (\r\n               <Chart  options={options} series={series} type={this.props.type} height={400} />\r\n       )\r\n    }   \r\n}\r\n\r\nexport default AssetsTypeAreaChart;\r\n"],"names":["graphOption","series","name","data","Array","from","length","_","i","colors","categoriesCount","id","date","ChartDataBasedOnUrl","dateRange","assets","collections","network","chardData","Object","keys","map","item","push","monthNumber","Date","setMonth","toLocaleString","month","getMonthName","Number","split","toString","getFullYear","slice","options","AssetsTypeAreaChart","Component","constructor","props","super","onLoadAnalyticGraph","this","setState","prev","xaxis","categories","state","type","chart","height","animations","enabled","easing","dynamicAnimation","speed","toolbar","show","zoom","plotOptions","bar","borderRadius","borderRadiusApplication","horizontal","dataLabels","stroke","width","curve","yaxis","labels","formatter","value","String","window","location","href","includes","toFixed","legend","position","itemMargin","vertical","tooltip","shared","intersect","y","seriesIndex","dataPointIndex","grid","borderColor","lines","responsive","selectedCollection","componentDidMount","render","console","log","_jsx","Chart"],"sourceRoot":""}