{"version":3,"file":"static/js/5010.7250e35d.chunk.js","mappings":"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","sources":["app/Display/analytics-new/layout/common/sectionHeading.js","app/Display/dashboard-new/components/skeleton/websiteSkeleton.js","app/Display/dashboard-new/components/website.js"],"sourcesContent":["import { Button, CardHeader, CardTitle } from \"react-bootstrap\";\nimport { baseUrl } from \"../../../../../utils\";\n\nconst SectionHeading = (props) => {\n\n  const { title, section, cardTitleCss, icon, iconFull, selectedWallFeed, moreData, total, handlePopup, headingMargin, isDashboard } = props\n\n  // && selectedWallFeed && Object.keys(selectedWallFeed).length\n\n  return (\n    <CardHeader className={`${section==1 ? 'p-0 border-0' : section==2 ? 'p-5' : section==3 ? 'p-0 pb-3' : 'px-5 pt-5 border-0 pb-0'}`}>\n      <CardTitle className={cardTitleCss ? cardTitleCss : `mb-0 d-flex align-items-center justify-content-between ${isDashboard ? isDashboard : \"\"}`}>\n        <h6 class={`card-label font-weight-bolder ${!headingMargin ? 'm-0' : ''} `}>\n         { icon ? <img src={baseUrl(`dashboard/analytic/${icon}.svg`)}  height={\"20px\"} width={\"20px\"} /> : null }\n         { iconFull ? <img src={iconFull}  height={\"20px\"} width={\"20px\"} />  : null }   {title}</h6>\n         { (total > 5) || moreData ? (\n          <Button\n            variant=\"link\"\n            className=\"p-0\"\n            onClick={() => handlePopup(true)}\n          >\n            See More\n          </Button>\n        ) : null\n        }\n      </CardTitle>\n    </CardHeader>\n  );\n};\n\nexport default SectionHeading;\n","import React from \"react\";\n\nconst List = () => {\n  return (\n    <td>\n     <div class=\"sk_line sk_line_height_12 sk_line_30\"></div>\n    </td>\n  );\n};\n\nconst WebsiteSkeleton = () => {\n  return [1, 2, 3, 4].map(() => {\n    return (\n        <tr>\n        <td>\n            <div class=\"d-flex align-items-center flex-grow-1\">\n                <div class=\"symbol symbol-45 symbol-light me-2 con_user_img\">\n                    <span class=\"sk_img rounded\"></span>\n                </div>\n                <div class=\"d-flex text-left flex-column conn_user_info\">\n                    <div class=\"sk_line sk_line_height_12 sk_line_50\"></div>\n                </div>\n            </div>\n        </td>\n        <List/>\n        <List/>\n        </tr>\n    );\n  });\n};\n\nexport default React.memo(WebsiteSkeleton);\n","import React from \"react\";\nimport { Card, Table } from \"react-bootstrap\";\nimport SectionHeading from \"../../analytics-new/layout/common/sectionHeading\";\nimport WebsiteSkeleton from \"./skeleton/websiteSkeleton\";\nimport { MediaBaseUrl } from \"../../../../actions/api\";\nimport { getthemeLayout } from \"../../../../utils\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { shallowEqual, useDispatch } from \"react-redux\";\nimport { getWidgetWallData } from \"../../../../actions/wallDataAction\";\nimport { getWallFeeds } from \"../../../../actions/display/analytics\";\nimport { useSelector } from \"react-redux\";\n\nconst Website = (props) => {\n  const { visitor, loader } = props;\n  const { userData, dashboarddata } = useSelector(state => ({ dashboarddata: state.dashboardDisplayReducer.dashboarddata, userData : state.authenticated.userData }),shallowEqual)\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const Tlist = (e) => {\n    return (\n      <td>\n        <p className=\"m-0 text-start\">{e.param}</p>\n      </td>\n    );\n  };\n\n  const displayWindowOpen = () => {\n      const { user } = userData;\n      const wallId = dashboarddata.allWalllist[0].id \n      dispatch(getWidgetWallData(user.ownerId, wallId));\n      dispatch(getWallFeeds(user.ownerId));\n      navigate(`/wall/preview/${wallId}?widget`);\n  };\n\n  return <div className=\"col-md-6 mb-5\">\n      <div className=\"widget-post-section h-100\">\n        <Card className=\"p-0 card-custom card-stretch\">\n          <SectionHeading\n            title={\"Widgets\"}\n            total={0}\n            section={2}\n            isDashboard={\"card-title h5 w-100\"}\n          />\n          <Card.Body className=\"p-5\">\n          \n            <Table responsive>\n              <thead>\n                <tr>\n                  <th style={{ width: \"50%\" }}>Widget Name</th>\n                  <th style={{ width: \"25%\" }}>Visitors</th>\n                  <th style={{ width: \"25%\" }}>Clicks</th>\n                </tr>\n              </thead>\n              { (visitor && Object.keys(visitor).length) || loader ?\n              <tbody>\n                {loader ? (\n                  <WebsiteSkeleton />\n                ) : (\n                  visitor.map((e) => {\n                    return (\n                      <tr>\n                        <td>\n                          <div className=\"\">\n                            <div class=\"d-flex align-items-center w-50\">\n                              <div class=\"position-relative\">\n                                <div class=\"symbol symbol-50 symbol-light me-3 con_user_img cursor-pointer overflow-hidden\">\n                                  <img\n                                    src={`${MediaBaseUrl}icons/svg-icons/${getthemeLayout(e.signageTheme)}.svg`}\n                                  />\n                                </div>\n                              </div>\n                              <div class=\"d-flex text-left flex-column conn_user_info cursor-pointer\">\n                                <p class=\"text-dark mb-0 font-weight-boldest overflow-hidden text-nowrap text-ellipsis author_name text-capitalize\">\n                                  {e.name}\n                                </p>\n                              </div>\n                            </div>\n                          </div>\n                        </td>\n                        <Tlist param={e.totalVisitors} />\n                        <Tlist param={e.totalShowMoreCount} />\n                      </tr>\n                    );\n                  })\n                )}\n              </tbody> : \n              <tbody>\n                <tr>\n                  <td colspan=\"3\">\n                    <div className=\"not_connected_err not_connected_err_new flex-center overlay-layer\" style={{backgroundImage: `url(${MediaBaseUrl}error/not-data-1.png)`}}>\n                    <div className=\"not_conne_overlay position-absolute h-100 d-flex flex-column align-items-center justify-content-center w-100\">\n                      <p className=\"text-dark w-70 text-center font-size-h6\">You Can Also Turn Your Website Into A Social Wall & Grab the Attention of your Site Visitors.</p>\n                        { dashboarddata && dashboarddata.allWalllist && Object.keys(dashboarddata.allWalllist).length ?\n                          <button type=\"button\" onClick={()=>displayWindowOpen()} className=\"btn btn-primary rounded\">Embed Now</button> : null }\n                      </div>\n                    </div>\n                  </td>\n                </tr>\n              </tbody>\n              }\n            </Table> \n           \n          </Card.Body>\n        </Card>\n      </div>\n    </div>\n};\n\nexport default React.memo(Website);\n"],"names":["props","title","section","cardTitleCss","icon","iconFull","selectedWallFeed","moreData","total","handlePopup","headingMargin","isDashboard","_jsx","CardHeader","className","children","_jsxs","CardTitle","class","src","baseUrl","height","width","Button","variant","onClick","List","WebsiteSkeleton","map","React","Website","visitor","loader","userData","dashboarddata","useSelector","state","dashboardDisplayReducer","authenticated","shallowEqual","dispatch","useDispatch","navigate","useNavigate","Tlist","e","param","Card","SectionHeading","Body","Table","responsive","style","Object","keys","length","MediaBaseUrl","getthemeLayout","signageTheme","name","totalVisitors","totalShowMoreCount","colspan","backgroundImage","allWalllist","type","displayWindowOpen","user","wallId","id","getWidgetWallData","ownerId","getWallFeeds"],"sourceRoot":""}