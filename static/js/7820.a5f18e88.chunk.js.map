{"version":3,"file":"static/js/7820.a5f18e88.chunk.js","mappings":"6LAKA,MAAMA,EAAcC,IAClB,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,GAoB7C,OACEH,QAAgBI,GAAPJ,GACTK,EAAAA,EAAAA,MAAA,OAAKC,QAASA,IApBCC,EAACC,EAAGC,EAASC,KAE3B,IAAI,CAAC,GAAGC,SAASH,IAAOE,GAAQD,EAAS,CAEvC,IAAIG,EAAe,GAGfA,EADAZ,EAAMU,KAAKC,SAAS,UACL,cAAaE,EAAAA,EAAAA,IAAYJ,KAChCT,EAAMU,KAAKC,SAAS,YACZ,kCAAiCE,EAAAA,EAAAA,IAAYJ,KAG/C,KAAII,EAAAA,EAAAA,IAAYJ,KAEjCK,OAAOC,KAAK,WAAW,IAAIC,IAAIhB,EAAMU,MAAMO,WAAWL,IACzD,GAKmBL,CAAWP,EAAMkB,UAAUlB,EAAMmB,eAAenB,EAAMU,MAAQU,UAAW,8BAA8BpB,EAAMqB,aAAwB,QAAT,QAAmBC,SAAA,EAEjKjB,EAAAA,EAAAA,MAAA,OAAMe,UAAU,oBAAmBE,SAAA,EACjCC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,gGAA+FE,SAC3GrB,GACCsB,EAAAA,EAAAA,KAAA,OAAKH,UAAU,eAAcE,UAAEE,EAAAA,EAAAA,IAAuBxB,EAAMyB,eAE5DF,EAAAA,EAAAA,KAAA,OACEG,QAASA,IAAMxB,GAAc,GAC7ByB,IAAK3B,EAAM4B,QACXR,UAAU,yBACVS,MAAO,OACPC,OAAQ,WAMb9B,EAAM+B,SAAW/B,EAAMgC,OACtBT,EAAAA,EAAAA,KAAA,OAAKH,UAAU,2HAA0HE,UACrIC,EAAAA,EAAAA,KAACU,EAAAA,EAAW,CAACC,KAAMlC,EAAM+B,WAE3B,SAEN1B,EAAAA,EAAAA,MAAA,OAAK8B,MAAM,6DAA4Db,SAAA,EACrEC,EAAAA,EAAAA,KAAA,KAAGY,MAAM,2GAA0Gb,SAChHtB,EAAMyB,cAETpB,EAAAA,EAAAA,MAAA,KAAG8B,MAAM,8BAA6Bb,SAAA,EACpCC,EAAAA,EAAAA,KAAA,SAAOY,MAAM,6DAA4Db,SACtEtB,EAAMmB,eAAiB,IAAInB,EAAMmB,iBAAmBnB,EAAMyB,aAE5DzB,EAAMoC,MACR/B,EAAAA,EAAAA,MAAAgC,EAAAA,SAAA,CAAAf,SAAA,EAAEC,EAAAA,EAAAA,KAAA,SAAOY,MAAM,6DAA4Db,SAAC,OAC5EC,EAAAA,EAAAA,KAAA,SAAOY,MAAM,6CAA4Cb,SACtDgB,IAAO,IAAIC,KAAkB,IAAbvC,EAAMoC,OAAcI,eACzB,cAGV,IAAI,EAIjB,EAAeC,EAAAA,KAAW1C,E,6DCrE1B,MAAMkC,EAAejC,GAEhB,CAAC,cAAcW,SAASX,EAAMkC,OAA4I7B,EAAAA,EAAAA,MAAA,OAAKG,GAAG,UAAUkC,MAAM,6BAA6Bb,MAAM,KAAKC,OAAO,KAAKa,QAAQ,oBAAmBrB,SAAA,EAACC,EAAAA,EAAAA,KAAA,QAAMf,GAAG,SAAS,YAAU,SAASoC,EAAE,wBAAwBC,KAAK,SAAc,KAACtB,EAAAA,EAAAA,KAAA,QAAMf,GAAG,SAAS,YAAU,SAASoC,EAAE,iNAAiNE,UAAU,yBAAyBD,KAAK,gBAA/lBtB,EAAAA,EAAAA,KAAA,KAAGH,UAAW,OAAOpB,EAAMkC,QAAQlC,EAAM+C,YAAc/C,EAAM+C,YAAc,MAAM/C,EAAMgD,KAAOhD,EAAMgD,KAAO,mBAItJ,EAAeP,EAAAA,KAAWR,E,gICP1B,MAAMgB,EAAuBA,KAEzB1B,EAAAA,EAAAA,KAAA,OACEY,MAAM,qBACN,cAAY,OACZ,yBAAuB,OAAMb,SAE5B,CAAC,EAAG,EAAG,EAAG,GAAG4B,KAAI,KAEd7C,EAAAA,EAAAA,MAAA,OAAK8B,MAAM,oDAAmDb,SAAA,EAC5DjB,EAAAA,EAAAA,MAAA,OAAK8B,MAAM,wCAAuCb,SAAA,EAChDC,EAAAA,EAAAA,KAAA,OAAKY,MAAM,kDAAiDb,UAC1DC,EAAAA,EAAAA,KAAA,QAAMY,MAAM,cAEd9B,EAAAA,EAAAA,MAAA,OAAK8B,MAAM,mDAAkDb,SAAA,EAC3DC,EAAAA,EAAAA,KAAA,OAAKY,MAAM,oCACXZ,EAAAA,EAAAA,KAAA,OAAKY,MAAM,qDAGf9B,EAAAA,EAAAA,MAAA,OAAK8B,MAAM,yCAAwCb,SAAA,EACjDC,EAAAA,EAAAA,KAAA,OAAKY,MAAM,+BACXZ,EAAAA,EAAAA,KAAA,OAAKY,MAAM,mDASzB,EAAeM,EAAAA,KAAWQ,GCvBhBE,EAAgBnD,IAElB,MAAM,kBAAEoD,EAAiB,OAAEC,GAAWrD,EAEhCsD,GAAWC,EAAAA,EAAAA,MAWrB,OAFIC,QAAQC,IAAIzD,EAAM,mBAIrBoD,GAAqBM,OAAOC,KAAKP,GAAmBQ,QAAUP,GAC3D9B,EAAAA,EAAAA,KAAA,OAAKH,UAAU,gBAAeE,UAC9BC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,mCAAkCE,UAC7CjB,EAAAA,EAAAA,MAACwD,EAAAA,EAAI,CAACzC,UAAU,+BAA8BE,SAAA,EAE9CC,EAAAA,EAAAA,KAACsC,EAAAA,EAAKC,OAAM,CAAC1C,UAAU,MAAKE,UACxBjB,EAAAA,EAAAA,MAAA,OAAKe,UAAU,4EAA2EE,SAAA,EACtFC,EAAAA,EAAAA,KAAA,MAAIY,MAAM,qCAAoCb,SAAC,oBAC5C+B,EAGM,MAFT9B,EAAAA,EAAAA,KAAA,OAAKH,UAAU,GAAEE,UACbC,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACC,GAAI,kCAAmC5C,UAAU,gCAA+BE,SAAC,oBAKhG+B,GAAS9B,EAAAA,EAAAA,KAAC0B,EAAoB,IAAKG,EAAkBF,KAAI,CAACe,EAAEC,KAE3D,MAAMC,EAAUF,EAAEG,kBAElB,OAAO7C,EAAAA,EAAAA,KAACsC,EAAAA,EAAKQ,KAAI,CAACjD,UAAU,MAAKE,UAC5BC,EAAAA,EAAAA,KAAA,KAAGY,MAAM,8CAA8CmC,KAAK,IAAGhD,UAC5DjB,EAAAA,EAAAA,MAAA,OAAK8B,MAAM,qBAAoBb,SAAA,CAAC,IAAIkC,QAAQC,IAAIU,EAAQ,2BACpD9D,EAAAA,EAAAA,MAAA,OAAK8B,MAAM,qDAAoDb,SAAA,EAC3DC,EAAAA,EAAAA,KAACxB,EAAAA,EAAU,CACPgC,OAAQkC,EAAEM,QAAQrC,KAClBN,QAASuC,EAAQK,eACjBrD,eAAgB8C,EAAEQ,YAClBhD,WAAY0C,EAAQM,YACpB/D,KAAM,GACNQ,UAAWiD,EAAQjD,aAcvBK,EAAAA,EAAAA,KAAA,OAAKH,UAAU,GAAEE,UACbC,EAAAA,EAAAA,KAAA,MAAAD,SACkB,GAAf6C,EAAQO,KACCrE,EAAAA,EAAAA,MAAA,OAAKe,UAAU,oCAAmCE,SAAA,EAC9CjB,EAAAA,EAAAA,MAAA,OAAKe,UAAU,mBAAkBE,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,QAAMH,UAAU,iBAAgBE,UAC5BC,EAAAA,EAAAA,KAAA,OAAKM,MAAM,KAAKC,OAAO,KAAKa,QAAQ,YAAWrB,UAC3CjB,EAAAA,EAAAA,MAAA,KAAGsE,OAAO,OAAO,eAAa,IAAI9B,KAAK,OAAO,YAAU,UAASvB,SAAA,EAC7DC,EAAAA,EAAAA,KAAA,WAASqD,OAAO,yBAChBrD,EAAAA,EAAAA,KAAA,QAAMsB,KAAK,UAAUD,EAAE,ocAAoc,YAAU,UAAUE,UAAU,mGAIrgBvB,EAAAA,EAAAA,KAAA,QAAMH,UAAU,gCAA+BE,SAAC,kBAEpDjB,EAAAA,EAAAA,MAAA,SAAAiB,SAAA,CAAQ2C,EAAEM,QAAQM,KAAK,kBAEzBxE,EAAAA,EAAAA,MAAA,OAAKe,UAAU,uCAAsCE,SAAA,EACnDC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,mBAAkBE,UAC/B,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,IAAIX,SAASsD,EAAEM,QAAQ/D,MAAOe,EAAAA,EAAAA,KAAA,KAAGjB,QAASA,KAAIwE,OAzEnFC,EAyEkGd,EAAEM,aArExHjB,GAAS0B,EAAAA,EAAAA,IAAuBD,EAAK,qBAJlBD,IAACC,CAyEkH,EAAC3D,UAAU,iEAAiE,cAAY,YAAY,WAAU,GAAGE,SAAC,iBAEhNjB,EAAAA,EAAAA,MAAA,SAAAiB,SAAA,CAAQ2C,EAAEM,QAAQM,KAAK,8BAU/C,WAIf,IAAI,EAIhB,EAAepC,EAAAA,KAAWU,E","sources":["app/Display/analytics-new/content/components/authorInfo.js","app/Display/analytics-new/layout/common/networkIcon.js","app/Display/dashboard-new/components/skeleton/socialactionSkeleton.js","app/Display/dashboard-new/components/socialAction.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { getFirstLetterOfString, manageSpace } from \"../../../../../utils\";\r\nimport moment from \"moment\";\r\nimport NetworkIcon from \"../../layout/common/networkIcon\";\r\n\r\nconst AuthorInfo = (props) => {\r\n  const [imageError, setImageError] = useState(false);\r\n\r\n  const redirectTo=(id,username,link)=> {\r\n\r\n     if(![7].includes(id) && link && username){\r\n\r\n       let redirectLink = ``\r\n\r\n        if(props.link.includes('tiktok')){\r\n           redirectLink = `/search?q=${manageSpace(username)}`\r\n          }else if(props.link.includes('linkedin')){\r\n            redirectLink = `/search/results/all/?keywords=${manageSpace(username)}`\r\n           }\r\n          else{\r\n          redirectLink = `/${manageSpace(username)}`\r\n        }\r\n        window.open(`https://${new URL(props.link).hostname}${redirectLink}`)\r\n     }\r\n  }\r\n \r\n  return (\r\n    props && props!=undefined  ?  \r\n    <div onClick={() => redirectTo(props.networkId,props.authorUsername,props.link) } className={`d-flex align-items-center ${!props.topperfoming ? 'w-50' : 'me-10'}`}>\r\n   \r\n      <div  className=\"position-relative\">\r\n        <div className=\"symbol symbol-35 symbol-light me-3 con_user_img cursor-pointer rounded-circle overflow-hidden\">\r\n          {imageError ? (\r\n            <div className=\"symbol-image\">{getFirstLetterOfString(props.authorName)}</div>\r\n          ) : (\r\n            <img\r\n              onError={() => setImageError(true)}\r\n              src={props.picture}\r\n              className=\"img-fluid symbol-image\"\r\n              width={\"20px\"}\r\n              height={\"20px\"}\r\n            />\r\n          )}\r\n        </div>\r\n\r\n     \r\n        {props.isIcon && !props.nIcon ? (\r\n          <div className=\"m_social_icon_new card-shadow position-absolute bg-white rounded-circle d-flex align-items-center justify-content-center\">\r\n              <NetworkIcon icon={props.isIcon}/>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n      <div class=\"d-flex text-left flex-column conn_user_info cursor-pointer\">\r\n        <p class=\"text-dark mb-0 font-weight-boldest overflow-hidden text-nowrap text-ellipsis author_name text-capitalize\">\r\n          {props.authorName}\r\n        </p>\r\n        <p class=\"m-0 d-flex conn_auther_info\">\r\n          <small class=\"overflow-hidden text-nowrap text-ellipsis post_count me-2 \">\r\n            {props.authorUsername ? `@${props.authorUsername}` : props.authorName}\r\n          </small>\r\n         { props.date ? \r\n         <><small class=\"overflow-hidden text-nowrap text-ellipsis post_count me-2 \">.</small>\r\n         <small class=\"overflow-hidden text-nowrap text-ellipsis \">\r\n           {moment(new Date(props.date * 1000)).fromNow()}\r\n         </small></> : null }\r\n        </p>\r\n      </div>\r\n    </div> : null\r\n  );\r\n};\r\n\r\nexport default React.memo(AuthorInfo);\r\n","import React from \"react\";\r\n\r\nconst NetworkIcon = (props) => {\r\n  return (\r\n    ![\"fa-twitter\"].includes(props.icon) ? <i className={`fab ${props.icon} ${props.isDashboard ? props.isDashboard : ''} ${props.size ? props.size : 'font-size-sm'}`}></i> : <svg id=\"twitter\" xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" viewBox=\"0 0 44.518 44.518\"><path id=\"Path_5\" data-name=\"Path 5\" d=\"M0,0H44.518V44.518H0Z\" fill=\"none\"></path> <path id=\"Path_7\" data-name=\"Path 7\" d=\"M19.036,13.554,30.942,0H28.121L17.778,11.766,9.523,0H0L12.486,17.794,0,32.006H2.821L13.737,19.578l8.72,12.429H31.98Zm-3.865,4.4L13.9,16.177,3.838,2.083H8.172L16.3,13.462l1.262,1.773L28.12,30.025H23.786Zm0,0\" transform=\"translate(6.313 6.281)\" fill=\"#0f1419\"></path></svg>\r\n  );\r\n};\r\n\r\nexport default React.memo(NetworkIcon);\r\n","import React from \"react\";\r\nconst SocialactionSkeleton = () => {\r\n  return (\r\n    <div\r\n      class=\"scroll scroll-pull\"\r\n      data-scroll=\"true\"\r\n      data-wheel-propagation=\"true\"\r\n    >\r\n      {[1, 2, 3, 4].map(() => {\r\n        return (\r\n          <div class=\"d-flex align-items-center p-2 border rounded mb-3\">\r\n            <div class=\"d-flex align-items-center flex-grow-1\">\r\n              <div class=\"symbol symbol-45 symbol-light me-2 con_user_img\">\r\n                <span class=\"sk_img\"></span>\r\n              </div>\r\n              <div class=\"d-flex text-left flex-column conn_user_info w-25\">\r\n                <div class=\"sk_line sk_line_height_12 mb-2\"></div>\r\n                <div class=\"sk_line sk_line_50 sk_line_height_10 mt-2\"></div>\r\n              </div>\r\n            </div>\r\n            <div class=\"conn_status connnected text-right w-25\">\r\n              <div class=\"sk_line sk_line_height_12\"></div>\r\n              <div class=\"sk_line sk_line_80 sk_line_height_10\"></div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(SocialactionSkeleton);\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport AuthorInfo from \"../../analytics-new/content/components/authorInfo\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { showAddAccountAlertNew } from \"../../../../utils\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SocialactionSkeleton from \"./skeleton/socialactionSkeleton\";\r\n\r\n    const SocialAction = (props) => {\r\n\r\n        const { connectedAccounts, loader } = props\r\n\r\n        const dispatch = useDispatch()\r\n\r\n        const connectaccount = (item, reconnect) => {\r\n            let refresh = 0;\r\n            if(reconnect) refresh = 1;\r\n            //localStorage.setItem('refresh',refresh);\r\n            dispatch(showAddAccountAlertNew(item,\"dashboardConnect\"))\r\n        }\r\n\r\n        console.log(props,'propspropsdssdf')\r\n\r\n    return (\r\n       \r\n     connectedAccounts && Object.keys(connectedAccounts).length || loader ? \r\n        <div className='col-md-6 mb-5'>\r\n        <div className='socialAccount-post-section h-100'>\r\n            <Card className='p-0 card-custom card-stretch'>\r\n\r\n            <Card.Header className='p-5'>\r\n                <div className='m-0 d-flex align-items-center justify-content-between card-title h5 w-100'>\r\n                    <h6 class=\"card-label font-weight-bolder m-0 \">Social Accounts</h6>\r\n                    { !loader ?\r\n                    <div className=''>\r\n                        <Link to={`/transactions#connectedAccounts`} className='text-secondary font-size-base'>View All</Link>\r\n                    </div> : null }\r\n                </div>\r\n            </Card.Header>\r\n            \r\n             { loader ? <SocialactionSkeleton/> : connectedAccounts.map((e,index)=>{\r\n\r\n                const getData = e.ConnectedAccounts\r\n\r\n                return(<Card.Body className='p-5'>\r\n                     <a class=\"mb-4 last-child-mb-0 d-block text-secondary\" href=\"#\">\r\n                        <div class=\"p-5 border rounded\"> {  console.log(getData,'jsdlkflksjdjsdfjsdjjss')}\r\n                            <div class=\" d-flex align-items-center justify-content-between\">\r\n                                <AuthorInfo\r\n                                    isIcon={e.Network.icon}\r\n                                    picture={getData.profilePicture}\r\n                                    authorUsername={e.accountName}\r\n                                    authorName={getData.accountName}\r\n                                    link={\"\"}\r\n                                    networkId={getData.networkId}\r\n                                />\r\n                                {/* <div class=\"d-flex align-items-center\">\r\n                                    <div class=\"position-relative me-3\">\r\n                                        <div class=\"symbol symbol-50 symbol-light me-3 con_user_img cursor-pointer rounded-circle overflow-hidden\">\r\n                                            <div class=\"symbol-image\">W</div>\r\n                                        </div>\r\n                                        <div class=\"m_social_icon_new card-shadow position-absolute bg-white rounded-circle d-flex align-items-center justify-content-center\"><i class=\"fab fa-instagram font-size-sm\"></i></div>\r\n                                    </div>\r\n                                    <div class=\"d-flex text-left flex-column conn_user_info cursor-pointer\">\r\n                                        <p class=\"text-dark mb-0 font-weight-boldest overflow-hidden text-nowrap text-ellipsis author_name text-capitalize\">World Wide Boat Brokers</p>\r\n                                        <p class=\"m-0 d-flex conn_auther_info\"><small class=\"overflow-hidden text-nowrap text-ellipsis post_count me-2 text-secondary\">@World Wide Boat Brokers</small></p>\r\n                                    </div>\r\n                                </div> */}\r\n                                <div className=''>\r\n                                    <h5>\r\n                                      {getData.api == 2 ?\r\n                                                <div className=\"conn_status connnected text-right\">\r\n                                                    <div className=\"conn_status_wrap\">\r\n                                                        <span className=\"conn_icon me-1\">\r\n                                                            <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" >\r\n                                                                <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\r\n                                                                    <polygon points=\"0 0 24 0 24 24 0 24\"></polygon>\r\n                                                                    <path fill=\"#6ac259\" d=\"M6.26193932,17.6476484 C5.90425297,18.0684559 5.27315905,18.1196257 4.85235158,17.7619393 C4.43154411,17.404253 4.38037434,16.773159 4.73806068,16.3523516 L13.2380607,6.35235158 C13.6013618,5.92493855 14.2451015,5.87991302 14.6643638,6.25259068 L19.1643638,10.2525907 C19.5771466,10.6195087 19.6143273,11.2515811 19.2474093,11.6643638 C18.8804913,12.0771466 18.2484189,12.1143273 17.8356362,11.7474093 L14.0997854,8.42665306 L6.26193932,17.6476484 Z\" fill-rule=\"nonzero\" transform=\"translate(11.999995, 12.000002) rotate(-180.000000) translate(-11.999995, -12.000002) \"></path>\r\n                                                                </g>\r\n                                                            </svg>\r\n                                                        </span>\r\n                                                        <span className=\"font-weight-bolder acc_status\">Connected</span>\r\n                                                    </div>\r\n                                                    <small>{e.Network.name} Profile</small>\r\n                                                </div>\r\n                                                : <div className=\"conn_status disconnnected text-right\">\r\n                                                    <div className=\"conn_status_wrap\">\r\n                                                    {![10,19,15,7,23,29].includes(e.Network.id) && <a onClick={()=>connectaccount(e.Network,true)} className=\"btn btn-link text-primary openGoogleReconnect p-0 font-size-h5\" data-action=\"reconnect\" data-src={``}>Reconnect</a>}\r\n                                                    </div>\r\n                                                    <small>{e.Network.name} Profile</small>\r\n                                                </div>\r\n                                            }\r\n\r\n                                    </h5>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </a>\r\n                \r\n                </Card.Body>)\r\n                })}\r\n            </Card>\r\n        </div>\r\n    </div> : null\r\n    );\r\n };\r\n\r\n export default React.memo(SocialAction)"],"names":["AuthorInfo","props","imageError","setImageError","useState","undefined","_jsxs","onClick","redirectTo","id","username","link","includes","redirectLink","manageSpace","window","open","URL","hostname","networkId","authorUsername","className","topperfoming","children","_jsx","getFirstLetterOfString","authorName","onError","src","picture","width","height","isIcon","nIcon","NetworkIcon","icon","class","date","_Fragment","moment","Date","fromNow","React","xmlns","viewBox","d","fill","transform","isDashboard","size","SocialactionSkeleton","map","SocialAction","connectedAccounts","loader","dispatch","useDispatch","console","log","Object","keys","length","Card","Header","Link","to","e","index","getData","ConnectedAccounts","Body","href","Network","profilePicture","accountName","api","stroke","points","name","connectaccount","item","showAddAccountAlertNew"],"sourceRoot":""}