{"version":3,"file":"static/js/5602.387b245a.chunk.js","mappings":"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","sources":["app/Display/analytics-new/layout/common/graph/assetsTypeLineChart.js"],"sourcesContent":["import React, { PureComponent } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport ApexCharts from \"apexcharts\";\nimport moment from \"moment\";\n\nexport default class AssetsTypeLineChart extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.chartRef = React.createRef(); // Create a reference to the chart\n \n    this.state = {\n      series: this.props.contentAnalyticsData.newSeries,\n      options: {\n        colors: props.section==1 ? [\"#546FED\", \"#EF45B1\"] : [\"#546FED\", \"#F8B861\", \"#EF45B1\"],\n        chart: {\n          id: \"analyticsOverview\",\n          type: \"line\",\n          events: {\n            mounted: () =>  {\n              const chart = this.chartRef.current.chart; // Access the chart instance\n              if(props.section==1){\n                chart.hideSeries(\"Average Recommendation Score\"); // Hide the second series by default\n              }\n            },\n            legendClick: (chartContext, seriesIndex, config) => {\n                const chart = this.chartRef.current.chart; // Access the chart instance\n                const allSeries = chart.w.globals.series.slice();\n\n                allSeries.forEach((_, index) => {\n                  if (index !== seriesIndex) {\n                    chartContext.hideSeries(\n                      chartContext.w.globals.seriesNames[index]\n                    );\n                  } else {\n                    chartContext.showSeries(\n                      chartContext.w.globals.seriesNames[index]\n                    );\n                  }\n                });\n            },\n          },\n          animations: {\n            enabled: true,\n            easing: \"linear\",\n            dynamicAnimation: {\n              speed: 1000,\n            },\n          },\n          height: 350,\n          zoom: { enabled: false },\n          toolbar: { show: false },\n        },\n        legend: {\n          show: true,\n          position: \"top\",\n          itemMargin: {\n            horizontal: 20,\n            vertical: 0,\n          },\n          onItemClick: {\n            toggleDataSeries: false\n          },\n          onItemHover: {\n            highlightDataSeries: true // This controls the hover behavior; set to true/false based on preference\n          }\n        },\n        dataLabels: { enabled: false },\n        markers: { size: 0, style: \"hollow\" },\n        stroke: {\n          width: [4, 4, 4],\n          curve: \"smooth\",\n          lineCap: 'round',  // Makes the line edges rounded\n        },\n        xaxis: {\n          type: \"datetime\",\n          min: this.props.contentAnalyticsData?.unixDate[0],\n          tickAmount: 6,\n          labels: { \n            rotate: -45,  // Rotate labels to avoid overlap\n            formatter: (value) => {\n                return moment(value).subtract(1, 'days').format('DD MMM')  // Format as \"Month Day\"\n            }\n          } ,\n          tooltip: {\n            shared: true,\n            intersect: true, // Allows tooltip to show when hovering near the points\n            formatter: function (value) {\n              return moment(value).subtract(1, 'days').format('D-MM-YYYY') // Format as \"Month Day\"\n            },\n          },\n        },\n        yaxis: {\n          labels: {\n            formatter: function (value) {\n              return  value // Rounds the value to the nearest integer\n            }\n          }\n        },\n        grid: {\n          show: true, // Enable grid\n          borderColor: '#E8E8E8', // Grid line color\n          strokeDashArray: 0, // Solid lines, or dashed lines by increasing the number\n          position: 'back', // 'front' for grid lines in front of the chart\n          xaxis: {\n            lines: {\n              show: true, // Show vertical lines\n            },\n          },\n          yaxis: {\n            lines: {\n              show: true, // Show horizontal lines\n            },\n          },\n        },\n      },\n      responsive: [\n        {\n          // breakpoint: 991,\n          options: {\n            chart: {\n              height: 300,\n            },\n          },\n          // breakpoint: 767,\n          options: {\n            chart: {\n              height: 280,\n            },\n          },\n        },\n      ],\n    };\n  }\n\n  render() {\n    const { contentAnalyticsData } = this.props;\n\n    const lastDate =\n      contentAnalyticsData?.unixDate[\n        contentAnalyticsData?.unixDate?.length - 1\n      ];\n    if (lastDate) {\n      const chart = ApexCharts.getChartByID(\"area-datetime2\");\n      if (chart) {\n        chart.zoomX(\n          contentAnalyticsData?.unixDate[0],\n          contentAnalyticsData?.unixDate[lastDate - 1]\n        );\n      }\n    }\n   \n\n    return (\n      <ReactApexChart\n        ref={this.chartRef}\n        options={this.state.options}\n        series={this.state.series}\n        type=\"line\"\n        height={350}\n      />\n    );\n  }\n}\n"],"names":["AssetsTypeLineChart","PureComponent","constructor","props","_this$props$contentAn","super","this","chartRef","React","state","series","contentAnalyticsData","newSeries","options","colors","section","chart","id","type","events","mounted","current","hideSeries","legendClick","chartContext","seriesIndex","config","w","globals","slice","forEach","_","index","seriesNames","showSeries","animations","enabled","easing","dynamicAnimation","speed","height","zoom","toolbar","show","legend","position","itemMargin","horizontal","vertical","onItemClick","toggleDataSeries","onItemHover","highlightDataSeries","dataLabels","markers","size","style","stroke","width","curve","lineCap","xaxis","min","unixDate","tickAmount","labels","rotate","formatter","value","moment","subtract","format","tooltip","shared","intersect","yaxis","grid","borderColor","strokeDashArray","lines","responsive","render","_contentAnalyticsData","lastDate","length","ApexCharts","zoomX","_jsx","ReactApexChart","ref"],"sourceRoot":""}