{"version":3,"file":"static/js/2163.f3076793.chunk.js","mappings":"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","sources":["app/Display/analytics-new/activityHub/display/index.js","app/Display/analytics-new/layout/common/sectionHeading.js","app/Display/analytics-new/layout/skeleton/imageSkeleton.js"],"sourcesContent":["import React, { Component, Suspense } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getScreenAnalyticsData,\r\n} from \"../../../../../actions/analyticsNew\";\r\nimport { Card, CardBody } from \"react-bootstrap\";\r\nimport ImageSkeleton from \"../../layout/skeleton/imageSkeleton\";\r\nimport SectionHeading from \"../../layout/common/sectionHeading\";\r\n\r\nconst TopCard = React.lazy(() =>\r\n  import(\"../../layout/common/topCard\")\r\n)\r\nconst Tabheader = React.lazy(() =>\r\n  import(\"../../layout/common/subheader/tabHeader\")\r\n)\r\nconst AssetsTypeAreaChart = React.lazy(() =>\r\n  import(\"../../layout/common/graph/assetsTypeAreaChart\")\r\n);\r\nconst ScreensOverview = React.lazy(() =>\r\n  import(\"./components/screensOverview\")\r\n);\r\n\r\nclass Display extends Component {  \r\n  componentDidMount() {\r\n    const { getScreenAnalytics, analyticsStatus, selectedWallFeed  } = this.props;\r\n      getScreenAnalytics(!selectedWallFeed.length ? true : analyticsStatus)\r\n    }\r\n\r\n  render() {\r\n    const {\r\n      get_screen_overview_data,\r\n      get_screen_overview_data_loader,\r\n      get_screen_analytics_data,\r\n      get_screen_analytics_loader\r\n    } = this.props.analyticsRecords;\r\n\r\n\r\n    return (\r\n      <>\r\n            <div className=\"\">\r\n              <Suspense fallback={<></>}>\r\n                <Tabheader />\r\n               </Suspense>  \r\n              <div className=\"row\">\r\n                <Suspense fallback={<></>}>\r\n                  <TopCard loader={get_screen_analytics_loader} data={get_screen_analytics_data} col={2} res={6}  />\r\n                </Suspense>  \r\n              </div>\r\n\r\n              <Suspense fallback={<></>}>\r\n                <ScreensOverview\r\n                  loader={get_screen_overview_data_loader}\r\n                  {...get_screen_overview_data}\r\n                />\r\n              </Suspense>\r\n\r\n              <Card className=\"sw-card-custom gutter-b p-5 card-shadow\">\r\n                <SectionHeading  section={3}  title={'Content Analytics'} />\r\n                <CardBody className=\"p-0\">\r\n                  { get_screen_overview_data_loader ? (<ImageSkeleton img={3} />) : (\r\n                    <Suspense fallback={<></>}>\r\n                        <AssetsTypeAreaChart\r\n                        key={get_screen_overview_data_loader}\r\n                        {...get_screen_overview_data}\r\n                        type={\"bar\"}\r\n                      />\r\n                    </Suspense>\r\n                  )}\r\n                </CardBody>\r\n              </Card>\r\n            </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst widgetstateProps = (state) => {  \r\n  return {\r\n    analyticsRecords: state.analyticsRecords,\r\n    selectedWallFeed: state.analyticwall.selectedWallFeed.feeds,\r\n    detail: state.appsMore.detail,\r\n    analyticsStatus : state.analyticsStatus.trialAccessAPI\r\n  };\r\n};\r\n\r\nconst widgetDispatchProps = (dispatch) => {\r\n  return {\r\n    getScreenAnalytics: (isTrial) => dispatch(getScreenAnalyticsData(isTrial)),\r\n  };\r\n};\r\n\r\nexport default connect(widgetstateProps, widgetDispatchProps)(Display);\r\n","import { Button, CardHeader, CardTitle } from \"react-bootstrap\";\r\nimport { baseUrl } from \"../../../../../utils\";\r\n\r\nconst SectionHeading = (props) => {\r\n\r\n  const { title, section, cardTitleCss, icon, iconFull, selectedWallFeed, moreData, total, handlePopup, headingMargin, isDashboard } = props\r\n\r\n  // && selectedWallFeed && Object.keys(selectedWallFeed).length\r\n\r\n  return (\r\n    <CardHeader className={`${section==1 ? 'p-0 border-0' : section==2 ? 'p-5' : section==3 ? 'p-0 pb-3' : 'px-5 pt-5 border-0 pb-0'}`}>\r\n      <CardTitle className={cardTitleCss ? cardTitleCss : `mb-0 d-flex align-items-center justify-content-between ${isDashboard ? isDashboard : \"\"}`}>\r\n        <h6 class={`card-label font-weight-bolder ${!headingMargin ? 'm-0' : ''} `}>\r\n         { icon ? <img src={baseUrl(`dashboard/analytic/${icon}.svg`)}  height={\"20px\"} width={\"20px\"} /> : null }\r\n         { iconFull ? <img src={iconFull}  height={\"20px\"} width={\"20px\"} />  : null }   {title}</h6>\r\n         { (total > 5) || moreData ? (\r\n          <Button\r\n            variant=\"link\"\r\n            className=\"p-0\"\r\n            onClick={() => handlePopup(true)}\r\n          >\r\n            See More\r\n          </Button>\r\n        ) : null\r\n        }\r\n      </CardTitle>\r\n    </CardHeader>\r\n  );\r\n};\r\n\r\nexport default SectionHeading;\r\n","import React from \"react\";\r\nimport { baseUrl } from \"../../../../../utils\";\r\n\r\nconst ImageSkeleton = (props) => {\r\n  return (\r\n    <div className=\"py-1 text-center\">\r\n      <img className=\"img-fluid\" src={baseUrl(`dashboard/analytic/content-analytis-${props.img}.svg`)} width={\"100%\"} height={\"403px\"}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(ImageSkeleton)"],"names":["TopCard","React","Tabheader","AssetsTypeAreaChart","ScreensOverview","Display","Component","componentDidMount","getScreenAnalytics","analyticsStatus","selectedWallFeed","this","props","length","render","get_screen_overview_data","get_screen_overview_data_loader","get_screen_analytics_data","get_screen_analytics_loader","analyticsRecords","_jsx","_Fragment","children","_jsxs","className","Suspense","fallback","loader","data","col","res","Card","SectionHeading","section","title","CardBody","ImageSkeleton","img","type","connect","state","analyticwall","feeds","detail","appsMore","trialAccessAPI","dispatch","isTrial","getScreenAnalyticsData","cardTitleCss","icon","iconFull","moreData","total","handlePopup","headingMargin","isDashboard","CardHeader","CardTitle","class","src","baseUrl","height","width","Button","variant","onClick"],"sourceRoot":""}