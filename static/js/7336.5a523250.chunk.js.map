{"version":3,"file":"static/js/7336.5a523250.chunk.js","mappings":"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","sources":["app/Display/analytics-new/layout/common/SentimentChart.js","app/Display/analytics-new/components/content/SentimentAnalytics.js"],"sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport ApexCharts from \"apexcharts\";\r\nexport default class SentimentChart extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const getData = this.props.contentAnalyticsData.newSeries[0]['data']\r\n\r\n    const lastCategory = getData && Object.keys(getData).length && this.props.contentAnalyticsData.newSeries[0]['data'].length - 1; // Use dynamic category if needed\r\n    const seriesData   =getData && Object.keys(getData).length && this.props.contentAnalyticsData.newSeries[0]['data'];\r\n\r\n    this.state = {\r\n      series: this.props.contentAnalyticsData.newSeries,\r\n      options: {\r\n        colors: [\"#546FED\"],\r\n        chart: {\r\n          id: \"area-datetime\",\r\n          toolbar: { show: false },\r\n          type: \"line\",\r\n          animations: {\r\n            enabled: true,\r\n            easing: \"linear\",\r\n            dynamicAnimation: {\r\n              speed: 1000,\r\n            },\r\n          },\r\n          height: 350,\r\n          zoom: { enabled: false },\r\n        },\r\n        legend: {\r\n          show: true,\r\n          position: \"top\",\r\n          itemMargin: {\r\n            horizontal: 20,\r\n            vertical: 0,\r\n          },\r\n        },\r\n        dataLabels: { enabled: false },\r\n        markers: { \r\n        size: 4, style: \"hollow\" },\r\n        stroke: {\r\n          width: [4],\r\n          curve: \"straight\",\r\n        },\r\n        xaxis: {\r\n          type: \"datetime\",\r\n          min: this.props.contentAnalyticsData?.unixDate[0],\r\n          tickAmount: 6,\r\n        },\r\n        annotations: {\r\n          points: [\r\n            {\r\n              x:  lastCategory && seriesData[lastCategory][0], // Dynamically set based on last category\r\n              y:  lastCategory && seriesData[lastCategory][1], // Last data point\r\n              marker: {\r\n                size: 8, // Highlight the last marker\r\n                fillColor: \"#546FED\",\r\n                strokeColor: \"#2545d7\",\r\n                shape: \"circle\",\r\n                cssClass: \"blinking-marker\", // Apply custom CSS class for blinking effect\r\n              },\r\n              label: {\r\n                borderColor: \"#546FED\",\r\n                offsetY: -10, // Move the label higher to avoid overlap\r\n                offsetX: -10, // Move the label higher to avoid overlap\r\n                style: {\r\n                  color: \"#546FED\",\r\n                  background: \"transparent\", // Make label background transparent\r\n                  zIndex: 0, // Lower z-index to ensure marker is on top\r\n                },\r\n                text: `${lastCategory && seriesData[lastCategory][1]}`,\r\n              },\r\n            }],\r\n          yaxis: [\r\n            {\r\n              y: 25,\r\n              y2: 0,\r\n              borderColor: \"transparent\",\r\n              fillColor: \"#f7caca\", // Color for 0-30 range\r\n            },\r\n            {\r\n              y: 55,\r\n              y2: 25,\r\n              borderColor: \"transparent\",\r\n              fillColor: \"#f9debe\", // Color for 30-60 range\r\n            },\r\n            {\r\n              y: 100,\r\n              y2: 55,\r\n              borderColor: \"transparent\",\r\n              fillColor: \"#cfe7d5\", // Color for 60-100 range\r\n            },\r\n          ],\r\n        },\r\n        tooltip: { x: { format: \"dd MMM yyyy\" } },\r\n        grid: {\r\n          show: false, // Enable or disable the entire grid (optional)\r\n        },\r\n      },\r\n      responsive: [\r\n        {\r\n          // breakpoint: 991,\r\n          options: {\r\n            chart: {\r\n              height: 300,\r\n            },\r\n          },\r\n          // breakpoint: 767,\r\n          options: {\r\n            chart: {\r\n              height: 280,\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { contentAnalyticsData } = this.props;\r\n\r\n    const lastDate =\r\n      contentAnalyticsData?.unixDate[\r\n        contentAnalyticsData?.unixDate?.length - 1\r\n      ];\r\n    if (lastDate) {\r\n      const chart = ApexCharts.getChartByID(\"area-datetime2\");\r\n      if (chart) {\r\n        chart.zoomX(\r\n          contentAnalyticsData?.unixDate[0],\r\n          contentAnalyticsData?.unixDate[lastDate - 1]\r\n        );\r\n      }\r\n    }\r\n\r\n\r\n    return (\r\n     <> \r\n      <ReactApexChart\r\n        options={this.state.options}\r\n        series={this.state.series}\r\n        type=\"line\"\r\n        height={350}\r\n      />\r\n           \r\n     </> \r\n    );\r\n  }\r\n}\r\n","import { Card, CardBody, CardHeader, CardTitle, Tab, Tabs } from \"react-bootstrap\";\r\nimport { toAbsoluteUrl } from \"../../utils\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport React from \"react\";\r\nimport { reArrangeSeries } from \"../../../../../utils\";\r\nimport SentimentChart from \"../../layout/common/SentimentChart\";\r\nimport ImageSkeleton from \"../../layout/skeleton/ImageSkeleton\";\r\n\r\nconst SentimentAnalytics = (props) => {\r\n\r\n  const sentimentAnalytics = props.sentimentPost && Object.keys(props.sentimentPost).length && reArrangeSeries([props.sentimentPost[2]],1);\r\n  const { data } = props.sentimentPost && Object.keys(props.sentimentPost).length ? props.sentimentPost[0] : [];\r\n\r\n  const SentimentsData = data && Object.keys(data).length ? [\r\n    { post: data[0]['Strongly Positive'], type:'Strongly Positive', icon: \"/emojis/emoji1.svg\", value: 30, color: \"#6AC259\" },\r\n    { post: data[0]['Positive'], type:'Positive', icon: \"/emojis/emoji2.svg\", value: 25, color: \"#59CBB7\" },\r\n    { post: data[0]['Neutral'], type:'Neutral', icon: \"/emojis/emoji3.svg\", value: 19, color: \"#FFB74A\" },\r\n    { post: data[0]['Negative'], type:'Negative', icon: \"/emojis/emoji4.svg\", value: 29, color: \"#FF7483\" },\r\n    { post: data[0]['Strongly Negative'], type:'Strongly Negative', icon: \"/emojis/emoji5.svg\", value: 45, color: \"#F74C5B\" },\r\n  ] : [];\r\n\r\n  return (\r\n    <Card className=\"sw-card-custom gutter-b p-5 card-shadow mb-5\">\r\n      <CardHeader className=\"p-0 border-0\">\r\n        <CardTitle className=\"mb-3\">\r\n          <h6 class=\"card-label font-weight-bolder\"><img src=\"https://socialwalls.com/wp-content/themes/socialwalls/assets/section-library/images/home/new/ai.svg\" height={\"20px\"} width={\"20px\"}/> Sentiments Analysis</h6>\r\n        </CardTitle>\r\n      </CardHeader>\r\n      <CardBody className=\"p-0\">\r\n            <Tabs defaultActiveKey=\"trends\" id=\"uncontrolled-tab-example\" className=\"nav-tabs-line sw-custom-nav nav nav-tabs mb-5\">\r\n              <Tab eventKey=\"trends\" title=\"Live Trends\">\r\n                <div className=\"card-body p-0 mb-0\">\r\n                   { props.loader ?  <ImageSkeleton img={4} />\r\n                        :\r\n                     <SentimentChart contentAnalyticsData={sentimentAnalytics} type={\"line\"} /> \r\n                  }\r\n                </div>\r\n              </Tab>\r\n              <Tab eventKey=\"statistics\" title=\"Statistics\">\r\n                <div className=\"card-body p-0 mb-0\">\r\n                  \r\n                  <div className=\"sentiment-statistics py-8\">\r\n                      <div className=\"chart-bg d-flex\">\r\n                        <span>0</span>\r\n                        <span>25</span>\r\n                        <span>50</span>\r\n                        <span>100</span>\r\n                        <span>200</span>\r\n                        <span>400</span>\r\n                        <span>800</span>\r\n                        <span>1600</span>\r\n                        <span>3200</span>\r\n                        <span>6400</span>\r\n                        <span>12800</span>\r\n                      </div>\r\n                    {SentimentsData &&\r\n                      Object.keys(SentimentsData).length &&\r\n                      SentimentsData.map((data, index) => {\r\n\r\n                        let total = [SentimentsData[0]['post'],SentimentsData[1]['post'],SentimentsData[2]['post'],SentimentsData[3]['post'],SentimentsData[4]['post']].reduce((a, b) => a + b, 0);\r\n                        let percent = parseInt(data.post) > 0 ? (data.post / total * 100) : 0;\r\n                        percent = percent.toFixed(1);\r\n\r\n                        return (\r\n                          <div className=\"d-flex align-items-center mb-7 w-100\">\r\n                            <div className=\"d-flex align-items-center me-10 col-2\">\r\n                              <div className=\"svg-icon svg-icon-3x me-3\">\r\n                                <SVG src={toAbsoluteUrl(SentimentsData[index].icon)} ></SVG>\r\n                              </div> <strong className=\"text-nowrap\">{data.type}</strong>\r\n                            </div>\r\n                            <div\r\n                              className={`progress_sentiment progress w-100 h-auto pro_${index}`}\r\n                              now={SentimentsData[index].value}\r\n                              label={SentimentsData[index].value}\r\n                              style={{ background : 'none'}}\r\n                            >\r\n                              <div\r\n                                role=\"progressbar\"\r\n                                className=\"progress-bar me-5\"\r\n                                aria-valuenow={SentimentsData[index].value}\r\n                                aria-valuemin=\"0\"\r\n                                aria-valuemax=\"100\"\r\n                                style={{\r\n                                  width: `${SentimentsData[index].value}%`,\r\n                                  backgroundColor: SentimentsData[index].color,\r\n                                }}\r\n                              >\r\n                                <div className=\"progress-tooltip-box progress_label d-flex align-items-start border-0 text-dark text-start shadow\">\r\n                                  <SVG src={toAbsoluteUrl(SentimentsData[index].icon)} width={20} height={20} className=\"me-2\" ></SVG>\r\n                                  <div className=\"toolitp-content\">\r\n                                  <div className=\"font-size-xs\">{SentimentsData[index].type}</div>\r\n                                  <strong className=\"font-size-sm\">{SentimentsData[index].post} Posts<text style={{color: SentimentsData[index].color}}>({SentimentsData[index].value}%)</text></strong>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <strong className=\"font-size-sm\">{data.post} Posts ({`${percent}%`})</strong>\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                  </div>\r\n                </div>\r\n                \r\n              </Tab>\r\n            </Tabs>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default React.memo(SentimentAnalytics);\r\n"],"names":["SentimentChart","PureComponent","constructor","props","_this$props$contentAn","super","getData","this","contentAnalyticsData","newSeries","lastCategory","Object","keys","length","seriesData","state","series","options","colors","chart","id","toolbar","show","type","animations","enabled","easing","dynamicAnimation","speed","height","zoom","legend","position","itemMargin","horizontal","vertical","dataLabels","markers","size","style","stroke","width","curve","xaxis","min","unixDate","tickAmount","annotations","points","x","y","marker","fillColor","strokeColor","shape","cssClass","label","borderColor","offsetY","offsetX","color","background","zIndex","text","yaxis","y2","tooltip","format","grid","responsive","render","_contentAnalyticsData","lastDate","ApexCharts","zoomX","_jsx","_Fragment","children","ReactApexChart","SentimentAnalytics","sentimentAnalytics","sentimentPost","reArrangeSeries","data","SentimentsData","post","icon","value","_jsxs","Card","className","CardHeader","CardTitle","class","src","CardBody","Tabs","defaultActiveKey","Tab","eventKey","title","loader","ImageSkeleton","img","map","index","total","reduce","a","b","percent","parseInt","toFixed","SVG","toAbsoluteUrl","now","role","backgroundColor","React"],"sourceRoot":""}