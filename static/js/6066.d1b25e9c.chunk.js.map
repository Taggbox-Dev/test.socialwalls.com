{"version":3,"file":"static/js/6066.d1b25e9c.chunk.js","mappings":"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","sources":["app/Display/analytics-new/layout/skeleton/topPerfomingSkeleton.js","app/Display/analytics-new/activityHub/widget/components/perfomingPost.js","app/Display/analytics-new/content/components/authorInfo.js","app/Display/analytics-new/layout/common/networkIcon.js","app/Display/analytics-new/layout/common/noData.js","app/Display/analytics-new/layout/common/popup/popupModal.js","app/Display/analytics-new/layout/common/postMedia.js"],"sourcesContent":["    import React from \"react\";\r\n\r\n    const List = () => {\r\n    return (\r\n        <div class=\"d-flex align-items-center justify-content-between py-2\">\r\n        <p class=\"sk_line sk_line_height_10 sk_line_40 m-0\"></p>\r\n        <h6 class=\"sk_line sk_line_height_16 sk_line_20 m-0\"></h6>\r\n        </div>\r\n    );\r\n    };\r\n\r\n    const TopPerfomingSkeleton = () => {\r\n    return [1, 2, 3, 4, 5].map(() => {\r\n        return (\r\n        <div className=\"top_posts top_posts_new\">\r\n            <div className=\"card-shadow rounded mb-1\">\r\n            <div className=\"m_card_cont\">\r\n                <div className=\"sk_list_view\">\r\n                <div className=\"sk_line sk_img_thumb rounded w-100 m-0 me-5\"></div>\r\n                </div>\r\n                <div className=\"text-center position-relative m_user_info\">\r\n                <div className=\"m_grid_author d-flex justify-content-center mb-3\">\r\n                    <div class=\"sk_line sk_img m-0 me-3\"></div>\r\n                </div>\r\n                <div className=\"w-100 d-flex flex-column align-items-center\">\r\n                    <h3 class=\"sk_line sk_line_height_16 sk_line_70 m-0 mb-3\"></h3>\r\n                    <p class=\"sk_line sk_line_height_10 sk_line_40 m-0\"></p>\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                    <List />\r\n                    <List />\r\n                    <List />\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    });\r\n    };\r\n\r\n    export default React.memo(TopPerfomingSkeleton);\r\n","import React, { Suspense, useState } from \"react\";\r\nimport { Card, CardBody } from \"react-bootstrap\";\r\nimport TopPerfomingSkeleton from \"../../../layout/skeleton/topPerfomingSkeleton\";\r\nimport NoData from \"../../../layout/common/noData\";\r\nimport { SENTIMENTS_CALC } from \"../../../../../../utils\";\r\nimport { getPrfomingPostMore, getreactedpostsMore } from \"../../../../../../actions/analyticsNew\";\r\nimport SectionHeading from \"../../../layout/common/sectionHeading\";\r\nimport { Splide, SplideSlide, SplideTrack } from \"@splidejs/react-splide\";\r\nimport PercentDifference from \"../../../layout/common/percentDifference\";\r\nimport { MediaBaseUrl } from \"../../../../../../actions/api\";\r\nimport AuthorInfo from \"../../../content/components/authorInfo\";\r\nimport PopupModal from \"../../../layout/common/popup/popupModal\";\r\nimport PostMedia from \"../../../layout/common/postMedia\";\r\nconst PostPopup = React.lazy(() => import(\"../../../layout/popup/postPopup\"));\r\nconst PostdetailPopup = React.lazy(() => import(\"../../../layout/popup/postdetailPopup\")); \r\n\r\nconst PerfomingPost = (props) => {\r\nconst { type, title, postData, loader, totalCount, selectedWallFeed } = props;\r\n\r\nconst [show, setShow] = useState(false);\r\nconst [showPost, setshowPost] = useState(false);\r\nconst [postInfo, setpostInfo] = useState(false);\r\n\r\nconst handlePopup = (event) => {\r\n    setShow(event);\r\n};\r\n\r\nconst handlePostpopup = (event) => {\r\n    setshowPost(event);\r\n  };\r\n\r\n  const canSlide = postData && Object.keys(postData).length>5;\r\n  const perPagePost = canSlide ? 5 : postData ? Object.keys(postData).length : 0\r\n \r\n  const settings = {\r\n    type: 'loop',\r\n    rewind: false,\r\n    speed: 1000,\r\n    clones: canSlide ? perPagePost : 0,\r\n    perMove: 1,\r\n    loop: canSlide,\r\n    interval: 5000,\r\n    drag: canSlide,   \r\n    perPage: perPagePost,\r\n    gap: 0,\r\n    autoplay: canSlide,\r\n    pagination: false,\r\n    arrows: canSlide,\r\n    fixedHeight: true,\r\n    breakpoints: {\r\n        0: {\r\n            perPage: 1\r\n        },\r\n        579: {\r\n            perPage: 2\r\n        },\r\n        767: {\r\n            perPage: 3,\r\n        },\r\n        1300: {\r\n            perPage: 4,\r\n        },\r\n        1600: {\r\n            perPage: 5,\r\n        }\r\n    }\r\n};\r\n\r\nreturn (\r\n    <div className=\"pb-5\">\r\n    <Card className=\"sw-card-custom card-shadow performing-post\">  \r\n      <SectionHeading selectedWallFeed={selectedWallFeed} section={2} title={title} total={totalCount} handlePopup={handlePopup} />\r\n        <CardBody className=\"p-5\">\r\n        <div className=\"top_posts_row row\">\r\n            {loader ? (\r\n            <TopPerfomingSkeleton />\r\n            ) : postData && Object.keys(postData).length ? (\r\n                <Splide hasTrack={false} options={settings}>\r\n                <SplideTrack>\r\n                { postData.map((e,index) => {\r\n                return (\r\n               <SplideSlide key={index+type}>    \r\n                <div className=\"top_posts top_posts_new\">\r\n                    <div className=\"card-shadow rounded mb-1\">\r\n                    <div className=\"m_card_cont\">\r\n                        <div className=\"post_img1 cursor-pointer position-relative\"  onClick={() => { setpostInfo(e); handlePostpopup(true) }}>\r\n                        <PostMedia\r\n                            key={index}\r\n                            postFile={e.postFile}\r\n                            postId={e.id}\r\n                            className={\"img-fluid rounded-1\"}\r\n                        />\r\n                        </div>\r\n                        <div className=\"text-center position-relative m_user_info\">\r\n                        <div className=\"top-perfom-post m_grid_author d-flex justify-content-center mb-3\">\r\n                            <AuthorInfo\r\n                                isIcon={e.network.icon}\r\n                                picture={e.authorImage}\r\n                                authorUsername={e.authorName}\r\n                                authorName={e.authorName}\r\n                                date={e.created}\r\n                                link={e.link}\r\n                                networkId={e.networkId}\r\n                            />\r\n                         </div>\r\n                        </div>\r\n\r\n                        <div class=\"mt-4\" onClick={() => { setpostInfo(e); handlePostpopup(true) }}>\r\n                        {type == 1 ? (\r\n                            <div class=\"d-flex align-items-center justify-content-between py-2\">\r\n                            <span class=\"text-dark font-weight-bold font-size-md\">\r\n                                Impressions\r\n                            </span>\r\n                            <p class=\"text-dark font-weight-boldest mb-0 d-flex\">\r\n                                {e.postPerformance ? e.postPerformance : 0 }\r\n                                <PercentDifference difference={e.difference} flag={e.flag} />\r\n                            </p>\r\n                            </div>\r\n                        ) : null}\r\n\r\n                           <div class=\"d-flex align-items-center justify-content-between py-2\">\r\n                            <span class=\"text-dark font-weight-bold font-size-md\">\r\n                            Post {type==1 ? 'Clicks' : 'Likes'} \r\n                            </span>\r\n                            <p class=\"text-dark font-weight-boldest mb-0 d-flex\">\r\n                             { type!=1 ?      \r\n                            <svg className=\"me-1\" xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\" fill=\"#ff273c\">\r\n                            <path d=\"M12.001 4.52853C14.35 2.42 17.98 2.49 20.2426 4.75736C22.5053 7.02472 22.583 10.637 20.4786 12.993L11.9999 21.485L3.52138 12.993C1.41705 10.637 1.49571 7.01901 3.75736 4.75736C6.02157 2.49315 9.64519 2.41687 12.001 4.52853Z\"></path></svg> : null }\r\n                               { type!=1 ? e.reactions : e.postClicks } \r\n                               { type==1 ? <PercentDifference difference={e.difference} flag={e.flag} /> : null }\r\n                            </p>\r\n                        </div>  \r\n \r\n\r\n                        <div class=\"d-flex align-items-center justify-content-between pt-2\">\r\n                            <span class=\"text-dark font-weight-bold font-size-md me-5\">\r\n                            Sentiment\r\n                            </span>\r\n                            <div className=\"text-end\">\r\n                            { e.sentiment ?     \r\n                             <div className=\"d-inline-flex post-status bg-position\">\r\n                                <img\r\n                                    className=\"img-fluid me-2\"\r\n                                    src={`${MediaBaseUrl}icons/emoji/emoji${\r\n                                    SENTIMENTS_CALC(e.sentiment).item\r\n                                    }.svg`}\r\n                                    width={\"16px\"}\r\n                                    height={\"16px\"}\r\n                                />\r\n                                <span className=\"overflow-hidden text-nowrap text-ellipsis\">{SENTIMENTS_CALC(e.sentiment).label}</span>\r\n                            </div> \r\n                            : '-' }\r\n                          </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n               </SplideSlide> \r\n                )\r\n            })}\r\n            </SplideTrack>\r\n            </Splide>\r\n            ) : (\r\n            <NoData />\r\n            )}\r\n        </div>\r\n        </CardBody>\r\n    </Card>\r\n\r\n  { totalCount >5 ? \r\n    <PopupModal\r\n        size={\"xl\"}\r\n        showHide={show}\r\n        handlePopup={handlePopup}\r\n        title={`Top ${props.type==1 ? `Perfoming` : `Reacted` } Posts`}>\r\n        <Suspense fallback={<></>}>\r\n        <PostPopup total={totalCount} moreData={props.type==1 ? getPrfomingPostMore : getreactedpostsMore} {...props} />\r\n        </Suspense>\r\n    </PopupModal> : null }\r\n\r\n\r\n     <PopupModal\r\n        size={\"lg\"}\r\n        showHide={showPost}\r\n        handlePopup={handlePostpopup}\r\n        title={ `General Information`}\r\n        >\r\n        <Suspense fallback={<></>}>\r\n            <PostdetailPopup  {...postInfo} />\r\n        </Suspense>\r\n        </PopupModal>\r\n    </div>\r\n);\r\n};\r\n\r\nexport default React.memo(PerfomingPost)","import React, { useState } from \"react\";\r\nimport { getFirstLetterOfString, manageSpace } from \"../../../../../utils\";\r\nimport moment from \"moment\";\r\nimport NetworkIcon from \"../../layout/common/networkIcon\";\r\n\r\nconst AuthorInfo = (props) => {\r\n  const [imageError, setImageError] = useState(false);\r\n\r\n  const redirectTo=(id,username,link)=> {\r\n\r\n     if(![7].includes(id) && link && username){\r\n\r\n       let redirectLink = ``\r\n\r\n        if(props.link.includes('tiktok')){\r\n           redirectLink = `/search?q=${manageSpace(username)}`\r\n          }else if(props.link.includes('linkedin')){\r\n            redirectLink = `/search/results/all/?keywords=${manageSpace(username)}`\r\n           }\r\n          else{\r\n          redirectLink = `/${manageSpace(username)}`\r\n        }\r\n        window.open(`https://${new URL(props.link).hostname}${redirectLink}`)\r\n     }\r\n  }\r\n \r\n  return (\r\n    props && props!=undefined  ?  \r\n    <div onClick={() => redirectTo(props.networkId,props.authorUsername,props.link) } className={`d-flex align-items-center ${!props.topperfoming ? 'w-50' : 'me-10'}`}>\r\n   \r\n      <div  className=\"position-relative\">\r\n        <div className=\"symbol symbol-35 symbol-light me-3 con_user_img cursor-pointer rounded-circle overflow-hidden\">\r\n          {imageError ? (\r\n            <div className=\"symbol-image\">{getFirstLetterOfString(props.authorName)}</div>\r\n          ) : (\r\n            <img\r\n              onError={() => setImageError(true)}\r\n              src={props.picture}\r\n              className=\"img-fluid symbol-image\"\r\n              width={\"20px\"}\r\n              height={\"20px\"}\r\n            />\r\n          )}\r\n        </div>\r\n\r\n     \r\n        {props.isIcon && !props.nIcon ? (\r\n          <div className=\"m_social_icon_new card-shadow position-absolute bg-white rounded-circle d-flex align-items-center justify-content-center\">\r\n              <NetworkIcon icon={props.isIcon}/>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n      <div class=\"d-flex text-left flex-column conn_user_info cursor-pointer\">\r\n        <p class=\"text-dark mb-0 font-weight-boldest overflow-hidden text-nowrap text-ellipsis author_name text-capitalize\">\r\n          {props.authorName}\r\n        </p>\r\n        <p class=\"m-0 d-flex conn_auther_info\">\r\n          <small class=\"overflow-hidden text-nowrap text-ellipsis post_count me-2 \">\r\n            {props.authorUsername ? `@${props.authorUsername}` : props.authorName}\r\n          </small>\r\n         { props.date ? \r\n         <><small class=\"overflow-hidden text-nowrap text-ellipsis post_count me-2 \">.</small>\r\n         <small class=\"overflow-hidden text-nowrap text-ellipsis \">\r\n           {moment(new Date(props.date * 1000)).fromNow()}\r\n         </small></> : null }\r\n        </p>\r\n      </div>\r\n    </div> : null\r\n  );\r\n};\r\n\r\nexport default React.memo(AuthorInfo);\r\n","import React from \"react\";\r\n\r\nconst NetworkIcon = (props) => {\r\n  return (\r\n    ![\"fa-twitter\"].includes(props.icon) ? <i className={`fab ${props.icon} ${props.isDashboard ? props.isDashboard : ''} ${props.size ? props.size : 'font-size-sm'}`}></i> : <svg id=\"twitter\" xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" viewBox=\"0 0 44.518 44.518\"><path id=\"Path_5\" data-name=\"Path 5\" d=\"M0,0H44.518V44.518H0Z\" fill=\"none\"></path> <path id=\"Path_7\" data-name=\"Path 7\" d=\"M19.036,13.554,30.942,0H28.121L17.778,11.766,9.523,0H0L12.486,17.794,0,32.006H2.821L13.737,19.578l8.72,12.429H31.98Zm-3.865,4.4L13.9,16.177,3.838,2.083H8.172L16.3,13.462l1.262,1.773L28.12,30.025H23.786Zm0,0\" transform=\"translate(6.313 6.281)\" fill=\"#0f1419\"></path></svg>\r\n  );\r\n};\r\n\r\nexport default React.memo(NetworkIcon);\r\n","import React from \"react\";\r\nimport { baseUrl } from \"../../../../../utils\";\r\n\r\nconst GetData = () => {\r\n  return (\r\n    <div className=\"placeholder-image py-10 d-flex flex-column justify-content-center\">\r\n      <div className=\"mb-3 text-center\">\r\n        <img\r\n          className=\"img-fluid graph-bg\"\r\n          src={baseUrl(`dashboard/analytic/image-placeholder.svg`)}\r\n          width={\"80px\"}\r\n          height={\"80px\"}\r\n        />\r\n      </div>\r\n      <div className=\"\">\r\n        <h5 class=\"text-gray-dark text-center\">No Data Available</h5>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NoData = (props) => {\r\n\r\n  return props.status ? (\r\n    <tr>\r\n      <td colSpan={props.col}>\r\n        <GetData />\r\n      </td>\r\n    </tr>\r\n  ) : (\r\n    <GetData />\r\n  );\r\n};\r\n\r\nexport default React.memo(NoData);\r\n","import React from \"react\";\r\nimport {\r\n    Modal,\r\n} from \"react-bootstrap\";\r\n\r\n\r\nexport default class PopupModal extends React.Component {\r\n    render() {\r\n        const { showHide, handlePopup, title, children, size } = this.props;\r\n        return (\r\n            <Modal\r\n                show={showHide}\r\n                onHide={()=>handlePopup(false)}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                size={size}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"p-2\">\r\n                    <div className=\"more_container\">\r\n                        {children}\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { NoCameraImgPost } from \"../../../../../actions/api\";\r\n\r\nconst PostMedia = (props) => {\r\n  return (\r\n   <div className=\"position-relative d-inline-block w-100 h-100\">\r\n     <img\r\n      id={`post_${props.postId}`}\r\n      onError={(e) => (e.target.src = NoCameraImgPost)}\r\n      src={props.postFile}\r\n      className={`${props.className} ${props.multiPost ? 'img-45' : ''}`}\r\n    />\r\n\r\n    {  [3,5].includes(props.mediaType)  ? \r\n    <div className=\"play-media\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"32px\" width=\"32px\" viewBox=\"0 0 24 24\" fill=\"#fff\"><path d=\"M12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22ZM12 20C16.4183 20 20 16.4183 20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20ZM10.6219 8.41459L15.5008 11.6672C15.6846 11.7897 15.7343 12.0381 15.6117 12.2219C15.5824 12.2658 15.5447 12.3035 15.5008 12.3328L10.6219 15.5854C10.4381 15.708 10.1897 15.6583 10.0672 15.4745C10.0234 15.4088 10 15.3316 10 15.2526V8.74741C10 8.52649 10.1791 8.34741 10.4 8.34741C10.479 8.34741 10.5562 8.37078 10.6219 8.41459Z\"></path></svg>\r\n    </div> : null }\r\n   </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(PostMedia);\r\n"],"names":["List","_jsxs","class","children","_jsx","TopPerfomingSkeleton","map","className","React","PostPopup","PostdetailPopup","PerfomingPost","props","type","title","postData","loader","totalCount","selectedWallFeed","show","setShow","useState","showPost","setshowPost","postInfo","setpostInfo","handlePopup","event","handlePostpopup","canSlide","Object","keys","length","perPagePost","settings","rewind","speed","clones","perMove","loop","interval","drag","perPage","gap","autoplay","pagination","arrows","fixedHeight","breakpoints","Card","SectionHeading","section","total","CardBody","Splide","hasTrack","options","SplideTrack","e","index","SplideSlide","onClick","PostMedia","postFile","postId","id","AuthorInfo","isIcon","network","icon","picture","authorImage","authorUsername","authorName","date","created","link","networkId","postPerformance","PercentDifference","difference","flag","xmlns","height","width","viewBox","fill","d","reactions","postClicks","sentiment","src","MediaBaseUrl","SENTIMENTS_CALC","item","label","NoData","PopupModal","size","showHide","Suspense","fallback","_Fragment","moreData","getPrfomingPostMore","getreactedpostsMore","imageError","setImageError","undefined","redirectTo","username","includes","redirectLink","manageSpace","window","open","URL","hostname","topperfoming","getFirstLetterOfString","onError","nIcon","NetworkIcon","moment","Date","fromNow","transform","isDashboard","GetData","baseUrl","status","colSpan","col","render","this","Modal","onHide","backdrop","keyboard","centered","Header","closeButton","Title","Body","target","NoCameraImgPost","multiPost","mediaType"],"sourceRoot":""}