{"version":3,"file":"static/js/7820.f690aa47.chunk.js","mappings":"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","sources":["app/Display/analytics-new/content/components/authorInfo.js","app/Display/analytics-new/layout/common/networkIcon.js","app/Display/dashboard-new/components/skeleton/socialactionSkeleton.js","app/Display/dashboard-new/components/socialAction.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { getFirstLetterOfString, manageSpace } from \"../../../../../utils\";\r\nimport moment from \"moment\";\r\nimport NetworkIcon from \"../../layout/common/networkIcon\";\r\n\r\nconst AuthorInfo = (props) => {\r\n  const [imageError, setImageError] = useState(false);\r\n\r\n  const redirectTo=(id,username,link)=> {\r\n\r\n     if(![7].includes(id) && link && username){\r\n\r\n       let redirectLink = ``\r\n\r\n        if(props.link.includes('tiktok')){\r\n           redirectLink = `/search?q=${manageSpace(username)}`\r\n          }else if(props.link.includes('linkedin')){\r\n            redirectLink = `/search/results/all/?keywords=${manageSpace(username)}`\r\n           }\r\n          else{\r\n          redirectLink = `/${manageSpace(username)}`\r\n        }\r\n        window.open(`https://${new URL(props.link).hostname}${redirectLink}`)\r\n     }\r\n  }\r\n \r\n  return (\r\n    props && props!=undefined  ?  \r\n    <div onClick={() => redirectTo(props.networkId,props.authorUsername,props.link) } className={`d-flex align-items-center ${!props.topperfoming ? 'w-50' : 'me-10'}`}>\r\n   \r\n      <div  className=\"position-relative\">\r\n        <div className=\"symbol symbol-35 symbol-light me-3 con_user_img cursor-pointer rounded-circle overflow-hidden\">\r\n          {imageError ? (\r\n            <div className=\"symbol-image\">{getFirstLetterOfString(props.authorName)}</div>\r\n          ) : (\r\n            <img\r\n              onError={() => setImageError(true)}\r\n              src={props.picture}\r\n              className=\"img-fluid symbol-image\"\r\n              width={\"20px\"}\r\n              height={\"20px\"}\r\n            />\r\n          )}\r\n        </div>\r\n\r\n     \r\n        {props.isIcon && !props.nIcon ? (\r\n          <div className=\"m_social_icon_new card-shadow position-absolute bg-white rounded-circle d-flex align-items-center justify-content-center\">\r\n              <NetworkIcon icon={props.isIcon}/>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n      <div class=\"d-flex text-left flex-column conn_user_info cursor-pointer\">\r\n        <p class=\"text-dark mb-0 font-weight-boldest overflow-hidden text-nowrap text-ellipsis author_name text-capitalize\">\r\n          {props.authorName}\r\n        </p>\r\n        <p class=\"m-0 d-flex conn_auther_info\">\r\n          <small class=\"overflow-hidden text-nowrap text-ellipsis post_count me-2 \">\r\n            {props.authorUsername ? `@${props.authorUsername}` : props.authorName}\r\n          </small>\r\n         { props.date ? \r\n         <><small class=\"overflow-hidden text-nowrap text-ellipsis post_count me-2 \">.</small>\r\n         <small class=\"overflow-hidden text-nowrap text-ellipsis \">\r\n           {moment(new Date(props.date * 1000)).fromNow()}\r\n         </small></> : null }\r\n        </p>\r\n      </div>\r\n    </div> : null\r\n  );\r\n};\r\n\r\nexport default React.memo(AuthorInfo);\r\n","import React from \"react\";\r\n\r\nconst NetworkIcon = (props) => {\r\n  return (\r\n    ![\"fa-twitter\"].includes(props.icon) ? <i className={`fab ${props.icon} ${props.isDashboard ? props.isDashboard : ''} ${props.size ? props.size : 'font-size-sm'}`}></i> : <svg id=\"twitter\" xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" viewBox=\"0 0 44.518 44.518\"><path id=\"Path_5\" data-name=\"Path 5\" d=\"M0,0H44.518V44.518H0Z\" fill=\"none\"></path> <path id=\"Path_7\" data-name=\"Path 7\" d=\"M19.036,13.554,30.942,0H28.121L17.778,11.766,9.523,0H0L12.486,17.794,0,32.006H2.821L13.737,19.578l8.72,12.429H31.98Zm-3.865,4.4L13.9,16.177,3.838,2.083H8.172L16.3,13.462l1.262,1.773L28.12,30.025H23.786Zm0,0\" transform=\"translate(6.313 6.281)\" fill=\"#0f1419\"></path></svg>\r\n  );\r\n};\r\n\r\nexport default React.memo(NetworkIcon);\r\n","import React from \"react\";\r\nconst SocialactionSkeleton = () => {\r\n  return (\r\n    <div\r\n      class=\"scroll scroll-pull\"\r\n      data-scroll=\"true\"\r\n      data-wheel-propagation=\"true\"\r\n    >\r\n      {[1, 2, 3, 4].map(() => {\r\n        return (\r\n          <div class=\"d-flex align-items-center p-2 border rounded mb-3\">\r\n            <div class=\"d-flex align-items-center flex-grow-1\">\r\n              <div class=\"symbol symbol-45 symbol-light me-2 con_user_img\">\r\n                <span class=\"sk_img\"></span>\r\n              </div>\r\n              <div class=\"d-flex text-left flex-column conn_user_info w-25\">\r\n                <div class=\"sk_line sk_line_height_12 mb-2\"></div>\r\n                <div class=\"sk_line sk_line_50 sk_line_height_10 mt-2\"></div>\r\n              </div>\r\n            </div>\r\n            <div class=\"conn_status connnected text-right w-25\">\r\n              <div class=\"sk_line sk_line_height_12\"></div>\r\n              <div class=\"sk_line sk_line_80 sk_line_height_10\"></div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(SocialactionSkeleton);\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport AuthorInfo from \"../../analytics-new/content/components/authorInfo\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { showAddAccountAlertNew } from \"../../../../utils\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SocialactionSkeleton from \"./skeleton/socialactionSkeleton\";\r\n\r\n    const SocialAction = (props) => {\r\n\r\n        const { connectedAccounts, loader } = props\r\n\r\n        const dispatch = useDispatch()\r\n        const connectaccount = (item, reconnect) => {\r\n            let refresh = 0;\r\n            if(reconnect) refresh = 1;\r\n            //localStorage.setItem('refresh',refresh);\r\n            dispatch(showAddAccountAlertNew(item,\"dashboardConnect\"))\r\n        }\r\n\r\n    return (\r\n       \r\n     connectedAccounts && Object.keys(connectedAccounts).length || loader ? \r\n        <div className='col-md-6 mb-5'>\r\n        <div className='socialAccount-post-section h-100'>\r\n            <Card className='p-0 card-custom card-stretch'>\r\n\r\n            <Card.Header className='p-5'>\r\n                <div className='m-0 d-flex align-items-center justify-content-between card-title h5 w-100'>\r\n                    <h6 class=\"card-label font-weight-bolder m-0 \">Social Accounts</h6>\r\n                    { !loader ?\r\n                    <div className=''>\r\n                        <Link to={`/transactions#connectedAccounts`} className='text-secondary font-size-base'>View All</Link>\r\n                    </div> : null }\r\n                </div>\r\n            </Card.Header>\r\n            <Card.Body className=\"p-5\">            \r\n             { loader ? <SocialactionSkeleton/> : connectedAccounts.map((e,index)=>{\r\n\r\n                const getData = e.ConnectedAccounts\r\n\r\n                return(<div className='mb-3'>\r\n                     <a class=\"mb-4 last-child-mb-0 d-block text-secondary\" href=\"#\">\r\n                        <div class=\"p-5 border rounded\"> {  console.log(getData,'jsdlkflksjdjsdfjsdjjss')}\r\n                            <div class=\" d-flex align-items-center justify-content-between\">\r\n                                <AuthorInfo\r\n                                    isIcon={e.Network.icon}\r\n                                    picture={getData.profilePicture}\r\n                                    authorUsername={e.accountName}\r\n                                    authorName={getData.accountName}\r\n                                    link={\"\"}\r\n                                    networkId={getData.networkId}\r\n                                />\r\n                                <div className=''>\r\n                                    <h5>\r\n                                      {getData.api == 2 ?\r\n                                                <div className=\"conn_status connnected text-right\">\r\n                                                    <div className=\"conn_status_wrap font-size-lg m-0\">\r\n                                                        \r\n                                                        <p className=\"font-weight-bolder acc_status m-0\">\r\n                                                            <span className=\"conn_icon me-1 \">\r\n                                                                <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.14055e-06 8.00755C0.18814 7.32675 0.822793 6.55563 1.9199 6.78186C2.78723 7.02731 3.50083 7.78774 4.0703 9.02982C7.26277 4.66659 10.0078 1.66443 13.6325 0.538126C13.9557 0.463669 14.1259 0.481481 13.89 0.744398C10.1443 3.72251 6.7572 8.04156 4.12498 13.4117C4.06359 13.5371 3.84323 13.5277 3.77008 13.3911C2.96558 11.9547 2.39412 10.554 1.58944 9.11781C1.23074 8.37519 0.77644 7.84047 6.14055e-06 8.00755Z\" fill=\"url(#paint0_diamond_1883_3)\"/>\r\n                                                                    <defs>\r\n                                                                    <radialGradient id=\"paint0_diamond_1883_3\" cx=\"0\" cy=\"0\" r=\"1\" gradientUnits=\"userSpaceOnUse\" gradientTransform=\"translate(3.39231 4.44707) rotate(43.0921) scale(13.5428 24.6143)\">\r\n                                                                    <stop stop-color=\"#6AC259\"/>\r\n                                                                    <stop offset=\"0.5393\" stop-color=\"#6AC259\"/>\r\n                                                                    <stop offset=\"1\" stop-color=\"#6AC259\"/>\r\n                                                                    </radialGradient>\r\n                                                                    </defs>\r\n                                                                </svg>\r\n                                                            </span> Connected</p>\r\n                                                    </div>\r\n                                                    <small className=\"font-size-sm\">{e.Network.name} Profile</small>\r\n                                                </div>\r\n                                                : <div className=\"conn_status disconnnected text-right\">\r\n                                                    <div className=\"conn_status_wrap\">\r\n                                                    {![10,19,15,7,23,29].includes(e.Network.id) && <a onClick={()=>connectaccount(e.Network,true)} className=\"btn btn-link text-primary openGoogleReconnect p-0 font-size-lg\" data-action=\"reconnect\" data-src={``}>Reconnect</a>}\r\n                                                    </div>\r\n                                                    <small>{e.Network.name} Profile</small>\r\n                                                </div>\r\n                                            }\r\n                                    </h5>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n                )\r\n                })}\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    </div> : null\r\n    );\r\n };\r\n\r\n export default React.memo(SocialAction)"],"names":["AuthorInfo","props","imageError","setImageError","useState","undefined","_jsxs","onClick","redirectTo","id","username","link","includes","redirectLink","manageSpace","window","open","URL","hostname","networkId","authorUsername","className","topperfoming","children","_jsx","getFirstLetterOfString","authorName","onError","src","picture","width","height","isIcon","nIcon","NetworkIcon","icon","class","date","_Fragment","moment","Date","fromNow","React","xmlns","viewBox","d","fill","transform","isDashboard","size","SocialactionSkeleton","map","SocialAction","connectedAccounts","loader","dispatch","useDispatch","Object","keys","length","Card","Header","Link","to","Body","e","index","getData","ConnectedAccounts","href","console","log","Network","profilePicture","accountName","api","cx","cy","r","gradientUnits","gradientTransform","offset","name","connectaccount","item","showAddAccountAlertNew"],"sourceRoot":""}