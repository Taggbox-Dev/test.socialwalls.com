{"version":3,"file":"static/js/7092.7c5d342b.chunk.js","mappings":"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","sources":["app/Display/analytics-new/content/components/topAiTags.js","app/Display/analytics-new/layout/common/filterModeration.js","app/Display/analytics-new/layout/common/noData.js","app/Display/analytics-new/layout/common/sectionHeading.js","app/Display/analytics-new/layout/skeleton/assetsbySkeleton.js"],"sourcesContent":["  import { Card, CardBody } from \"react-bootstrap\";\n  import { hideLangFilter, kFormatter } from \"../../../../../utils\";\n  import React, { useEffect, useState } from \"react\";\n  import AssetsbySkeleton from \"../../layout/skeleton/assetsbySkeleton\";\n  import NoData from \"../../layout/common/noData\";\n  import FilterModeration from \"../../layout/common/filterModeration\";\n  import SectionHeading from \"../../layout/common/sectionHeading\";\n\nconst TopAiTags = (props) => {\n\n  const { topaiTags, top_ai_loader, selectedWallFeed, dateFilter } = props\n  const [gettagList, setgettagList] = useState([])\n\n  const tagUpdate = () => {\n\n    const feedList = selectedWallFeed && Object.keys(selectedWallFeed).length > 0 ? selectedWallFeed.map(item => item.id) : [];\n\n    const tagList = selectedWallFeed && Object.keys(topaiTags).length > 0 ? topaiTags.map(item => item.feedId) : [];\n    const tagListData = [...new Map(tagList.map(item => [item, item])).values()].join(\", \");\n\n    let getTags = topaiTags;\n    if (getTags && getTags.length > 0) {\n      getTags = getTags.filter((lang) => {\n        if (feedList.length) {\n          if (hideLangFilter(feedList, tagListData, 1)) return lang;\n        } else {\n          return lang;\n        }\n      });\n\n      getTags.splice(6)\n      setgettagList(getTags)\n    }\n  }\n\n\n  useEffect(() => {\n    topaiTags && selectedWallFeed && Object.keys(topaiTags).length && tagUpdate()\n  }, []);\n\n\n  return (\n    <Card className=\"sw-card-custom gutter-b mb-5 card-shadow\">\n      <SectionHeading icon={'ai'} section={2} title={'Top AI Tags'} />\n      <CardBody className=\"p-5\">\n\n        {top_ai_loader ? <AssetsbySkeleton /> : gettagList && Object.keys(gettagList).length ?\n          gettagList.map((data, index) => {\n            return (\n              <FilterModeration dateFilter={dateFilter} selectedWallFeed={selectedWallFeed} link={`tags=${data.tag}`}>\n                <div className=\"px-5 py-2 border rounded\">\n                  <div className=\"d-flex align-items-center justify-content-between\">\n                    <div className=\"d-flex align-items-center me-10\">\n                      <div className=\"text-dark font-weight-boldest me-2\">{index + 1}.</div>\n                      <div className=\"\">\n                        <p className=\"text-dark mb-0 font-weight-boldest overflow-hidden text-nowrap text-ellipsis author_name text-capitalize\">\n                          {data.tag}\n                        </p>\n                      </div>\n                    </div>\n                    <p className=\"count-tag border font-weight-boldest m-0 text-dark\">{data.count}</p>\n                  </div>\n                  <p className=\"count-tag border font-weight-boldest m-0 text-dark\">{kFormatter(data.count)}</p>\n                </div>\n              </FilterModeration>\n            )\n          }) :\n          <NoData />\n        }\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default React.memo(TopAiTags);\n","import moment from \"moment\";\nimport { Link } from \"react-router-dom\";\n\nconst FilterModeration = (props) => {\n\n  const { children, dateFilter, selectedWallFeed, link, isClass } = props  \n\n  return (\n    <Link className={`${isClass ? isClass : `mb-4 last-child-mb-0 d-block`}`} to={selectedWallFeed.length ? `/moderation/index/${localStorage.getItem('wallId')}?${link}/${moment(dateFilter.startDate).format(\"YYYY-MM-DD\")}/${moment(dateFilter.endDate).format(\"YYYY-MM-DD\")}` : `#`}>\n        {children}\n    </Link>\n  );\n}\n\nexport default FilterModeration\n","import React from \"react\";\nimport { baseUrl } from \"../../../../../utils\";\n\nconst GetData = () => {\n  return (\n    <div className=\"placeholder-image py-10 d-flex flex-column justify-content-center\">\n      <div className=\"mb-3 text-center\">\n        <img\n          className=\"img-fluid graph-bg\"\n          src={baseUrl(`dashboard/analytic/image-placeholder.svg`)}\n          width={\"80px\"}\n          height={\"80px\"}\n        />\n      </div>\n      <div className=\"\">\n        <h5 class=\"text-gray-dark text-center\">No Data Available</h5>\n      </div>\n    </div>\n  );\n};\n\nconst NoData = (props) => {\n\n  return props.status ? (\n    <tr>\n      <td colSpan={props.col}>\n        <GetData />\n      </td>\n    </tr>\n  ) : (\n    <GetData />\n  );\n};\n\nexport default React.memo(NoData);\n","import { Button, CardHeader, CardTitle } from \"react-bootstrap\";\nimport { baseUrl } from \"../../../../../utils\";\n\nconst SectionHeading = (props) => {\n\n  const { title, section, cardTitleCss, icon, iconFull, selectedWallFeed, moreData, total, handlePopup, headingMargin, isDashboard } = props\n\n  // && selectedWallFeed && Object.keys(selectedWallFeed).length\n\n  return (\n    <CardHeader className={`${section==1 ? 'p-0 border-0' : section==2 ? 'p-5' : section==3 ? 'p-0 pb-3' : 'px-5 pt-5 border-0 pb-0'}`}>\n      <CardTitle className={cardTitleCss ? cardTitleCss : `mb-0 d-flex align-items-center justify-content-between ${isDashboard ? isDashboard : \"\"}`}>\n        <h6 class={`card-label font-weight-bolder ${!headingMargin ? 'm-0' : ''} `}>\n         { icon ? <img src={baseUrl(`dashboard/analytic/${icon}.svg`)}  height={\"20px\"} width={\"20px\"} /> : null }\n         { iconFull ? <img src={iconFull}  height={\"20px\"} width={\"20px\"} />  : null }   {title}</h6>\n         { (total > 5) || moreData ? (\n          <Button\n            variant=\"link\"\n            className=\"p-0\"\n            onClick={() => handlePopup(true)}\n          >\n            See More\n          </Button>\n        ) : null\n        }\n      </CardTitle>\n    </CardHeader>\n  );\n};\n\nexport default SectionHeading;\n","    import React from \"react\";\n\n    const AssetsbySkeleton = () => {\n    return (\n        [1,2,3,4,5].map(()=>{\n            return(\n        <div class=\"d-flex p-6 border rounded mb-4\">\n        <div class=\"d-flex align-items-center m_grid_author w-100\">\n          <div class=\"sk_line sk_line_height_16 sk_line_10 m-0 me-3 rounded\"></div>\n          <div class=\"w-50\">\n              <h3 class=\"sk_line sk_line_height_16 sk_line_90 m-0\"></h3>\n          </div>\n        </div>\n        <div class=\"sk_line sk_line_10 sk_line_height_16 m-0\"></div>\n    </div>)})\n    );\n    };\n\n    export default React.memo(AssetsbySkeleton);\n"],"names":["TopAiTags","props","topaiTags","top_ai_loader","selectedWallFeed","dateFilter","gettagList","setgettagList","useState","useEffect","Object","keys","length","tagUpdate","feedList","map","item","id","tagList","feedId","tagListData","Map","values","join","getTags","filter","lang","hideLangFilter","splice","_jsxs","Card","className","children","_jsx","SectionHeading","icon","section","title","CardBody","AssetsbySkeleton","data","index","FilterModeration","link","tag","count","kFormatter","NoData","React","isClass","Link","to","localStorage","getItem","moment","startDate","format","endDate","GetData","src","baseUrl","width","height","class","status","colSpan","col","cardTitleCss","iconFull","moreData","total","handlePopup","headingMargin","isDashboard","CardHeader","CardTitle","Button","variant","onClick"],"sourceRoot":""}