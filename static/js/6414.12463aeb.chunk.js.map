{"version":3,"file":"static/js/6414.12463aeb.chunk.js","mappings":"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","sources":["app/Display/analytics-new/layout/common/graph/assetsTypeCountChart.js","app/Display/analytics-new/content/components/posttypeCount.js","app/Display/analytics-new/layout/common/filterModeration.js","app/Display/analytics-new/layout/common/sectionHeading.js","app/Display/analytics-new/layout/skeleton/imageSkeleton.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport { PREPEND_ZERO } from \"../../../../../../utils\";\r\nimport FilterModeration from \"../filterModeration\";\r\nclass AssetsTypeCountChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      series: [1, 1, 1],\r\n      options: {\r\n        dataLabels: {\r\n          enabled: false,\r\n        },\r\n        legend: {\r\n          show: false,\r\n        },\r\n        stroke: {\r\n          curve: \"smooth\",\r\n        },\r\n        colors: [\"#F8B861\", \"#546FED\", \"#EF45B1\"],\r\n        plotOptions: {\r\n          pie: {\r\n            donut: {\r\n              stroke: 0,\r\n              legend: {\r\n                show: false,\r\n              },\r\n              labels: {\r\n                show: true,\r\n                total: {\r\n                  label: \"Loading...\",\r\n                  showAlways: true,\r\n                  show: true,\r\n                },\r\n                value: {\r\n                  show: false,\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n        chart: {\r\n          type: \"donut\",\r\n          animations: {\r\n            enabled: true,\r\n            easing: \"easeinout\",\r\n            speed: 800,\r\n            animateGradually: {\r\n              enabled: true,\r\n              delay: 2000,\r\n            },\r\n            dynamicAnimation: {\r\n              enabled: true,\r\n              speed: 350,\r\n            },\r\n          },\r\n        },\r\n        labels: [  \"Video\",\"Image\",\"Text\"],\r\n      },\r\n      imagePost: 0,\r\n      videoPost: 0,\r\n      textPost: 0,\r\n      selectedCollection: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.onLoadAnalyticGraph();\r\n  }\r\n\r\n  onLoadAnalyticGraph = (data) => {\r\n    const { postTypeCount } = this.props;\r\n\r\n    const postCount = [];\r\n    const responseData = {\r\n      total_assets: {\r\n        video: postTypeCount[0].data[0],\r\n        image: postTypeCount[0].data[1],\r\n        text: postTypeCount[0].data[2],\r\n      },\r\n    };\r\n\r\n\r\n    Object.keys(responseData.total_assets).map((item) => {\r\n      postCount.push(responseData.total_assets[item]);\r\n      this.setState({\r\n        videoPost: responseData.total_assets[\"video\"],\r\n        imagePost: responseData.total_assets[\"image\"],\r\n        textPost: responseData.total_assets[\"text\"],\r\n      });\r\n    });\r\n\r\n    this.setState({\r\n      series: postCount,\r\n      options: {\r\n        plotOptions: {\r\n          pie: {\r\n            donut: {\r\n              labels: {\r\n                show: true,\r\n                total: {\r\n                  label: \"Total Post\",\r\n                  showAlways: true,\r\n                  show: true,\r\n                },\r\n                value: {\r\n                  show: true,\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { options, series, imagePost, textPost, videoPost } = this.state;\r\n    const { dateFilter, selectedWallFeed } = this.props\r\n \r\n    return (\r\n      <>\r\n        <ReactApexChart\r\n          options={options}\r\n          series={series}\r\n          type=\"donut\"\r\n          className=\"assetsType w-100 m-auto\"\r\n          style={{ maxWidth: 340 }}\r\n        />\r\n        <div\r\n          className=\"count-box-main d-flex justify-content-center w-100 m-auto mt-4\">\r\n         { imagePost ? \r\n        <FilterModeration isClass={'count-box-card'} dateFilter={dateFilter} selectedWallFeed={selectedWallFeed} link={`media=With Image`}>\r\n          <div>\r\n            <div\r\n              className=\"count-box blue text-center\"\r\n              style={{ borderTop: \"6px solid #546FED\" }}\r\n            >\r\n              <p className=\"fs-6 fw-bold mb-2 text-dark\">Images</p>\r\n              <span className=\"text-gray-800 fw-bolder text-dark fs-4\">\r\n                {PREPEND_ZERO(imagePost)}\r\n              </span>\r\n            </div>\r\n          </div></FilterModeration> : null }\r\n\r\n          { videoPost ?   \r\n\r\n        <FilterModeration isClass={'count-box-card'} dateFilter={dateFilter} selectedWallFeed={selectedWallFeed} link={`media=With Video`}> \r\n          <div>\r\n            <div\r\n              className=\"count-box yellow text-center\"\r\n              style={{ borderTop: \"6px solid #F8B861\" }}\r\n            >\r\n              <p className=\"fs-6 fw-bold mb-2 text-dark\">Videos</p>\r\n              <span className=\"text-gray-800 text-dark fw-bolder fs-4\">\r\n                {PREPEND_ZERO(videoPost)}\r\n              </span>\r\n            </div>\r\n          </div></FilterModeration> : null }\r\n\r\n        { textPost ?   \r\n         <FilterModeration isClass={'count-box-card'} dateFilter={dateFilter} selectedWallFeed={selectedWallFeed} link={`media=Text Only`}> \r\n          <div>\r\n            <div\r\n              className=\"count-box pink text-center text-dark\"\r\n              style={{ borderTop: \"6px solid #EF45B1\" }}\r\n            >\r\n              <p className=\"fs-6 fw-bold mb-2\">Texts</p>\r\n              <span className=\"text-gray-800 fw-bolder fs-4 text-dark\">\r\n                {PREPEND_ZERO(textPost)}\r\n              </span>\r\n            </div>\r\n          </div> </FilterModeration> : null }\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AssetsTypeCountChart;\r\n","  import { Card, CardBody } from \"react-bootstrap\";\r\n  import AssetsTypeCountChart from \"../../layout/common/graph/assetsTypeCountChart\";\r\n  import React from \"react\";\r\n  import ImageSkeleton from \"../../layout/skeleton/imageSkeleton\";\r\n  import SectionHeading from \"../../layout/common/sectionHeading\";\r\n\r\n  const PosttypeCount = (props) => {\r\n    const { postTypeCount, loader } = props;\r\n\r\n    return (\r\n      <Card className=\"sw-card-custom gutter-b card-shadow mb-5\">\r\n        <SectionHeading  section={2}  title={'Post Type Count'} />\r\n        <CardBody className=\"p-5\">\r\n          {loader ? (\r\n            <ImageSkeleton img={\"post-count\"} />\r\n          ) : postTypeCount && Object.keys(postTypeCount).length ? (\r\n            <AssetsTypeCountChart key={loader} {...props} />\r\n          ) : null}\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  export default React.memo(PosttypeCount);\r\n","import moment from \"moment\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst FilterModeration = (props) => {\r\n\r\n  const { children, dateFilter, selectedWallFeed, link, isClass } = props  \r\n\r\n  return (\r\n    <Link className={`${isClass ? isClass : `mb-4 last-child-mb-0 d-block`}`} to={selectedWallFeed.length ? `/moderation/index/${localStorage.getItem('wallId')}?${link}/${moment(dateFilter.startDate).format(\"YYYY-MM-DD\")}/${moment(dateFilter.endDate).format(\"YYYY-MM-DD\")}` : `#`}>\r\n        {children}\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default FilterModeration\r\n","import { Button, CardHeader, CardTitle } from \"react-bootstrap\";\r\nimport { baseUrl } from \"../../../../../utils\";\r\n\r\nconst SectionHeading = (props) => {\r\n\r\n  const { title, section, cardTitleCss, icon, iconFull, selectedWallFeed, moreData, total, handlePopup, headingMargin } = props\r\n\r\n  // && selectedWallFeed && Object.keys(selectedWallFeed).length\r\n\r\n  return (\r\n    <CardHeader className={`${section==1 ? 'p-0 border-0' : section==2 ? 'p-5' : section==3 ? 'p-0 pb-3' : 'px-5 pt-5 border-0 pb-0'}`}>\r\n      <CardTitle className={cardTitleCss ? cardTitleCss : `mb-0 d-flex align-items-center justify-content-between`}>\r\n        <h6 class={`card-label font-weight-bolder ${!headingMargin ? 'm-0' : ''} `}>\r\n         { icon ? <img src={baseUrl(`dashboard/analytic/${icon}.svg`)}  height={\"20px\"} width={\"20px\"} /> : null }\r\n         { iconFull ? <img src={iconFull}  height={\"20px\"} width={\"20px\"} />  : null }   {title}</h6>\r\n         { (total > 5) || moreData ? (\r\n          <Button\r\n            variant=\"link\"\r\n            className=\"p-0\"\r\n            onClick={() => handlePopup(true)}\r\n          >\r\n            See More\r\n          </Button>\r\n        ) : null}\r\n      </CardTitle>\r\n    </CardHeader>\r\n  );\r\n};\r\n\r\nexport default SectionHeading;\r\n","import React from \"react\";\r\nimport { baseUrl } from \"../../../../../utils\";\r\n\r\nconst ImageSkeleton = (props) => {\r\n  return (\r\n    <div className=\"py-1 text-center\">\r\n      <img className=\"img-fluid\" src={baseUrl(`dashboard/analytic/content-analytis-${props.img}.svg`)} width={\"100%\"} height={\"403px\"}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(ImageSkeleton)"],"names":["AssetsTypeCountChart","Component","constructor","props","super","onLoadAnalyticGraph","data","postTypeCount","this","postCount","responseData","total_assets","video","image","text","Object","keys","map","item","push","setState","videoPost","imagePost","textPost","series","options","plotOptions","pie","donut","labels","show","total","label","showAlways","value","state","dataLabels","enabled","legend","stroke","curve","colors","chart","type","animations","easing","speed","animateGradually","delay","dynamicAnimation","selectedCollection","componentDidMount","render","dateFilter","selectedWallFeed","_jsxs","_Fragment","children","_jsx","ReactApexChart","className","style","maxWidth","FilterModeration","isClass","link","borderTop","PREPEND_ZERO","PosttypeCount","loader","Card","SectionHeading","section","title","CardBody","ImageSkeleton","img","length","React","Link","to","localStorage","getItem","moment","startDate","format","endDate","cardTitleCss","icon","iconFull","moreData","handlePopup","headingMargin","CardHeader","CardTitle","class","src","baseUrl","height","width","Button","variant","onClick"],"sourceRoot":""}