{"version":3,"file":"static/js/992.397ded5a.chunk.js","mappings":"sLAIA,MAAMA,UAA4BC,EAAAA,UAChCC,WAAAA,CAAYC,GACVC,MAAMD,GAEN,MAAME,GAAIC,EAAAA,EAAAA,IAAoBH,EAAMI,MAEpCC,KAAKC,MAAQ,CACXC,OAAQ,CAAC,CACPH,KAAMF,EAAEM,SAEVC,QAAS,CACJC,OAAS,CAAC,WACVC,MAAO,CACNC,OAAQ,IACRC,KAAMb,EAAMa,KACZC,WAAY,CACVC,SAAS,EACTC,OAAQ,MACRC,iBAAkB,CAChBC,MAAO,MAGXC,QAAS,CACPC,MAAM,GAERC,KAAM,CACJN,SAAS,IAGfO,YAAa,CACTC,IAAK,CACHC,aAAc,EACdC,wBAAyB,MACzBC,YAAY,EACZC,UAAW,KAGfC,WAAY,CACVb,SAAS,GAEXc,OAAQ,CACNC,MAAO,UAEZC,OAAQ,CACHX,MAAM,EACNY,SAAU,MACVC,WAAY,CACVP,WAAY,GACZQ,SAAU,IAIhBC,YAAa,CACXC,OAAQ,CACN,CACEC,EAAInC,EAAEM,OAAON,EAAEoC,UACfC,EAAIrC,EAAEsC,UAAUtC,EAAEoC,UAClBG,OAAQ,CACNC,KAAM,GACNC,UAAW,UACXC,YAAa,OACbC,SAAU,EACVC,SAAU,EACVC,YAAa,EACbC,MAAO,SACPC,SAAU,iBAEZC,MAAO,CACLC,YAAa,UACbN,SAAU,GACVC,SAAU,GACVM,MAAO,CACLC,MAAO,UACPC,WAAY,cACZC,OAAQ,GAEVC,KAAMtD,EAAEsC,UAAUtC,EAAEoC,UAAYpC,EAAEK,OAAOL,EAAEoC,aAGjDmB,MAAO,CAAC,CACNpB,EAAGnC,EAAEM,OAAON,EAAEoC,UACda,YAAa,OACbD,MAAO,CACLC,YAAa,OACbC,MAAO,CACLC,MAAO,OACPC,WAAY,YAKpB1B,WAAY,CACVb,SAAS,GAEX0C,MAAO,CACLC,WAAYxD,EAAEsC,WAEhBmB,KAAM,CACJF,MAAO,CACLG,MAAO,CACLxC,MAAM,KAIZyC,MAAO,CACLC,UAAU,EACVC,UAAW,CACT3C,MAAM,KAKhB,CAEA4C,MAAAA,GACE,OACEC,EAAAA,EAAAA,KAAA,OAAAC,UACEC,EAAAA,EAAAA,MAAA,OAAKC,GAAG,QAAOF,SAAA,EACVD,EAAAA,EAAAA,KAACI,EAAAA,EAAc,CAAC5D,QAASJ,KAAKC,MAAMG,QAASF,OAAQF,KAAKC,MAAMC,OAAQM,KAAK,MAAMD,OAAQ,OAC3FqD,EAAAA,EAAAA,KAAA,SAAAC,SACJ,6HAUP,EAGF,S","sources":["app/Display/analytics-new/layout/common/assetsTypeAreaChart.js"],"sourcesContent":["import React from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport { reArrangeSeriesData } from \"../../../../../utils\";\r\n\r\nclass ChartDataBasedOnUrl extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const e = reArrangeSeriesData(props.data)\r\n\r\n    this.state = {\r\n      series: [{\r\n        data: e.labels\r\n      }],\r\n      options: {\r\n           colors:  ['#546FED'],\r\n           chart: {\r\n            height: 350,\r\n            type: props.type,\r\n            animations: {\r\n              enabled: true,\r\n              easing: 'bar',\r\n              dynamicAnimation: {\r\n                speed: 1000\r\n              }\r\n            },\r\n            toolbar: {\r\n              show: false\r\n            },\r\n            zoom: {\r\n              enabled: false\r\n            }\r\n          },\r\n        plotOptions: {\r\n            bar: {\r\n              borderRadius: 8,\r\n              borderRadiusApplication: 'end',\r\n              horizontal: true,\r\n              barHeight: 18,  // Controls the height of the bar\r\n            } \r\n          },\r\n          dataLabels: {\r\n            enabled: false,\r\n          },\r\n          stroke: {\r\n            curve: 'smooth'\r\n          },\r\n       legend: {\r\n            show: true,\r\n            position: 'top',\r\n            itemMargin: {\r\n              horizontal: 20,\r\n              vertical: 0\r\n            },\r\n          },\r\n          \r\n        annotations: {\r\n          points: [\r\n            {\r\n              x:  e.labels[e.maxIndex], // Dynamically set based on last category\r\n              y:  e.newSeries[e.maxIndex], // Last data point\r\n              marker: {\r\n                size: 10, // Highlight the last marker\r\n                fillColor: \"#546FED\",\r\n                strokeColor: \"#fff\",\r\n                offsetY: -6, // Move the label higher to avoid overlap\r\n                offsetX: -8, // Move the label higher to avoid overlap\r\n                strokeWidth: 2,\r\n                shape: \"circle\",\r\n                cssClass: \"screen-marker\", // Apply custom CSS class for blinking effect\r\n              },\r\n              label: {\r\n                borderColor: \"#546FED\",\r\n                offsetY: -10, // Move the label higher to avoid overlap\r\n                offsetX: -10, // Move the label higher to avoid overlap\r\n                style: {\r\n                  color: \"#546FED\",\r\n                  background: \"transparent\", // Make label background transparent\r\n                  zIndex: 0, // Lower z-index to ensure marker is on top\r\n                },\r\n                text: e.newSeries[e.maxIndex] + e.series[e.maxIndex] \r\n               },\r\n            }],\r\n          xaxis: [{\r\n            x: e.labels[e.maxIndex],\r\n            borderColor: '#000',\r\n            label: {\r\n              borderColor: '#fff',\r\n              style: {\r\n                color: '#000',\r\n                background: '#fff',\r\n              },\r\n            }\r\n          }],\r\n        },\r\n        dataLabels: {\r\n          enabled: false\r\n        },\r\n        xaxis: {\r\n          categories: e.newSeries,\r\n        },\r\n        grid: {\r\n          xaxis: {\r\n            lines: {\r\n              show: true\r\n            }\r\n          }\r\n        },\r\n        yaxis: {\r\n          reversed: false,\r\n          axisTicks: {\r\n            show: true\r\n          }\r\n        }\r\n      },\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div id=\"chart\">\r\n             <ReactApexChart options={this.state.options} series={this.state.series} type=\"bar\" height={350} />\r\n             <style>\r\n        {`\r\n          .custom-html-label {\r\n            color: #FF4560;\r\n            font-weight: bold;\r\n          }\r\n        `}\r\n      </style>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChartDataBasedOnUrl"],"names":["ChartDataBasedOnUrl","React","constructor","props","super","e","reArrangeSeriesData","data","this","state","series","labels","options","colors","chart","height","type","animations","enabled","easing","dynamicAnimation","speed","toolbar","show","zoom","plotOptions","bar","borderRadius","borderRadiusApplication","horizontal","barHeight","dataLabels","stroke","curve","legend","position","itemMargin","vertical","annotations","points","x","maxIndex","y","newSeries","marker","size","fillColor","strokeColor","offsetY","offsetX","strokeWidth","shape","cssClass","label","borderColor","style","color","background","zIndex","text","xaxis","categories","grid","lines","yaxis","reversed","axisTicks","render","_jsx","children","_jsxs","id","ReactApexChart"],"sourceRoot":""}