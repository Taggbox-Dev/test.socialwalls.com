{"version":3,"file":"static/js/5910.c1310957.chunk.js","mappings":"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","sources":["app/Display/analytics-new/layout/skeleton/TopPerfomingSkeleton.js","app/Display/analytics-new/components/activityHub/PerfomingPost.js","app/Display/analytics-new/components/content/authorInfo.js","app/Display/analytics-new/layout/common/NoData.js","app/Display/analytics-new/layout/common/SeeMoreModal.js","app/Display/analytics-new/layout/common/connectButton.js","app/Display/analytics-new/layout/common/postMedia.js","app/Display/analytics-new/layout/popup/postdetailPopup.js"],"sourcesContent":["    import React from \"react\";\r\n\r\n    const List = () => {\r\n    return (\r\n        <div class=\"d-flex align-items-center justify-content-between py-2\">\r\n        <p class=\"sk_line sk_line_height_10 sk_line_40 m-0\"></p>\r\n        <h6 class=\"sk_line sk_line_height_16 sk_line_20 m-0\"></h6>\r\n        </div>\r\n    );\r\n    };\r\n\r\n    const TopPerfomingSkeleton = () => {\r\n    return [1, 2, 3, 4, 5].map(() => {\r\n        return (\r\n        <div className=\"top_posts top_posts_new\">\r\n            <div className=\"card-shadow rounded mb-5\">\r\n            <div className=\"m_card_cont\">\r\n                <div className=\"sk_list_view\">\r\n                <div className=\"sk_line sk_img_thumb rounded w-100 m-0 me-5\"></div>\r\n                </div>\r\n                <div className=\"text-center position-relative m_user_info\">\r\n                <div className=\"m_grid_author d-flex justify-content-center mb-3\">\r\n                    <div class=\"sk_line sk_img m-0 me-3\"></div>\r\n                </div>\r\n                <div className=\"w-100 d-flex flex-column align-items-center\">\r\n                    <h3 class=\"sk_line sk_line_height_16 sk_line_70 m-0 mb-3\"></h3>\r\n                    <p class=\"sk_line sk_line_height_10 sk_line_40 m-0\"></p>\r\n                </div>\r\n                <div className=\"post_score mt-4\">\r\n                    <List />\r\n                    <List />\r\n                    <List />\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    });\r\n    };\r\n\r\n    export default React.memo(TopPerfomingSkeleton);\r\n","    import React, { Suspense, useState } from \"react\";\r\n    import { Button, Card, CardBody, CardHeader, CardTitle } from \"react-bootstrap\";\r\n    import TopPerfomingSkeleton from \"../../layout/skeleton/TopPerfomingSkeleton\";\r\n    import NoData from \"../../layout/common/NoData\";\r\n    import { SENTIMENTS_CALC } from \"../../../../../utils\";\r\n    import SeeMoreModal from \"../../layout/common/SeeMoreModal\";\r\n    import AuthorInfo from \"../content/authorInfo\";\r\n    import PostMedia from \"../../layout/common/postMedia\";\r\n    import { getPrfomingPostMore, getreactedpostsMore } from \"../../../../../actions/analyticsNew\";\r\n    import PostdetailPopup from \"../../layout/popup/postdetailPopup\";\r\n\r\n    const PostPopup = React.lazy(() => import(\"../../layout/popup/postPopup\"));\r\n\r\n    const PerfomingPost = (props) => {\r\n    const { type, title, postData, loader } = props;\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [showPost, setshowPost] = useState(false);\r\n    const [postInfo, setpostInfo] = useState(false);\r\n\r\n\r\n    const handlePopup = (event) => {\r\n        setShow(event);\r\n    };\r\n\r\n    \r\n    const handlePostpopup = (event) => {\r\n        setshowPost(event);\r\n      };\r\n\r\n    return (\r\n        <div className=\"mb-5\">\r\n        <Card className=\"sw-card-custom gutter-b card-shadow\">\r\n            <CardHeader className=\"p-5\">\r\n            <CardTitle className=\"mb-0 d-flex align-items-center justify-content-between\">\r\n                <h6 class=\"card-label font-weight-bolder m-0\">{title}</h6>\r\n                <Button\r\n                variant=\"link\"\r\n                className=\"p-0\"\r\n                onClick={() => handlePopup(true)}\r\n                >\r\n                See More\r\n                </Button>\r\n            </CardTitle>\r\n            </CardHeader>\r\n            <CardBody className=\"p-5\">\r\n            <div className=\"top_posts_row row\">\r\n                {loader ? (\r\n                <TopPerfomingSkeleton />\r\n                ) : postData && Object.keys(postData).length ? (\r\n                postData.map((e) => {\r\n                    return (\r\n                    <div className=\"top_posts top_posts_new\">\r\n                        <div className=\"card-shadow rounded mb-5\">\r\n                        <div className=\"m_card_cont\" onClick={() => { setpostInfo(e); handlePostpopup(true) }}>\r\n                            <div className=\"post_img1 cursor-pointer\">\r\n                            <PostMedia\r\n                                postFile={e.image}\r\n                                postId={e.id}\r\n                                className={\"img-fluid rounded-1\"}\r\n                            />\r\n                            </div>\r\n                            <div className=\"text-center position-relative m_user_info\">\r\n                            <div className=\"top-perfom-post m_grid_author d-flex justify-content-center mb-3\">\r\n                                <AuthorInfo\r\n                                isIcon={e.network.icon}\r\n                                picture={e.authorImage}\r\n                                username={e.authorName}\r\n                                date={e.created}\r\n                                />\r\n                             </div>\r\n                            </div>\r\n\r\n                            <div class=\"post_score mt-4\">\r\n                            {type == 1 ? (\r\n                                <div class=\"d-flex align-items-center justify-content-between py-2\">\r\n                                <span class=\"text-dark font-weight-bold font-size-md\">\r\n                                    Impressions\r\n                                </span>\r\n                                <p class=\"text-dark font-weight-boldest mb-0 d-flex\">\r\n                                    {\" \"}\r\n                                    {e.postPerformance ? e.postPerformance : 0}\r\n                                    <span class=\"score-count text-danger d-flex align-items-center ms-3\">\r\n                                    <svg\r\n                                        class=\"me-1\"\r\n                                        width=\"18\"\r\n                                        height=\"16\"\r\n                                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                                        viewBox=\"0 0 24 24\"\r\n                                        fill=\"currentColor\"\r\n                                    >\r\n                                        <path d=\"M12 16L6 10H18L12 16Z\"></path>\r\n                                    </svg>{\" \"}\r\n                                    02%\r\n                                    </span>\r\n                                </p>\r\n                                </div>\r\n                            ) : null}\r\n\r\n                            <div class=\"d-flex align-items-center justify-content-between py-2\">\r\n                                <span class=\"text-dark font-weight-bold font-size-md\">\r\n                                Post Clicks\r\n                                </span>\r\n                                <p class=\"text-dark font-weight-boldest mb-0 d-flex\">\r\n                                {e.postClicks}{\" \"}\r\n                                <span class=\"score-count text-success d-flex align-items-center ms-3\">\r\n                                    <svg\r\n                                    class=\"me-1\"\r\n                                    width=\"18\"\r\n                                    height=\"16\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    viewBox=\"0 0 24 24\"\r\n                                    fill=\"currentColor\"\r\n                                    >\r\n                                    <path d=\"M12 8L18 14H6L12 8Z\"></path>\r\n                                    </svg>{\" \"}\r\n                                    02%\r\n                                </span>\r\n                                </p>\r\n                            </div>\r\n                            <div class=\"d-flex align-items-center justify-content-between pt-2\">\r\n                                <span class=\"text-dark font-weight-bold font-size-md\">\r\n                                Sentiment\r\n                                </span>\r\n                                <div className=\"d-flex post-status bg-position\">\r\n                                <img\r\n                                    className=\"img-fluid me-2\"\r\n                                    src={`https://cloud.tagbox.com/react-app/media/icons/emoji/emoji${\r\n                                    SENTIMENTS_CALC(e.sentiment).item\r\n                                    }.svg`}\r\n                                    width={\"16px\"}\r\n                                    height={\"16px\"}\r\n                                />\r\n                                {SENTIMENTS_CALC(e.sentiment).label}\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    );\r\n                })\r\n                ) : (\r\n                <NoData />\r\n                )}\r\n            </div>\r\n            </CardBody>\r\n        </Card>\r\n\r\n        <SeeMoreModal\r\n            size={\"lg\"}\r\n            showHide={show}\r\n            handlePopup={handlePopup}\r\n            title={\"Top Perfoming Posts\"}\r\n        >\r\n            <Suspense fallback={<></>}>\r\n            <PostPopup moreData={props.type==1 ? getPrfomingPostMore : getreactedpostsMore} {...props} />\r\n            </Suspense>\r\n        </SeeMoreModal>\r\n\r\n\r\n        <SeeMoreModal\r\n            size={\"lg\"}\r\n            showHide={showPost}\r\n            handlePopup={handlePostpopup}\r\n            title={ `General Information`}\r\n            >\r\n            <Suspense fallback={<></>}>\r\n                <PostdetailPopup  {...postInfo} />\r\n            </Suspense>\r\n            </SeeMoreModal>\r\n        </div>\r\n    );\r\n    };\r\n\r\n    export default React.memo(PerfomingPost);\r\n","import React, { useState } from \"react\";\r\nimport { getFirstLetterOfString, manageSpace } from \"../../../../../utils\";\r\nimport moment from \"moment\";\r\n\r\nconst AuthorInfo = (props) => {\r\n  const [imageError, setImageError] = useState(true);\r\n\r\n  return (\r\n    <div className=\"d-flex align-items-center w-50\">\r\n      <div className=\"position-relative\">\r\n        <div className=\"symbol symbol-35 symbol-light me-3 con_user_img cursor-pointer rounded-circle overflow-hidden\">\r\n          {imageError ? (\r\n            <div className=\"symbol-image\">{getFirstLetterOfString(props.username)}</div>\r\n          ) : (\r\n            <img\r\n              onError={() => setImageError(true)}\r\n              src={props.picture}\r\n              className=\"img-fluid\"\r\n              width={\"20px\"}\r\n              height={\"20px\"}\r\n            />\r\n          )}\r\n        </div>\r\n        {props.isIcon ? (\r\n          <div className=\"m_social_icon_new card-shadow position-absolute bg-white rounded-circle d-flex align-items-center justify-content-center\">\r\n            <i className={`fab ${props.isIcon}`}></i>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n      <div class=\"d-flex text-left flex-column conn_user_info cursor-pointer\">\r\n        <p class=\"text-dark mb-0 font-weight-boldest overflow-hidden text-nowrap text-ellipsis author_name text-capitalize\">\r\n          {props.username}\r\n        </p>\r\n        <p class=\"m-0\">\r\n          <small class=\"text-muted overflow-hidden text-nowrap text-ellipsis post_count me-2 \">\r\n            {props.username ? `@${manageSpace(props.username)}` : null}\r\n          </small>\r\n\r\n         { props.date ? \r\n          <small class=\"text-muted overflow-hidden text-nowrap text-ellipsis followers_count \">\r\n            {moment(new Date(props.date * 1000)).fromNow()}\r\n          </small> : null }\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(AuthorInfo);\r\n","import React from \"react\";\r\nimport { baseUrl } from \"../../../../../utils\";\r\n\r\nconst GetData = () => {\r\n  return (\r\n    <div className=\"placeholder-image py-10 d-flex flex-column justify-content-center\">\r\n      <div className=\"mb-3 text-center\">\r\n        <img\r\n          className=\"img-fluid graph-bg\"\r\n          src={baseUrl(`dashboard/analytic/image-placeholder.svg`)}\r\n          width={\"80px\"}\r\n          height={\"80px\"}\r\n        />\r\n      </div>\r\n      <div className=\"\">\r\n        <h5 class=\"text-gray-dark text-center\">No Data Available</h5>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NoData = (props) => {\r\n\r\n  return props.status ? (\r\n    <tr>\r\n      <td colSpan={props.col}>\r\n        <GetData />\r\n      </td>\r\n    </tr>\r\n  ) : (\r\n    <GetData />\r\n  );\r\n};\r\n\r\nexport default React.memo(NoData);\r\n","import React from \"react\";\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ButtonToolbar,\r\n    Col,\r\n    Container,\r\n    Row\r\n} from \"react-bootstrap\";\r\n\r\n\r\nexport default class SeeMoreModal extends React.Component {\r\n    render() {\r\n        const { showHide, handlePopup, title, children, size } = this.props;\r\n        return (\r\n            <Modal\r\n                show={showHide}\r\n                onHide={()=>handlePopup(false)}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                size={size}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"p-2\">\r\n                    <div className=\"more_container\">\r\n                        {children}\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","    const ConnectButton = (props) => {\r\n\r\n    return (\r\n        <div className=\"conn_status_wrap\">\r\n        <button\r\n            onClick={() => window.open(props.link)}\r\n            type=\"button\"\r\n            className=\"btn btn-primary btn-min-w btn-sm rounded\"\r\n        >\r\n            <span className=\"position-relative\">\r\n            <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"22.213\"\r\n                height=\"18\"\r\n                viewBox=\"0 0 22.213 18\"\r\n                className=\"h-75 align-self-end w-20 me-1\"\r\n            >\r\n                <g id=\"noun-talk-2902544\" transform=\"translate(-98.007 -75.786)\">\r\n                <path\r\n                    id=\"Path_6701\"\r\n                    data-name=\"Path 6701\"\r\n                    d=\"M103.686,84.417a1.084,1.084,0,1,1-.317-.766A1.084,1.084,0,0,1,103.686,84.417Zm2.9-1.084h0a1.084,1.084,0,1,0,.766.317,1.084,1.084,0,0,0-.766-.317Zm3.979,0h0a1.084,1.084,0,1,0,.766.317,1.084,1.084,0,0,0-.766-.317Zm9.659-5.711v8.172a1.839,1.839,0,0,1-1.616,1.823l.625,2.7a.617.617,0,0,1-1,.608l-3.07-2.625v.2a1.838,1.838,0,0,1-1.836,1.836h-9.463L100,93.638a.617.617,0,0,1-1-.608l.625-2.7A1.838,1.838,0,0,1,98.007,88.5V80.331a1.838,1.838,0,0,1,1.836-1.836h3.226v-.873a1.838,1.838,0,0,1,1.836-1.836h13.478a1.838,1.838,0,0,1,1.836,1.836Zm-6.3,2.709a.6.6,0,0,0-.6-.6H99.843a.6.6,0,0,0-.6.6V88.5a.6.6,0,0,0,.6.6h.552a.617.617,0,0,1,.6.756l-.375,1.621,2.607-2.229a.618.618,0,0,1,.4-.148h9.691a.6.6,0,0,0,.6-.6Zm5.063-2.709a.6.6,0,0,0-.6-.6H104.906a.6.6,0,0,0-.6.6V78.5h9.017a1.838,1.838,0,0,1,1.836,1.836v6.35l2.448,2.093-.375-1.621a.617.617,0,0,1,.6-.756h.553a.6.6,0,0,0,.6-.6Z\"\r\n                    fill=\"#ffffff\"\r\n                ></path>\r\n                </g>\r\n            </svg> \r\n            Connect \r\n            </span>\r\n        </button>\r\n        </div>\r\n    );\r\n    };\r\n\r\n    export default ConnectButton","import React from \"react\";\r\nimport { NoCameraImgPost } from \"../../../../../actions/api\";\r\n\r\nconst PostMedia = (props) => {\r\n  return (\r\n    <img\r\n      id={`post_${props.postId}`}\r\n      onError={(e) => (e.target.src = NoCameraImgPost)}\r\n      src={props.postFile}\r\n      className={props.className}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(PostMedia);\r\n","import React, { Component } from \"react\";\r\nimport ConnectButton from \"../common/connectButton\";\r\nimport AuthorInfo from \"../../components/content/authorInfo\";\r\n\r\nclass PostdetailPopup extends Component {\r\n  render() {\r\n    const {\r\n      content,\r\n      link,\r\n      created,\r\n      authorUsername,\r\n      authorImage,\r\n      network,\r\n      image,\r\n      sentiment,\r\n      followerCount,\r\n      feedName,\r\n      tags,\r\n    } = this.props;\r\n\r\n    console.log(this.props, \"dsfsdfsdfsddsfsdf\");\r\n\r\n    return (\r\n      <div class=\"influential_contributors_custom_modal px-5\">\r\n        <div className=\"influential-data-list sw_theme \">\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            <div className=\"d-flex align-items-center\">\r\n              <AuthorInfo\r\n                picture={authorImage}\r\n                username={authorUsername}\r\n                isIcon={network.icon}\r\n                date={created}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <img src={image} className=\"img-fluid\" />\r\n\r\n          {content}\r\n\r\n          <div className=\"conn_status connnected\">\r\n            <ConnectButton link={link} />\r\n          </div>\r\n\r\n          {tags && Object.keys(tags).length ? (\r\n            <ul>\r\n              {tags.map((data) => {\r\n                return <li>{data}</li>;\r\n              })}\r\n            </ul>\r\n          ) : null}\r\n\r\n          {sentiment}\r\n          {followerCount}\r\n          {feedName}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostdetailPopup;\r\n"],"names":["List","_jsxs","class","children","_jsx","TopPerfomingSkeleton","map","className","React","PostPopup","PerfomingPost","props","type","title","postData","loader","show","setShow","useState","showPost","setshowPost","postInfo","setpostInfo","handlePopup","event","handlePostpopup","Card","CardHeader","CardTitle","Button","variant","onClick","CardBody","Object","keys","length","e","PostMedia","postFile","image","postId","id","AuthorInfo","isIcon","network","icon","picture","authorImage","username","authorName","date","created","postPerformance","width","height","xmlns","viewBox","fill","d","postClicks","src","SENTIMENTS_CALC","sentiment","item","label","NoData","SeeMoreModal","size","showHide","Suspense","fallback","_Fragment","moreData","getPrfomingPostMore","getreactedpostsMore","PostdetailPopup","imageError","setImageError","getFirstLetterOfString","onError","manageSpace","moment","Date","fromNow","GetData","baseUrl","status","colSpan","col","render","this","Modal","onHide","backdrop","keyboard","centered","Header","closeButton","Title","Body","window","open","link","transform","target","NoCameraImgPost","Component","content","authorUsername","followerCount","feedName","tags","console","log","ConnectButton","data"],"sourceRoot":""}