{"version":3,"file":"static/js/3889.7cbe7446.chunk.js","mappings":"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","sources":["app/Display/analytics-new/content/components/assetsLanguage.js","app/Display/analytics-new/layout/common/filterModeration.js","app/Display/analytics-new/layout/common/noData.js","app/Display/analytics-new/layout/common/sectionHeading.js","app/Display/analytics-new/layout/skeleton/assetsbySkeleton.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Card, CardBody } from \"react-bootstrap\";\nimport { getFlagCode, hideLangFilter, kFormatter } from \"../../../../../utils\";\nimport AssetsbySkeleton from \"../../layout/skeleton/assetsbySkeleton\";\nimport NoData from \"../../layout/common/noData\";\nimport FilterModeration from \"../../layout/common/filterModeration\";\nimport SectionHeading from \"../../layout/common/sectionHeading\";\n\nconst AssetsLanguage = (props) => {\n\n  const { getFlags, loader, selectedWallFeed, postbyLanguage, dateFilter } = props;\n\n  const [getLanguage, setgetLanguage] = useState()\n\n  const languageTags = () => {\n\n    const feedList = selectedWallFeed && Object.keys(selectedWallFeed).length > 0 ? selectedWallFeed.map(item => item.id) : [];\n    let langs = postbyLanguage;\n    let result = [];\n\n    if (langs && langs.length > 0) {\n      langs = langs.filter((lang) => {\n        if (feedList.length) {\n          if (hideLangFilter(feedList, lang.feedId, 1)) return lang;\n        } else {\n          return lang;\n        }\n      });\n      langs.splice(6).sort((a, b) => b.count - a.count).forEach(lang => {\n        if (lang.language != \"\") {\n          result.push(lang.language);\n        }\n      });\n\n      setgetLanguage(langs)\n    }\n  }\n\n\n  useEffect(() => {\n    selectedWallFeed && languageTags()\n  }, []);\n\n\n  return (\n    <Card className=\"sw-card-custom gutter-b card-shadow mb-5\">\n      <SectionHeading section={2} title={'Top Languages'} />\n      <CardBody className=\"p-5\">\n        <div className=\"mx-height-345\">\n          {loader ? <AssetsbySkeleton /> : getLanguage && Object.keys(getLanguage).length\n            ? getLanguage.map((data, index) => {\n              return (\n                <FilterModeration dateFilter={dateFilter} selectedWallFeed={selectedWallFeed} link={`language=${data.language}`}>\n                  <div className=\"px-5 py-2 border rounded\">\n                    <div className=\"d-flex align-items-center justify-content-between\">\n                      <div className=\"d-flex align-items-center me-10\">\n                        <div className=\"rounded me-3 d-flex\">\n                          <div class={`iti-flag ${getFlagCode(data.language, getFlags)}`}></div>\n                        </div>\n                        <div className=\"\">\n                          <p className=\"text-dark mb-0 font-weight-boldest overflow-hidden text-nowrap text-ellipsis author_name text-capitalize\">\n                            {data.language}\n                          </p>\n                        </div>\n                      </div>\n                      <p className=\"text-dark count-tag border font-weight-boldest m-0\">\n                        {data.count}\n                      </p>\n                    </div>\n                  </div>\n                </FilterModeration>\n              );\n            })\n            : <NoData />}\n        </div>\n\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default React.memo(AssetsLanguage);\n","import moment from \"moment\";\nimport { Link } from \"react-router-dom\";\n\nconst FilterModeration = (props) => {\n\n  const { children, dateFilter, selectedWallFeed, link, isClass } = props  \n\n  return (\n    <Link className={`${isClass ? isClass : `mb-4 last-child-mb-0 d-block`}`} to={selectedWallFeed.length ? `/moderation/index/${localStorage.getItem('wallId')}?${link}/${moment(dateFilter.startDate).format(\"YYYY-MM-DD\")}/${moment(dateFilter.endDate).format(\"YYYY-MM-DD\")}` : `#`}>\n        {children}\n    </Link>\n  );\n}\n\nexport default FilterModeration\n","import React from \"react\";\nimport { baseUrl } from \"../../../../../utils\";\n\nconst GetData = () => {\n  return (\n    <div className=\"placeholder-image py-10 d-flex flex-column justify-content-center\">\n      <div className=\"mb-3 text-center\">\n        <img\n          className=\"img-fluid graph-bg\"\n          src={baseUrl(`dashboard/analytic/image-placeholder.svg`)}\n          width={\"80px\"}\n          height={\"80px\"}\n        />\n      </div>\n      <div className=\"\">\n        <h5 class=\"text-gray-dark text-center\">No Data Available</h5>\n      </div>\n    </div>\n  );\n};\n\nconst NoData = (props) => {\n\n  return props.status ? (\n    <tr>\n      <td colSpan={props.col}>\n        <GetData />\n      </td>\n    </tr>\n  ) : (\n    <GetData />\n  );\n};\n\nexport default React.memo(NoData);\n","import { Button, CardHeader, CardTitle } from \"react-bootstrap\";\nimport { baseUrl } from \"../../../../../utils\";\n\nconst SectionHeading = (props) => {\n\n  const { title, section, cardTitleCss, icon, iconFull, selectedWallFeed, moreData, total, handlePopup, headingMargin, isDashboard } = props\n\n  // && selectedWallFeed && Object.keys(selectedWallFeed).length\n\n  return (\n    <CardHeader className={`${section==1 ? 'p-0 border-0' : section==2 ? 'p-5' : section==3 ? 'p-0 pb-3' : 'px-5 pt-5 border-0 pb-0'}`}>\n      <CardTitle className={cardTitleCss ? cardTitleCss : `mb-0 d-flex align-items-center justify-content-between ${isDashboard ? isDashboard : \"\"}`}>\n        <h6 class={`card-label font-weight-bolder ${!headingMargin ? 'm-0' : ''} `}>\n         { icon ? <img src={baseUrl(`dashboard/analytic/${icon}.svg`)}  height={\"20px\"} width={\"20px\"} /> : null }\n         { iconFull ? <img src={iconFull}  height={\"20px\"} width={\"20px\"} />  : null }   {title}</h6>\n         { (total > 5) || moreData ? (\n          <Button\n            variant=\"link\"\n            className=\"p-0\"\n            onClick={() => handlePopup(true)}\n          >\n            See More\n          </Button>\n        ) : null\n        }\n      </CardTitle>\n    </CardHeader>\n  );\n};\n\nexport default SectionHeading;\n","    import React from \"react\";\n\n    const AssetsbySkeleton = () => {\n    return (\n        [1,2,3,4,5].map(()=>{\n            return(\n        <div class=\"d-flex p-6 border rounded mb-4\">\n        <div class=\"d-flex align-items-center m_grid_author w-100\">\n          <div class=\"sk_line sk_line_height_16 sk_line_10 m-0 me-3 rounded\"></div>\n          <div class=\"w-50\">\n              <h3 class=\"sk_line sk_line_height_16 sk_line_90 m-0\"></h3>\n          </div>\n        </div>\n        <div class=\"sk_line sk_line_10 sk_line_height_16 m-0\"></div>\n    </div>)})\n    );\n    };\n\n    export default React.memo(AssetsbySkeleton);\n"],"names":["AssetsLanguage","props","getFlags","loader","selectedWallFeed","postbyLanguage","dateFilter","getLanguage","setgetLanguage","useState","useEffect","languageTags","feedList","Object","keys","length","map","item","id","langs","result","filter","lang","hideLangFilter","feedId","splice","sort","a","b","count","forEach","language","push","_jsxs","Card","className","children","_jsx","SectionHeading","section","title","CardBody","AssetsbySkeleton","data","index","FilterModeration","link","class","getFlagCode","NoData","React","isClass","Link","to","localStorage","getItem","moment","startDate","format","endDate","GetData","src","baseUrl","width","height","status","colSpan","col","cardTitleCss","icon","iconFull","moreData","total","handlePopup","headingMargin","isDashboard","CardHeader","CardTitle","Button","variant","onClick"],"sourceRoot":""}