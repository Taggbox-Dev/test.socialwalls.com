{"version":3,"file":"static/js/8717.742b5652.chunk.js","mappings":"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","sources":["app/Display/analytics-new/components/content/AssetsLanguage.js","app/Display/analytics-new/layout/common/NoData.js","app/Display/analytics-new/layout/skeleton/AssetsbySkeleton.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Card, CardBody, CardHeader } from \"react-bootstrap\";\r\nimport { getFlagCode, hideLangFilter } from \"../../../../../utils\";\r\nimport { getLanguageTags } from \"../../../../../actions/loginActions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { GET_POST_LANGUAGE, POST_BY_LANGUAGE_LOADER } from \"../../../../../redux/reducersKeys\";\r\nimport AssetsbySkeleton from \"../../layout/skeleton/AssetsbySkeleton\";\r\nimport NoData from \"../../layout/common/NoData\";\r\n\r\nconst AssetsLanguage = (props) => {\r\n  const { postbyLanguage, getFlags, loader } = props;\r\n  const dispatch = useDispatch()\r\n\r\n    const languageTags=()=>{\r\n\r\n      const feeds = props.feeds;\r\n      const feedList = feeds && Object.keys(feeds).length > 0 ? feeds.map(item => item) : [];\r\n      \r\n      dispatch({ type: POST_BY_LANGUAGE_LOADER, payload: true })\r\n      getLanguageTags(localStorage.getItem('ownerId')).then((response) => {\r\n\r\n          let langs = response.data;\r\n          let result = [];\r\n          if(langs && langs.length > 0){\r\n              langs = langs.filter((lang) => {\r\n                     if(hideLangFilter(feedList, lang.feedId)) \r\n                    return lang;\r\n              });\r\n              langs.sort((a, b) => b.count - a.count).forEach(lang => {\r\n                  if(lang.language != \"\"){\r\n                      result.push(lang.language);\r\n                  }\r\n              });\r\n          }\r\n          dispatch({ type: GET_POST_LANGUAGE, payload: langs })\r\n       }).catch(ex => {\r\n        dispatch({ type: POST_BY_LANGUAGE_LOADER, payload: false })\r\n       });\r\n      }\r\n \r\n\r\n  useEffect(() => {\r\n      languageTags()\r\n  }, []);\r\n\r\n  \r\n  return (\r\n    <Card className=\"sw-card-custom gutter-b card-shadow mb-5\">\r\n      {console.log('langslangslangslangs',props.postbyLanguage)}\r\n      <CardHeader className=\"p-5 d-flex align-items-center justify-content-between\">\r\n        <h6 class=\"card-label font-weight-bolder m-0\">Posts By Language</h6>\r\n      </CardHeader>\r\n      <CardBody className=\"px-5\">  \r\n         { loader ? <AssetsbySkeleton/> : postbyLanguage && Object.keys(postbyLanguage).length\r\n          ? postbyLanguage.map((data,index) => {\r\n              return (\r\n                <div className=\"px-5 py-2 border rounded mb-4\">\r\n                  <div className=\"d-flex align-items-center justify-content-between\">\r\n                    <div className=\"d-flex align-items-center me-10\">\r\n                      <div className=\"rounded me-3\">\r\n                        <div class={`iti-flag ${getFlagCode(data.language,getFlags)}`}></div> \r\n                      </div>\r\n                      <div className=\"\">\r\n                        <p className=\"text-dark mb-0 font-weight-boldest overflow-hidden text-nowrap text-ellipsis author_name text-capitalize\">\r\n                           { data.language }\r\n                        </p>\r\n                      </div>                 \r\n                    </div>\r\n                    <p className=\"count-tag border font-weight-boldest m-0\">\r\n                     { data.count }\r\n                    </p>\r\n                  </div>\r\n                  </div>\r\n                );\r\n              })\r\n            : <NoData/>}\r\n        </CardBody>\r\n      </Card>\r\n  );\r\n};\r\n\r\nexport default React.memo(AssetsLanguage);\r\n","import React from \"react\";\r\nimport { baseUrl } from \"../../../../../utils\";\r\n\r\nconst GetData = () => {\r\n  return (\r\n    <div className=\"placeholder-image py-10 d-flex flex-column justify-content-center\">\r\n      <div className=\"mb-3 text-center\">\r\n        <img\r\n          className=\"img-fluid graph-bg\"\r\n          src={baseUrl(`dashboard/analytic/image-placeholder.svg`)}\r\n          width={\"80px\"}\r\n          height={\"80px\"}\r\n        />\r\n      </div>\r\n      <div className=\"\">\r\n        <h5 class=\"text-gray-dark text-center\">No Data Available</h5>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NoData = (props) => {\r\n\r\n  return props.status ? (\r\n    <tr>\r\n      <td colSpan={props.col}>\r\n        <GetData />\r\n      </td>\r\n    </tr>\r\n  ) : (\r\n    <GetData />\r\n  );\r\n};\r\n\r\nexport default React.memo(NoData);\r\n","    import React from \"react\";\r\n\r\n    const AssetsbySkeleton = () => {\r\n    return (\r\n        [1,2,3,4,5].map(()=>{\r\n            return(\r\n        <div class=\"d-flex p-6 border rounded mb-4\">\r\n        <div class=\"d-flex align-items-center m_grid_author w-100\">\r\n          <div class=\"sk_line sk_line_height_16 sk_line_10 m-0 me-3 rounded\"></div>\r\n          <div class=\"w-50\">\r\n              <h3 class=\"sk_line sk_line_height_16 sk_line_90 m-0\"></h3>\r\n          </div>\r\n        </div>\r\n        <div class=\"sk_line sk_line_10 sk_line_height_16 m-0\"></div>\r\n    </div>)})\r\n    );\r\n    };\r\n\r\n    export default React.memo(AssetsbySkeleton);\r\n"],"names":["AssetsLanguage","props","postbyLanguage","getFlags","loader","dispatch","useDispatch","useEffect","languageTags","feeds","feedList","Object","keys","length","map","item","type","POST_BY_LANGUAGE_LOADER","payload","getLanguageTags","localStorage","getItem","then","response","langs","data","result","filter","lang","hideLangFilter","feedId","sort","a","b","count","forEach","language","push","GET_POST_LANGUAGE","catch","ex","_jsxs","Card","className","children","console","log","_jsx","CardHeader","class","CardBody","AssetsbySkeleton","index","getFlagCode","NoData","React","GetData","src","baseUrl","width","height","status","colSpan","col"],"sourceRoot":""}