{"version":3,"file":"static/js/4243.6fdb2d97.chunk.js","mappings":"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","sources":["app/Display/analytics-new/components/content/LeaderBoard.js","app/Display/analytics-new/components/content/authorInfo.js","app/Display/analytics-new/layout/common/NoData.js","app/Display/analytics-new/layout/common/SeeMoreModal.js","app/Display/analytics-new/layout/common/connectButton.js"],"sourcesContent":["import React, { Suspense, useState } from \"react\";\r\nimport { Button, Card, CardBody, CardHeader, CardTitle, Table } from \"react-bootstrap\";\r\nimport SeeMoreModal from \"../../layout/common/SeeMoreModal\"; \r\nimport ConnectButton from \"../../layout/common/connectButton\";\r\nimport AuthorInfo from \"./authorInfo\";\r\nimport NoData from \"../../layout/common/NoData\";\r\nconst LeaderbordSkeleton = React.lazy(() =>\r\n  import(\"../../layout/skeleton/LeaderbordSkeleton\")\r\n);\r\n\r\nconst LeaderbordPopup = React.lazy(() =>\r\n  import(\"../../layout/popup/LeaderbordPopup\")\r\n);\r\n\r\nconst LeaderBoard = (props) => {\r\n\r\n  const { leaderBoard, loader } = props;\r\n\r\n  const [show, setShow] = useState(false)\r\n\r\n  const handlePopup = event => {  \r\n    setShow(event)\r\n  }\r\n\r\n  return (\r\n   <>\r\n    <Card className=\"sw-card-custom gutter-b card-shadow mb-5\">\r\n      <CardHeader className=\"px-5 pt-5 border-0 pb-0\">\r\n        <CardTitle className=\"mb-0 d-flex align-items-center justify-content-between\">\r\n          <h6 class=\"card-label font-weight-bolder m-0\">Leader Board</h6>\r\n          { leaderBoard.total>5 ?  <Button variant=\"link\" className=\"p-0\" onClick={()=>handlePopup(true)}>See More</Button> : null }\r\n        </CardTitle>\r\n      </CardHeader>\r\n      <CardBody className=\"py-5 px-0\">\r\n        <Table responsive>\r\n          <thead>\r\n            <tr>\r\n              <th style={{ width: \"10%\" }}>\r\n                S No.\r\n              </th>\r\n              <th style={{ width: \"20%\" }}>\r\n                Name\r\n              </th>\r\n              <th style={{ width: \"15%\" }}>\r\n                No. Followres\r\n              </th>\r\n              <th style={{ width: \"15%\" }}>\r\n                No. of Posts\r\n              </th>\r\n              <th style={{ width: \"30%\" }}>\r\n                Social Accout\r\n              </th>\r\n              <th style={{ width: \"10%\" }}></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            { loader ? <Suspense fallback={<></>}> <LeaderbordSkeleton/> </Suspense> : leaderBoard && Object.keys(leaderBoard.data)\r\n              ? leaderBoard.data.map((data,index) => {\r\n                  return (\r\n                    <tr className=\"border-top\">\r\n                      <td>\r\n                        <strong>{index+1}.</strong>\r\n                      </td>\r\n                      <td>\r\n                         <AuthorInfo picture={data.image} username={data.author.name} date={''} />\r\n                      </td>\r\n                      <td>\r\n                        <strong>{data.author.follower}</strong>\r\n                      </td>\r\n                      <td>\r\n                        <strong>{data.postCount}</strong>\r\n                      </td>\r\n                      <td>\r\n                        <i className={`fab ${data.network.icon} font-size-h2`}></i>\r\n                      </td>\r\n                      <td>\r\n                        <ConnectButton link={data.links}/>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              : <NoData status={1} col={5}/>\r\n             }\r\n\r\n          </tbody>\r\n        </Table>\r\n      </CardBody>\r\n     </Card>\r\n\r\n   {leaderBoard.total>5 ? \r\n    <SeeMoreModal size={'lg'} showHide={show} handlePopup={handlePopup} title={'Leader Bord'}>\r\n      <Suspense fallback={<></>}>\r\n         <LeaderbordPopup {...props} />\r\n       </Suspense>  \r\n    </SeeMoreModal> : null }\r\n    </>    \r\n  );\r\n};\r\n\r\nexport default React.memo(LeaderBoard);\r\n","import React from \"react\";\r\nimport { manageSpace } from \"../../../../../utils\";\r\nimport moment from \"moment\";\r\n\r\nconst AuthorInfo = (props) => {\r\n  return (\r\n    <div className=\"d-flex align-items-center w-50\">\r\n      <div className=\"position-relative\">\r\n        <div className=\"symbol symbol-35 symbol-light me-3 con_user_img cursor-pointer rounded-circle overflow-hidden\">\r\n          <div className=\"symbol-image\">p</div>\r\n          {/* <img\r\n            src={props.picture}\r\n            className=\"img-fluid\"\r\n            width={\"20px\"}\r\n            height={\"20px\"}\r\n          /> */}\r\n        </div>\r\n        { props.isIcon ?  <div className=\"m_social_icon_new card-shadow position-absolute bg-white rounded-circle d-flex align-items-center justify-content-center\">\r\n                <i className={`fab ${props.isIcon}`}></i>\r\n            </div> : null }\r\n      </div>\r\n      <div class=\"d-flex text-left flex-column conn_user_info cursor-pointer\">\r\n        <p class=\"text-dark mb-0 font-weight-boldest overflow-hidden text-nowrap text-ellipsis author_name text-capitalize\">\r\n          {props.username}\r\n        </p>\r\n        <p class=\"m-0\">\r\n          <small class=\"text-muted overflow-hidden text-nowrap text-ellipsis post_count me-2 \">\r\n            { props.username ? `@${manageSpace(props.username)}` : null}\r\n          </small>\r\n          <small class=\"text-muted overflow-hidden text-nowrap text-ellipsis followers_count \">\r\n              {  moment(new Date(props.date * 1000)).fromNow() }\r\n          </small>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(AuthorInfo);\r\n","import React from \"react\";\r\nimport { baseUrl } from \"../../../../../utils\";\r\n\r\nconst GetData = () => {\r\n  return (\r\n    <div className=\"placeholder-image py-10 d-flex flex-column justify-content-center\">\r\n      <div className=\"mb-3 text-center\">\r\n        <img\r\n          className=\"img-fluid graph-bg\"\r\n          src={baseUrl(`dashboard/analytic/image-placeholder.svg`)}\r\n          width={\"80px\"}\r\n          height={\"80px\"}\r\n        />\r\n      </div>\r\n      <div className=\"\">\r\n        <h5 class=\"text-gray-dark text-center\">No Data Available</h5>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NoData = (props) => {\r\n\r\n  return props.status ? (\r\n    <tr>\r\n      <td colSpan={props.col}>\r\n        <GetData />\r\n      </td>\r\n    </tr>\r\n  ) : (\r\n    <GetData />\r\n  );\r\n};\r\n\r\nexport default React.memo(NoData);\r\n","import React from \"react\";\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ButtonToolbar,\r\n    Col,\r\n    Container,\r\n    Row\r\n} from \"react-bootstrap\";\r\n\r\n\r\nexport default class SeeMoreModal extends React.Component {\r\n    render() {\r\n        const { showHide, handlePopup, title, children, size } = this.props;\r\n        return (\r\n            <Modal\r\n                show={showHide}\r\n                onHide={()=>handlePopup(false)}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                size={size}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"p-2\">\r\n                    <div className=\"more_container\">\r\n                        {children}\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","    const ConnectButton = (props) => {\r\n\r\n    return (\r\n        <div className=\"conn_status_wrap\">\r\n        <button\r\n            onClick={() => window.open(props.link)}\r\n            type=\"button\"\r\n            className=\"btn btn-primary btn-min-w btn-sm rounded\"\r\n        >\r\n            <span className=\"position-relative\">\r\n            <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"22.213\"\r\n                height=\"18\"\r\n                viewBox=\"0 0 22.213 18\"\r\n                className=\"h-75 align-self-end w-20 me-1\"\r\n            >\r\n                <g id=\"noun-talk-2902544\" transform=\"translate(-98.007 -75.786)\">\r\n                <path\r\n                    id=\"Path_6701\"\r\n                    data-name=\"Path 6701\"\r\n                    d=\"M103.686,84.417a1.084,1.084,0,1,1-.317-.766A1.084,1.084,0,0,1,103.686,84.417Zm2.9-1.084h0a1.084,1.084,0,1,0,.766.317,1.084,1.084,0,0,0-.766-.317Zm3.979,0h0a1.084,1.084,0,1,0,.766.317,1.084,1.084,0,0,0-.766-.317Zm9.659-5.711v8.172a1.839,1.839,0,0,1-1.616,1.823l.625,2.7a.617.617,0,0,1-1,.608l-3.07-2.625v.2a1.838,1.838,0,0,1-1.836,1.836h-9.463L100,93.638a.617.617,0,0,1-1-.608l.625-2.7A1.838,1.838,0,0,1,98.007,88.5V80.331a1.838,1.838,0,0,1,1.836-1.836h3.226v-.873a1.838,1.838,0,0,1,1.836-1.836h13.478a1.838,1.838,0,0,1,1.836,1.836Zm-6.3,2.709a.6.6,0,0,0-.6-.6H99.843a.6.6,0,0,0-.6.6V88.5a.6.6,0,0,0,.6.6h.552a.617.617,0,0,1,.6.756l-.375,1.621,2.607-2.229a.618.618,0,0,1,.4-.148h9.691a.6.6,0,0,0,.6-.6Zm5.063-2.709a.6.6,0,0,0-.6-.6H104.906a.6.6,0,0,0-.6.6V78.5h9.017a1.838,1.838,0,0,1,1.836,1.836v6.35l2.448,2.093-.375-1.621a.617.617,0,0,1,.6-.756h.553a.6.6,0,0,0,.6-.6Z\"\r\n                    fill=\"#ffffff\"\r\n                ></path>\r\n                </g>\r\n            </svg> \r\n            Connect \r\n            </span>\r\n        </button>\r\n        </div>\r\n    );\r\n    };\r\n\r\n    export default ConnectButton"],"names":["LeaderbordSkeleton","React","LeaderbordPopup","LeaderBoard","props","leaderBoard","loader","show","setShow","useState","handlePopup","event","_jsxs","_Fragment","children","Card","className","_jsx","CardHeader","CardTitle","class","total","Button","variant","onClick","CardBody","Table","responsive","style","width","Suspense","fallback","Object","keys","data","map","index","AuthorInfo","picture","image","username","author","name","date","follower","postCount","network","icon","ConnectButton","link","links","NoData","status","col","SeeMoreModal","size","showHide","title","isIcon","manageSpace","moment","Date","fromNow","GetData","src","baseUrl","height","colSpan","render","this","Modal","onHide","backdrop","keyboard","centered","Header","closeButton","Title","Body","window","open","type","xmlns","viewBox","id","transform","d","fill"],"sourceRoot":""}